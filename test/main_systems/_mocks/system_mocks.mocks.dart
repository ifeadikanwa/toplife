// Mocks generated by Mockito 5.4.2 from annotations
// in toplife/test/main_systems/_mocks/system_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i243;

import 'package:drift/drift.dart' as _i236;
import 'package:flutter/material.dart' as _i244;
import 'package:mockito/mockito.dart' as _i1;
import 'package:toplife/core/data_source/drift_database/database_provider.dart'
    as _i2;
import 'package:toplife/game_manager/domain/usecases/change_current_player_usecase.dart'
    as _i56;
import 'package:toplife/game_manager/domain/usecases/control_game/decay_and_alter_player_stats_usecase.dart'
    as _i64;
import 'package:toplife/game_manager/domain/usecases/control_game/game_controller_usecase.dart'
    as _i63;
import 'package:toplife/game_manager/domain/usecases/create_new_game_usecase.dart'
    as _i50;
import 'package:toplife/game_manager/domain/usecases/delete_game_usecase.dart'
    as _i52;
import 'package:toplife/game_manager/domain/usecases/game_usecases.dart'
    as _i238;
import 'package:toplife/game_manager/domain/usecases/get_all_active_games_usecase.dart'
    as _i53;
import 'package:toplife/game_manager/domain/usecases/get_current_game_and_player_usecase.dart'
    as _i59;
import 'package:toplife/game_manager/domain/usecases/get_game_usecase.dart'
    as _i54;
import 'package:toplife/game_manager/domain/usecases/get_last_played_active_game_usecase.dart'
    as _i55;
import 'package:toplife/game_manager/domain/usecases/get_player_bar_info_from_data_usecase.dart'
    as _i61;
import 'package:toplife/game_manager/domain/usecases/get_player_bar_info_usecase.dart'
    as _i60;
import 'package:toplife/game_manager/domain/usecases/move_time_forward_usecase.dart'
    as _i57;
import 'package:toplife/game_manager/domain/usecases/set_last_played_active_game_usecase.dart'
    as _i58;
import 'package:toplife/game_manager/domain/usecases/update_game_usecase.dart'
    as _i51;
import 'package:toplife/game_manager/domain/usecases/watch_last_played_active_game_usecase.dart'
    as _i62;
import 'package:toplife/main_systems/system_event/domain/model/info_models/event_person_pair.dart'
    as _i245;
import 'package:toplife/main_systems/system_event/event_manager/event_manager.dart'
    as _i242;
import 'package:toplife/main_systems/system_event/event_manager/manage_events/manage_events.dart'
    as _i112;
import 'package:toplife/main_systems/system_job/domain/usecases/add_location_to_jobs_list._usecase.dart'
    as _i72;
import 'package:toplife/main_systems/system_job/domain/usecases/check_if_qualified_for_job_usecase.dart'
    as _i65;
import 'package:toplife/main_systems/system_job/domain/usecases/employ_person_for_fulltime_job_usecase.dart'
    as _i67;
import 'package:toplife/main_systems/system_job/domain/usecases/end_all_active_fulltime_employment_usecase.dart'
    as _i66;
import 'package:toplife/main_systems/system_job/domain/usecases/get/get_employment_pairs_from_employment_usecase.dart'
    as _i71;
import 'package:toplife/main_systems/system_job/domain/usecases/get/get_job_titles_from_employments_usecase.dart'
    as _i70;
import 'package:toplife/main_systems/system_job/domain/usecases/get_a_valid_list_of_fulltime_jobs_usecase.dart'
    as _i68;
import 'package:toplife/main_systems/system_job/domain/usecases/job_usecases.dart'
    as _i239;
import 'package:toplife/main_systems/system_job/domain/usecases/watch/watch_active_employments_usecase.dart'
    as _i69;
import 'package:toplife/main_systems/system_journal/domain/usecases/add_to_journal_usecase.dart'
    as _i107;
import 'package:toplife/main_systems/system_journal/domain/usecases/get_players_journals_usecase.dart'
    as _i109;
import 'package:toplife/main_systems/system_journal/domain/usecases/get_todays_journal_usecase.dart'
    as _i110;
import 'package:toplife/main_systems/system_journal/domain/usecases/journal_usecases.dart'
    as _i241;
import 'package:toplife/main_systems/system_journal/domain/usecases/prepare_journal_entry_usecase.dart'
    as _i108;
import 'package:toplife/main_systems/system_journal/domain/usecases/watch_journal_usecase.dart'
    as _i111;
import 'package:toplife/main_systems/system_person/domain/usecases/get/get_person_deplete_stats_flag_usecase.dart'
    as _i44;
import 'package:toplife/main_systems/system_person/domain/usecases/get/get_person_stats_usecase.dart'
    as _i26;
import 'package:toplife/main_systems/system_person/domain/usecases/get/get_person_usecase.dart'
    as _i27;
import 'package:toplife/main_systems/system_person/domain/usecases/get/get_player_information_from_data_usecase.dart'
    as _i43;
import 'package:toplife/main_systems/system_person/domain/usecases/get/get_player_money_usecase.dart'
    as _i28;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_deplete_stats_flag/create_or_update_deplete_stats_flag_usecase.dart'
    as _i45;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_deplete_stats_flag/delete_person_deplete_stats_flag_usecase.dart'
    as _i46;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_deplete_stats_flag/reset_deplete_stats_flag_usecase.dart'
    as _i48;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_deplete_stats_flag/toggle_deplete_stats_flag_usecase.dart'
    as _i47;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_money/add_money_to_player_usecase.dart'
    as _i30;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_money/check_if_player_can_afford_it_usecase.dart'
    as _i40;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_money/take_money_from_player_usecase.dart'
    as _i29;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/create_adult_person_usecase.dart'
    as _i9;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/create_child_person_usecase.dart'
    as _i10;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/delete_person_usecase.dart'
    as _i25;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/generate_a_person_usecase.dart'
    as _i3;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/generate_baby_traits_usecase.dart'
    as _i8;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/generate_list_of_person_usecase.dart'
    as _i4;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/generate_personality_usecase.dart'
    as _i5;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/generate_stance_usecase.dart'
    as _i7;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_person/generate_stats_usecase.dart'
    as _i6;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/npc/deplete_baby_energy_usecase.dart'
    as _i11;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/npc/deplete_baby_hunger_usecase.dart'
    as _i12;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/npc/deplete_non_player_hunger_usecase.dart'
    as _i19;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/npc/make_non_player_hungry_usecase.dart'
    as _i23;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/deplete/deplete_main_player_athleticism_usecase.dart'
    as _i17;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/deplete/deplete_main_player_energy_usecase.dart'
    as _i13;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/deplete/deplete_main_player_health_usecase.dart'
    as _i15;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/deplete/deplete_main_player_hunger_usecase.dart'
    as _i14;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/deplete/deplete_main_player_mood_usecase.dart'
    as _i16;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/increase/eat/eat_usecase.dart'
    as _i20;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/increase/eat/quick_eat_usecase.dart'
    as _i21;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/increase/increase_main_player_soberness_usecase.dart.dart'
    as _i18;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/increase/sleep_usecase.dart'
    as _i22;
import 'package:toplife/main_systems/system_person/domain/usecases/manage_survival_stats/player/side_effects/energy_and_hunger_emergency_mode_side_effects_usecase.dart'
    as _i49;
import 'package:toplife/main_systems/system_person/domain/usecases/person_usecases.dart'
    as _i237;
import 'package:toplife/main_systems/system_person/domain/usecases/update_general/update_person_usecase.dart'
    as _i24;
import 'package:toplife/main_systems/system_person/domain/usecases/update_general/update_stats_usecase.dart'
    as _i31;
import 'package:toplife/main_systems/system_person/domain/usecases/update_specific_stats/update_athleticism_stats_usecase.dart'
    as _i39;
import 'package:toplife/main_systems/system_person/domain/usecases/update_specific_stats/update_energy_stats_usecase.dart'
    as _i35;
import 'package:toplife/main_systems/system_person/domain/usecases/update_specific_stats/update_health_stats_usecase.dart'
    as _i33;
import 'package:toplife/main_systems/system_person/domain/usecases/update_specific_stats/update_hunger_stats_usecase.dart'
    as _i34;
import 'package:toplife/main_systems/system_person/domain/usecases/update_specific_stats/update_intellect_stats_usecase.dart'
    as _i38;
import 'package:toplife/main_systems/system_person/domain/usecases/update_specific_stats/update_looks_stats_usecase.dart'
    as _i36;
import 'package:toplife/main_systems/system_person/domain/usecases/update_specific_stats/update_mood_stats_usecase.dart'
    as _i32;
import 'package:toplife/main_systems/system_person/domain/usecases/update_specific_stats/update_sober_stats_usecase.dart'
    as _i37;
import 'package:toplife/main_systems/system_person/domain/usecases/watch/watch_person_stats_usecase.dart'
    as _i42;
import 'package:toplife/main_systems/system_person/domain/usecases/watch/watch_person_usecase.dart'
    as _i41;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/base_down_payment_calculator_usecase.dart'
    as _i131;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/base_loan_amount_calculator.dart'
    as _i132;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/car/add_car_loan_to_bills_usecase.dart'
    as _i115;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/car/car_loan_calculator_usecase.dart'
    as _i123;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/car/car_loan_recurring_payment_calculator_usecase.dart'
    as _i126;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/car/check_if_there_is_an_existing_car_loan_usecase.dart'
    as _i129;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/car/remove_car_loan_from_bills_usecase.dart'
    as _i116;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/house/add_mortgage_loan_to_bills_usecase.dart'
    as _i117;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/house/add_property_tax_to_bills_usecase.dart'
    as _i119;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/house/check_if_there_is_an_existing_mortgage_loan_usecase.dart'
    as _i130;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/house/mortgage_loan_calculator_usecase.dart'
    as _i124;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/house/mortgage_loan_recurring_payment_calculator_usecase.dart'
    as _i127;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/house/remove_mortgage_loan_from_bills_usecase.dart'
    as _i118;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/house/remove_property_tax_from_bills_usecase.dart'
    as _i120;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/school/add_student_loan_to_bills_usecase.dart'
    as _i121;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/school/remove_student_loan_from_bills_usecase.dart'
    as _i122;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/school/student_loan_calculator_usecase.dart'
    as _i125;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/loans/school/student_loan_recurring_payment_calculator_usecase.dart'
    as _i128;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/recurring_bills_usecases.dart'
    as _i246;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/regular/add_rent_to_bills_usecase.dart'
    as _i113;
import 'package:toplife/main_systems/system_recurring_bills_and_loans/domain/usecases/regular/remove_rent_from_bills_usecase.dart'
    as _i114;
import 'package:toplife/main_systems/system_relationship/domain/usecases/any_relationship_pair/get_any_relationship_pair_usecase.dart'
    as _i192;
import 'package:toplife/main_systems/system_relationship/domain/usecases/any_relationship_pair/get_relationship_level_from_any_given_relationship_pair_usecase.dart'
    as _i193;
import 'package:toplife/main_systems/system_relationship/domain/usecases/any_relationship_pair/update_any_relationship_amount_usecase.dart'
    as _i154;
import 'package:toplife/main_systems/system_relationship/domain/usecases/check/check_if_person_is_interested_in_relationship_usecase.dart'
    as _i173;
import 'package:toplife/main_systems/system_relationship/domain/usecases/family/create_child_parent_relationship_usecase.dart'
    as _i134;
import 'package:toplife/main_systems/system_relationship/domain/usecases/family/create_new_player_family_usecase.dart'
    as _i133;
import 'package:toplife/main_systems/system_relationship/domain/usecases/family/create_sibling_relationship_usecase.dart'
    as _i135;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationship_pairs/get_child_relationship_pairs_from_children_usecase.dart'
    as _i172;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationship_pairs/get_friend_relationship_pairs_from_friends_usecase.dart'
    as _i165;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationship_pairs/get_grave_relationship_pairs_from_graves_usecase.dart'
    as _i170;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationship_pairs/get_inlaw_relationship_pairs_from_inlaws_usecase.dart'
    as _i171;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationship_pairs/get_parent_relationship_pairs_from_parents_usecase.dart'
    as _i168;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationship_pairs/get_partner_relationship_pairs_from_partners_usecase.dart'
    as _i169;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationship_pairs/get_relative_relationship_pairs_from_relatives_usecase.dart'
    as _i167;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationship_pairs/get_sibling_relationship_pairs_from_siblings_usecase.dart'
    as _i166;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationships/get_children_usecase.dart'
    as _i148;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationships/get_current_partner_usecase.dart'
    as _i140;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationships/get_friends_usecase.dart'
    as _i141;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationships/get_piblings_usecase.dart'
    as _i146;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationships/get_relationship_pair_based_on_type_usecase.dart'
    as _i142;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_relationships/get_siblings_usecase.dart'
    as _i144;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_acquaintance_relationship_pair_usecase.dart'
    as _i183;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_child_relationship_pair_usecase.dart'
    as _i184;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_friend_relationship_pair_usecase.dart'
    as _i185;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_grave_relationship_pair_usecase.dart'
    as _i186;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_inlaw_relationship_pair_usecase.dart'
    as _i187;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_parent_relationship_pair_usecase.dart'
    as _i188;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_partner_relationship_pair_usecase.dart'
    as _i189;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_relative_relationship_pair_usecase.dart'
    as _i191;
import 'package:toplife/main_systems/system_relationship/domain/usecases/get_specific_relationship_pair/get_sibling_relationship_pair_usecase.dart'
    as _i190;
import 'package:toplife/main_systems/system_relationship/domain/usecases/relationship_usecases.dart'
    as _i247;
import 'package:toplife/main_systems/system_relationship/domain/usecases/romantic/create_exclusive_romantic_relationship_usecase.dart'
    as _i136;
import 'package:toplife/main_systems/system_relationship/domain/usecases/romantic/end_all_partner_relationship_not_involving_a_certain_person_usecase.dart'
    as _i137;
import 'package:toplife/main_systems/system_relationship/domain/usecases/romantic/end_partner_relationship_usecase.dart'
    as _i138;
import 'package:toplife/main_systems/system_relationship/domain/usecases/romantic/get_married_usecase.dart'
    as _i139;
import 'package:toplife/main_systems/system_relationship/domain/usecases/update/update_acquaintance_relationship_usecase.dart'
    as _i153;
import 'package:toplife/main_systems/system_relationship/domain/usecases/update/update_child_relationship_usecase.dart'
    as _i149;
import 'package:toplife/main_systems/system_relationship/domain/usecases/update/update_friend_relationship_usecase.dart'
    as _i152;
import 'package:toplife/main_systems/system_relationship/domain/usecases/update/update_inlaw_relationship_usecase.dart'
    as _i151;
import 'package:toplife/main_systems/system_relationship/domain/usecases/update/update_parent_relationship_usecase.dart'
    as _i150;
import 'package:toplife/main_systems/system_relationship/domain/usecases/update/update_partner_relationship_usecase.dart'
    as _i143;
import 'package:toplife/main_systems/system_relationship/domain/usecases/update/update_relative_relationship_usecase.dart'
    as _i147;
import 'package:toplife/main_systems/system_relationship/domain/usecases/update/update_sibling_relationship_usecase.dart'
    as _i145;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_active_parents_usecase.dart'
    as _i155;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_active_partners_usecase.dart'
    as _i156;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_children_usecase.dart'
    as _i157;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_coparents_usecase.dart'
    as _i158;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_exes_usecase.dart'
    as _i159;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_friends_usecase.dart'
    as _i160;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_graves_usecase.dart'
    as _i161;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_inlaws_usecase.dart'
    as _i162;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_relatives_usecase.dart'
    as _i163;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_relationships/watch_all_siblings_usecase.dart'
    as _i164;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_acquaintance_usecase.dart'
    as _i174;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_child_usecase.dart'
    as _i175;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_friend_usecase.dart'
    as _i176;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_grave_usecase.dart'
    as _i177;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_inlaw_usecase.dart'
    as _i178;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_parent_usecase.dart'
    as _i179;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_partner_usecase.dart'
    as _i180;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_relative_usecase.dart'
    as _i182;
import 'package:toplife/main_systems/system_relationship/domain/usecases/watch_specific_relationship/watch_sibling_usecase.dart'
    as _i181;
import 'package:toplife/main_systems/system_school/domain/usecases/admission/admit_into_doctorate_school_usecase.dart'
    as _i98;
import 'package:toplife/main_systems/system_school/domain/usecases/admission/admit_into_graduate_school_usecase.dart'
    as _i99;
import 'package:toplife/main_systems/system_school/domain/usecases/admission/admit_into_law_school_usecase.dart'
    as _i101;
import 'package:toplife/main_systems/system_school/domain/usecases/admission/admit_into_medical_school_usecase.dart'
    as _i102;
import 'package:toplife/main_systems/system_school/domain/usecases/admission/admit_into_nursing_school_usecase.dart'
    as _i103;
import 'package:toplife/main_systems/system_school/domain/usecases/admission/admit_into_pharmacy_school_usecase.dart'
    as _i104;
import 'package:toplife/main_systems/system_school/domain/usecases/admission/admit_into_teacher_education_program_usecase.dart'
    as _i105;
import 'package:toplife/main_systems/system_school/domain/usecases/admission/admit_into_undegraduate_school_usecase.dart'
    as _i100;
import 'package:toplife/main_systems/system_school/domain/usecases/application/apply_to_doctorate_school_usecase.dart'
    as _i90;
import 'package:toplife/main_systems/system_school/domain/usecases/application/apply_to_graduate_school_usecase.dart'
    as _i91;
import 'package:toplife/main_systems/system_school/domain/usecases/application/apply_to_law_school_usecase.dart'
    as _i93;
import 'package:toplife/main_systems/system_school/domain/usecases/application/apply_to_medical_school_usecase.dart'
    as _i94;
import 'package:toplife/main_systems/system_school/domain/usecases/application/apply_to_nursing_school_usecase.dart'
    as _i95;
import 'package:toplife/main_systems/system_school/domain/usecases/application/apply_to_pharmacy_school_usecase.dart'
    as _i96;
import 'package:toplife/main_systems/system_school/domain/usecases/application/apply_to_teacher_education_program_usecase.dart'
    as _i97;
import 'package:toplife/main_systems/system_school/domain/usecases/application/apply_to_undergraduate_school_usecase.dart'
    as _i92;
import 'package:toplife/main_systems/system_school/domain/usecases/degrees/get_valid_list_of_bachelor_degrees_usecase.dart'
    as _i82;
import 'package:toplife/main_systems/system_school/domain/usecases/degrees/get_valid_list_of_doctorate_degrees_usecase.dart'
    as _i84;
import 'package:toplife/main_systems/system_school/domain/usecases/degrees/get_valid_list_of_education_degrees_usecase.dart'
    as _i85;
import 'package:toplife/main_systems/system_school/domain/usecases/degrees/get_valid_list_of_law_degrees_usecase.dart'
    as _i86;
import 'package:toplife/main_systems/system_school/domain/usecases/degrees/get_valid_list_of_master_degrees_usecase.dart'
    as _i83;
import 'package:toplife/main_systems/system_school/domain/usecases/degrees/get_valid_list_of_medical_degrees_usecase.dart'
    as _i87;
import 'package:toplife/main_systems/system_school/domain/usecases/degrees/get_valid_list_of_nursing_degrees_usecase.dart'
    as _i88;
import 'package:toplife/main_systems/system_school/domain/usecases/degrees/get_valid_list_of_pharmacy_degrees_usecase.dart'
    as _i89;
import 'package:toplife/main_systems/system_school/domain/usecases/end_all_active_school_programs_usecase.dart'
    as _i75;
import 'package:toplife/main_systems/system_school/domain/usecases/get_a_school_pair_from_school_usecase.dart'
    as _i81;
import 'package:toplife/main_systems/system_school/domain/usecases/get_completed_degrees_usecase.dart'
    as _i73;
import 'package:toplife/main_systems/system_school/domain/usecases/get_grade_for_completed_school_usecase.dart'
    as _i76;
import 'package:toplife/main_systems/system_school/domain/usecases/get_highest_attained_degree_level_for_a_completed_degree_usecase.dart'
    as _i74;
import 'package:toplife/main_systems/system_school/domain/usecases/get_highest_grade_for_any_completed_school_in_a_discipline_usecase.dart'
    as _i77;
import 'package:toplife/main_systems/system_school/domain/usecases/get_or_create_degree_usecase.dart'
    as _i78;
import 'package:toplife/main_systems/system_school/domain/usecases/get_school_pairs_from_schools_usecase.dart'
    as _i80;
import 'package:toplife/main_systems/system_school/domain/usecases/graduation/graduate_usecase.dart'
    as _i106;
import 'package:toplife/main_systems/system_school/domain/usecases/school_usecases.dart'
    as _i240;
import 'package:toplife/main_systems/system_school/domain/usecases/watch/watch_active_school_usecase.dart'
    as _i79;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/car/car_is_not_dead_usecase.dart'
    as _i201;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/car/drive_car_usecase.dart'
    as _i200;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/car/get_car_max_condition.dart'
    as _i199;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/car/get_current_car_usecase.dart'
    as _i197;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/car/purchase_car_fully_paid_usecase.dart'
    as _i204;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/car/purchase_car_with_loan_usecase.dart'
    as _i223;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/car/set_all_person_cars_to_not_currently_driving_usecase.dart'
    as _i202;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/car/update_car_usecase.dart'
    as _i203;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/food/add_food_to_fridge_usecase.dart'
    as _i205;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/food/get_all_person_fridge_food_pairs_usecase.dart'
    as _i222;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/food/get_food_record_usecase.dart'
    as _i206;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/food/get_fridge_food_count_usecase.dart'
    as _i207;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/food/purchase_food_usecase.dart'
    as _i208;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/food/use_food_usecase.dart'
    as _i221;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/current_home/delete_current_home_usecase.dart'
    as _i230;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/current_home/get_all_people_in_a_house_usecase.dart'
    as _i231;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/current_home/get_current_home_usecase.dart'
    as _i232;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/current_home/set_current_home_usecase.dart'
    as _i233;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/current_home/watch_all_people_in_a_house_usecase.dart'
    as _i234;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/current_home/watch_current_home_usecase.dart'
    as _i235;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/get_buildings/add_location_to_building_usecase.dart'
    as _i226;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/get_buildings/get_purchase_houses_usecase.dart'
    as _i227;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/get_buildings/get_rental_houses_usecase.dart'
    as _i228;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/get_current_house_storage_space_usecase.dart'
    as _i209;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/get_current_house_usecase.dart'
    as _i198;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/move_into_new_house_usecase.dart'
    as _i229;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/move_storage_to_new_house_usecase.dart'
    as _i220;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/purchase/purchase_house_fully_paid_usecase.dart'
    as _i210;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/purchase/purchase_house_with_loan_usecase.dart'
    as _i224;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/purchase/sign_mortgage_loan_contract.dart'
    as _i225;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/rent/break_old_lease_sign_new_lease_usecase.dart'
    as _i217;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/rent/end_lease_usecase.dart'
    as _i218;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/rent/rent_house_usecase.dart'
    as _i216;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/house/rent/sign_lease_for_rental_usecase.dart'
    as _i219;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/items/add_item_to_storeroom_usecase.dart'
    as _i211;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/items/get_available_storeroom_items_usecase.dart'
    as _i195;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/items/get_item_record_usecase.dart'
    as _i212;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/items/get_storeroom_item_count_usecase.dart'
    as _i213;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/items/get_storeroom_item_pairs_usecase.dart'
    as _i194;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/items/purchase_item_usecase.dart'
    as _i214;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/items/use_storeroom_item_usecase.dart'
    as _i196;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/jewelry/purchase_jewelry_usecase.dart'
    as _i215;
import 'package:toplife/main_systems/system_shop_and_storage/domain/usecases/shop_and_storage_usecases.dart'
    as _i248;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePersonTableCompanion_0 extends _i1.SmartFake
    implements _i2.PersonTableCompanion {
  _FakePersonTableCompanion_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePerson_1 extends _i1.SmartFake implements _i2.Person {
  _FakePerson_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStatsTableCompanion_2 extends _i1.SmartFake
    implements _i2.StatsTableCompanion {
  _FakeStatsTableCompanion_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStats_3 extends _i1.SmartFake implements _i2.Stats {
  _FakeStats_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStanceTableCompanion_4 extends _i1.SmartFake
    implements _i2.StanceTableCompanion {
  _FakeStanceTableCompanion_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStance_5 extends _i1.SmartFake implements _i2.Stance {
  _FakeStance_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerateAPersonUsecase_6 extends _i1.SmartFake
    implements _i3.GenerateAPersonUsecase {
  _FakeGenerateAPersonUsecase_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerateListOfPersonUsecase_7 extends _i1.SmartFake
    implements _i4.GenerateListOfPersonUsecase {
  _FakeGenerateListOfPersonUsecase_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratePersonalityUsecase_8 extends _i1.SmartFake
    implements _i5.GeneratePersonalityUsecase {
  _FakeGeneratePersonalityUsecase_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerateStatsUsecase_9 extends _i1.SmartFake
    implements _i6.GenerateStatsUsecase {
  _FakeGenerateStatsUsecase_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerateStanceUsecase_10 extends _i1.SmartFake
    implements _i7.GenerateStanceUsecase {
  _FakeGenerateStanceUsecase_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerateBabyTraitsUsecase_11 extends _i1.SmartFake
    implements _i8.GenerateBabyTraitsUsecase {
  _FakeGenerateBabyTraitsUsecase_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateAdultPersonUsecase_12 extends _i1.SmartFake
    implements _i9.CreateAdultPersonUsecase {
  _FakeCreateAdultPersonUsecase_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateChildPersonUsecase_13 extends _i1.SmartFake
    implements _i10.CreateChildPersonUsecase {
  _FakeCreateChildPersonUsecase_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepleteBabyEnergyUsecase_14 extends _i1.SmartFake
    implements _i11.DepleteBabyEnergyUsecase {
  _FakeDepleteBabyEnergyUsecase_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepleteBabyHungerUsecase_15 extends _i1.SmartFake
    implements _i12.DepleteBabyHungerUsecase {
  _FakeDepleteBabyHungerUsecase_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepleteMainPlayerEnergyUsecase_16 extends _i1.SmartFake
    implements _i13.DepleteMainPlayerEnergyUsecase {
  _FakeDepleteMainPlayerEnergyUsecase_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepleteMainPlayerHungerUsecase_17 extends _i1.SmartFake
    implements _i14.DepleteMainPlayerHungerUsecase {
  _FakeDepleteMainPlayerHungerUsecase_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepleteMainPlayerHealthUsecase_18 extends _i1.SmartFake
    implements _i15.DepleteMainPlayerHealthUsecase {
  _FakeDepleteMainPlayerHealthUsecase_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepleteMainPlayerMoodUsecase_19 extends _i1.SmartFake
    implements _i16.DepleteMainPlayerMoodUsecase {
  _FakeDepleteMainPlayerMoodUsecase_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepleteMainPlayerAthleticismUsecase_20 extends _i1.SmartFake
    implements _i17.DepleteMainPlayerAthleticismUsecase {
  _FakeDepleteMainPlayerAthleticismUsecase_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIncreaseMainPlayerSobernessUsecase_21 extends _i1.SmartFake
    implements _i18.IncreaseMainPlayerSobernessUsecase {
  _FakeIncreaseMainPlayerSobernessUsecase_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepleteNonPlayerHungerUsecase_22 extends _i1.SmartFake
    implements _i19.DepleteNonPlayerHungerUsecase {
  _FakeDepleteNonPlayerHungerUsecase_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEatUsecase_23 extends _i1.SmartFake implements _i20.EatUsecase {
  _FakeEatUsecase_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuickEatUsecase_24 extends _i1.SmartFake
    implements _i21.QuickEatUsecase {
  _FakeQuickEatUsecase_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSleepUsecase_25 extends _i1.SmartFake implements _i22.SleepUsecase {
  _FakeSleepUsecase_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMakeNonPlayerHungryUsecase_26 extends _i1.SmartFake
    implements _i23.MakeNonPlayerHungryUsecase {
  _FakeMakeNonPlayerHungryUsecase_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdatePersonUsecase_27 extends _i1.SmartFake
    implements _i24.UpdatePersonUsecase {
  _FakeUpdatePersonUsecase_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeletePersonUsecase_28 extends _i1.SmartFake
    implements _i25.DeletePersonUsecase {
  _FakeDeletePersonUsecase_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPersonStatsUsecase_29 extends _i1.SmartFake
    implements _i26.GetPersonStatsUsecase {
  _FakeGetPersonStatsUsecase_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPersonUsecase_30 extends _i1.SmartFake
    implements _i27.GetPersonUsecase {
  _FakeGetPersonUsecase_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPlayerMoneyUsecase_31 extends _i1.SmartFake
    implements _i28.GetPlayerMoneyUsecase {
  _FakeGetPlayerMoneyUsecase_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTakeMoneyFromPlayerUsecase_32 extends _i1.SmartFake
    implements _i29.TakeMoneyFromPlayerUsecase {
  _FakeTakeMoneyFromPlayerUsecase_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddMoneyToPlayerUsecase_33 extends _i1.SmartFake
    implements _i30.AddMoneyToPlayerUsecase {
  _FakeAddMoneyToPlayerUsecase_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatsUsecase_34 extends _i1.SmartFake
    implements _i31.UpdateStatsUsecase {
  _FakeUpdateStatsUsecase_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateMoodStatsUsecase_35 extends _i1.SmartFake
    implements _i32.UpdateMoodStatsUsecase {
  _FakeUpdateMoodStatsUsecase_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateHealthStatsUsecase_36 extends _i1.SmartFake
    implements _i33.UpdateHealthStatsUsecase {
  _FakeUpdateHealthStatsUsecase_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateHungerStatsUsecase_37 extends _i1.SmartFake
    implements _i34.UpdateHungerStatsUsecase {
  _FakeUpdateHungerStatsUsecase_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateEnergyStatsUsecase_38 extends _i1.SmartFake
    implements _i35.UpdateEnergyStatsUsecase {
  _FakeUpdateEnergyStatsUsecase_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateLooksStatsUsecase_39 extends _i1.SmartFake
    implements _i36.UpdateLooksStatsUsecase {
  _FakeUpdateLooksStatsUsecase_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateSoberStatsUsecase_40 extends _i1.SmartFake
    implements _i37.UpdateSoberStatsUsecase {
  _FakeUpdateSoberStatsUsecase_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateIntellectStatsUsecase_41 extends _i1.SmartFake
    implements _i38.UpdateIntellectStatsUsecase {
  _FakeUpdateIntellectStatsUsecase_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateAthleticismStatsUsecase_42 extends _i1.SmartFake
    implements _i39.UpdateAthleticismStatsUsecase {
  _FakeUpdateAthleticismStatsUsecase_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCheckIfPlayerCanAffordItUsecase_43 extends _i1.SmartFake
    implements _i40.CheckIfPlayerCanAffordItUsecase {
  _FakeCheckIfPlayerCanAffordItUsecase_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchPersonUsecase_44 extends _i1.SmartFake
    implements _i41.WatchPersonUsecase {
  _FakeWatchPersonUsecase_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchPersonStatsUsecase_45 extends _i1.SmartFake
    implements _i42.WatchPersonStatsUsecase {
  _FakeWatchPersonStatsUsecase_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPlayerInformationFromDataUsecase_46 extends _i1.SmartFake
    implements _i43.GetPlayerInformationFromDataUsecase {
  _FakeGetPlayerInformationFromDataUsecase_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPersonDepleteStatsFlagUsecase_47 extends _i1.SmartFake
    implements _i44.GetPersonDepleteStatsFlagUsecase {
  _FakeGetPersonDepleteStatsFlagUsecase_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateOrUpdateDepleteStatsFlagUsecase_48 extends _i1.SmartFake
    implements _i45.CreateOrUpdateDepleteStatsFlagUsecase {
  _FakeCreateOrUpdateDepleteStatsFlagUsecase_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeletePersonDepleteStatsFlagUsecase_49 extends _i1.SmartFake
    implements _i46.DeletePersonDepleteStatsFlagUsecase {
  _FakeDeletePersonDepleteStatsFlagUsecase_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeToggleDepleteStatsFlagUsecase_50 extends _i1.SmartFake
    implements _i47.ToggleDepleteStatsFlagUsecase {
  _FakeToggleDepleteStatsFlagUsecase_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResetDepleteStatsFlagUsecase_51 extends _i1.SmartFake
    implements _i48.ResetDepleteStatsFlagUsecase {
  _FakeResetDepleteStatsFlagUsecase_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEnergyAndHungerEmergencyModeSideEffectUsecase_52 extends _i1
    .SmartFake implements _i49.EnergyAndHungerEmergencyModeSideEffectUsecase {
  _FakeEnergyAndHungerEmergencyModeSideEffectUsecase_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGameTableCompanion_53 extends _i1.SmartFake
    implements _i2.GameTableCompanion {
  _FakeGameTableCompanion_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGame_54 extends _i1.SmartFake implements _i2.Game {
  _FakeGame_54(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateNewGameUsecase_55 extends _i1.SmartFake
    implements _i50.CreateNewGameUsecase {
  _FakeCreateNewGameUsecase_55(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateGameUsecase_56 extends _i1.SmartFake
    implements _i51.UpdateGameUsecase {
  _FakeUpdateGameUsecase_56(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteGameUsecase_57 extends _i1.SmartFake
    implements _i52.DeleteGameUsecase {
  _FakeDeleteGameUsecase_57(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAllActiveGamesUsecase_58 extends _i1.SmartFake
    implements _i53.GetAllActiveGamesUsecase {
  _FakeGetAllActiveGamesUsecase_58(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetGameUsecase_59 extends _i1.SmartFake
    implements _i54.GetGameUsecase {
  _FakeGetGameUsecase_59(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetLastPlayedActiveGameUsecase_60 extends _i1.SmartFake
    implements _i55.GetLastPlayedActiveGameUsecase {
  _FakeGetLastPlayedActiveGameUsecase_60(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChangeCurrentPlayerUsecase_61 extends _i1.SmartFake
    implements _i56.ChangeCurrentPlayerUsecase {
  _FakeChangeCurrentPlayerUsecase_61(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMoveTimeForwardUsecase_62 extends _i1.SmartFake
    implements _i57.MoveTimeForwardUsecase {
  _FakeMoveTimeForwardUsecase_62(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSetLastPlayedActiveGameUsecase_63 extends _i1.SmartFake
    implements _i58.SetLastPlayedActiveGameUsecase {
  _FakeSetLastPlayedActiveGameUsecase_63(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCurrentGameAndPlayerUsecase_64 extends _i1.SmartFake
    implements _i59.GetCurrentGameAndPlayerUsecase {
  _FakeGetCurrentGameAndPlayerUsecase_64(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPlayerBarInfoUsecase_65 extends _i1.SmartFake
    implements _i60.GetPlayerBarInfoUsecase {
  _FakeGetPlayerBarInfoUsecase_65(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPlayerBarInfoFromDataUsecase_66 extends _i1.SmartFake
    implements _i61.GetPlayerBarInfoFromDataUsecase {
  _FakeGetPlayerBarInfoFromDataUsecase_66(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchLastPlayedActiveGameUsecase_67 extends _i1.SmartFake
    implements _i62.WatchLastPlayedActiveGameUsecase {
  _FakeWatchLastPlayedActiveGameUsecase_67(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGameControllerUsecase_68 extends _i1.SmartFake
    implements _i63.GameControllerUsecase {
  _FakeGameControllerUsecase_68(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDecayAndAlterPlayerStatsUsecase_69 extends _i1.SmartFake
    implements _i64.DecayAndAlterPlayerStatsUsecase {
  _FakeDecayAndAlterPlayerStatsUsecase_69(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJobTableCompanion_70 extends _i1.SmartFake
    implements _i2.JobTableCompanion {
  _FakeJobTableCompanion_70(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJob_71 extends _i1.SmartFake implements _i2.Job {
  _FakeJob_71(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCheckIfQualifiedForFullTimeJobUsecase_72 extends _i1.SmartFake
    implements _i65.CheckIfQualifiedForFullTimeJobUsecase {
  _FakeCheckIfQualifiedForFullTimeJobUsecase_72(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEndAllActiveFullTimeEmploymentUsecase_73 extends _i1.SmartFake
    implements _i66.EndAllActiveFullTimeEmploymentUsecase {
  _FakeEndAllActiveFullTimeEmploymentUsecase_73(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmployPersonForFullTimeJobUsecase_74 extends _i1.SmartFake
    implements _i67.EmployPersonForFullTimeJobUsecase {
  _FakeEmployPersonForFullTimeJobUsecase_74(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAValidListOfFullTimeJobsUsecase_75 extends _i1.SmartFake
    implements _i68.GetAValidListOfFullTimeJobsUsecase {
  _FakeGetAValidListOfFullTimeJobsUsecase_75(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchActiveEmploymentsUsecase_76 extends _i1.SmartFake
    implements _i69.WatchActiveEmploymentsUsecase {
  _FakeWatchActiveEmploymentsUsecase_76(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetJobTitlesFromEmploymentsUsecase_77 extends _i1.SmartFake
    implements _i70.GetJobTitlesFromEmploymentsUsecase {
  _FakeGetJobTitlesFromEmploymentsUsecase_77(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetEmploymentPairsFromEmploymentsUsecase_78 extends _i1.SmartFake
    implements _i71.GetEmploymentPairsFromEmploymentsUsecase {
  _FakeGetEmploymentPairsFromEmploymentsUsecase_78(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddLocationToJobsListUsecase_79 extends _i1.SmartFake
    implements _i72.AddLocationToJobsListUsecase {
  _FakeAddLocationToJobsListUsecase_79(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchoolTableCompanion_80 extends _i1.SmartFake
    implements _i2.SchoolTableCompanion {
  _FakeSchoolTableCompanion_80(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchool_81 extends _i1.SmartFake implements _i2.School {
  _FakeSchool_81(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchoolRelationshipTableCompanion_82 extends _i1.SmartFake
    implements _i2.SchoolRelationshipTableCompanion {
  _FakeSchoolRelationshipTableCompanion_82(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchoolRelationship_83 extends _i1.SmartFake
    implements _i2.SchoolRelationship {
  _FakeSchoolRelationship_83(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchoolProjectTableCompanion_84 extends _i1.SmartFake
    implements _i2.SchoolProjectTableCompanion {
  _FakeSchoolProjectTableCompanion_84(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchoolProject_85 extends _i1.SmartFake implements _i2.SchoolProject {
  _FakeSchoolProject_85(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCompletedDegreesUsecase_86 extends _i1.SmartFake
    implements _i73.GetCompletedDegreesUsecase {
  _FakeGetCompletedDegreesUsecase_86(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetHighestAttainedDegreeLevelForACompletedDegreeUsecase_87
    extends _i1.SmartFake
    implements _i74.GetHighestAttainedDegreeLevelForACompletedDegreeUsecase {
  _FakeGetHighestAttainedDegreeLevelForACompletedDegreeUsecase_87(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEndAllActiveSchoolProgramsUsecase_88 extends _i1.SmartFake
    implements _i75.EndAllActiveSchoolProgramsUsecase {
  _FakeEndAllActiveSchoolProgramsUsecase_88(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetGradeForCompletedSchoolUsecase_89 extends _i1.SmartFake
    implements _i76.GetGradeForCompletedSchoolUsecase {
  _FakeGetGradeForCompletedSchoolUsecase_89(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetHighestGradeForAnyCompletedSchoolInADisciplineUsecase_90
    extends _i1.SmartFake
    implements _i77.GetHighestGradeForAnyCompletedSchoolInADisciplineUsecase {
  _FakeGetHighestGradeForAnyCompletedSchoolInADisciplineUsecase_90(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOrCreateDegreeUsecase_91 extends _i1.SmartFake
    implements _i78.GetOrCreateDegreeUsecase {
  _FakeGetOrCreateDegreeUsecase_91(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchActiveSchoolUsecase_92 extends _i1.SmartFake
    implements _i79.WatchActiveSchoolUsecase {
  _FakeWatchActiveSchoolUsecase_92(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSchoolPairsFromSchoolsUsecase_93 extends _i1.SmartFake
    implements _i80.GetSchoolPairsFromSchoolsUsecase {
  _FakeGetSchoolPairsFromSchoolsUsecase_93(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetASchoolPairFromSchoolUsecase_94 extends _i1.SmartFake
    implements _i81.GetASchoolPairFromSchoolUsecase {
  _FakeGetASchoolPairFromSchoolUsecase_94(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetValidListOfBachelorDegreesUsecase_95 extends _i1.SmartFake
    implements _i82.GetValidListOfBachelorDegreesUsecase {
  _FakeGetValidListOfBachelorDegreesUsecase_95(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetValidListOfMasterDegreesUsecase_96 extends _i1.SmartFake
    implements _i83.GetValidListOfMasterDegreesUsecase {
  _FakeGetValidListOfMasterDegreesUsecase_96(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetValidListOfDoctorateDegreesUsecase_97 extends _i1.SmartFake
    implements _i84.GetValidListOfDoctorateDegreesUsecase {
  _FakeGetValidListOfDoctorateDegreesUsecase_97(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetValidListOfEducationDegreesUsecase_98 extends _i1.SmartFake
    implements _i85.GetValidListOfEducationDegreesUsecase {
  _FakeGetValidListOfEducationDegreesUsecase_98(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetValidListOfLawDegreesUsecase_99 extends _i1.SmartFake
    implements _i86.GetValidListOfLawDegreesUsecase {
  _FakeGetValidListOfLawDegreesUsecase_99(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetValidListOfMedicalDegreesUsecase_100 extends _i1.SmartFake
    implements _i87.GetValidListOfMedicalDegreesUsecase {
  _FakeGetValidListOfMedicalDegreesUsecase_100(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetValidListOfNursingDegreesUsecase_101 extends _i1.SmartFake
    implements _i88.GetValidListOfNursingDegreesUsecase {
  _FakeGetValidListOfNursingDegreesUsecase_101(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetValidListOfPharmacyDegreesUsecase_102 extends _i1.SmartFake
    implements _i89.GetValidListOfPharmacyDegreesUsecase {
  _FakeGetValidListOfPharmacyDegreesUsecase_102(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplyToDoctorateSchoolUsecase_103 extends _i1.SmartFake
    implements _i90.ApplyToDoctorateSchoolUsecase {
  _FakeApplyToDoctorateSchoolUsecase_103(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplyToGraduateSchoolUsecase_104 extends _i1.SmartFake
    implements _i91.ApplyToGraduateSchoolUsecase {
  _FakeApplyToGraduateSchoolUsecase_104(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplyToUndergraduateSchoolUsecase_105 extends _i1.SmartFake
    implements _i92.ApplyToUndergraduateSchoolUsecase {
  _FakeApplyToUndergraduateSchoolUsecase_105(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplyToLawSchoolUsecase_106 extends _i1.SmartFake
    implements _i93.ApplyToLawSchoolUsecase {
  _FakeApplyToLawSchoolUsecase_106(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplyToMedicalSchoolUsecase_107 extends _i1.SmartFake
    implements _i94.ApplyToMedicalSchoolUsecase {
  _FakeApplyToMedicalSchoolUsecase_107(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplyToNursingSchoolUsecase_108 extends _i1.SmartFake
    implements _i95.ApplyToNursingSchoolUsecase {
  _FakeApplyToNursingSchoolUsecase_108(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplyToPharmacySchoolUsecase_109 extends _i1.SmartFake
    implements _i96.ApplyToPharmacySchoolUsecase {
  _FakeApplyToPharmacySchoolUsecase_109(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApplyToTeacherEducationProgramUsecase_110 extends _i1.SmartFake
    implements _i97.ApplyToTeacherEducationProgramUsecase {
  _FakeApplyToTeacherEducationProgramUsecase_110(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdmitIntoDoctorateSchoolUsecase_111 extends _i1.SmartFake
    implements _i98.AdmitIntoDoctorateSchoolUsecase {
  _FakeAdmitIntoDoctorateSchoolUsecase_111(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdmitIntoGraduateSchoolUsecase_112 extends _i1.SmartFake
    implements _i99.AdmitIntoGraduateSchoolUsecase {
  _FakeAdmitIntoGraduateSchoolUsecase_112(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdmitIntoUndergraduateSchoolUsecase_113 extends _i1.SmartFake
    implements _i100.AdmitIntoUndergraduateSchoolUsecase {
  _FakeAdmitIntoUndergraduateSchoolUsecase_113(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdmitIntoLawSchoolUsecase_114 extends _i1.SmartFake
    implements _i101.AdmitIntoLawSchoolUsecase {
  _FakeAdmitIntoLawSchoolUsecase_114(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdmitIntoMedicalSchoolUsecase_115 extends _i1.SmartFake
    implements _i102.AdmitIntoMedicalSchoolUsecase {
  _FakeAdmitIntoMedicalSchoolUsecase_115(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdmitIntoNursingSchoolUsecase_116 extends _i1.SmartFake
    implements _i103.AdmitIntoNursingSchoolUsecase {
  _FakeAdmitIntoNursingSchoolUsecase_116(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdmitIntoPharmacySchoolUsecase_117 extends _i1.SmartFake
    implements _i104.AdmitIntoPharmacySchoolUsecase {
  _FakeAdmitIntoPharmacySchoolUsecase_117(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdmitIntoTeacherEducationProgramUsecase_118 extends _i1.SmartFake
    implements _i105.AdmitIntoTeacherEducationProgramUsecase {
  _FakeAdmitIntoTeacherEducationProgramUsecase_118(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraduateUsecase_119 extends _i1.SmartFake
    implements _i106.GraduateUsecase {
  _FakeGraduateUsecase_119(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJournalTableCompanion_120 extends _i1.SmartFake
    implements _i2.JournalTableCompanion {
  _FakeJournalTableCompanion_120(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJournal_121 extends _i1.SmartFake implements _i2.Journal {
  _FakeJournal_121(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddToJournalUsecase_122 extends _i1.SmartFake
    implements _i107.AddToJournalUsecase {
  _FakeAddToJournalUsecase_122(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrepareJournalEntryUsecase_123 extends _i1.SmartFake
    implements _i108.PrepareJournalEntryUsecase {
  _FakePrepareJournalEntryUsecase_123(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPlayersJournalsUsecase_124 extends _i1.SmartFake
    implements _i109.GetPlayersJournalsUsecase {
  _FakeGetPlayersJournalsUsecase_124(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTodaysJournalUsecase_125 extends _i1.SmartFake
    implements _i110.GetTodaysJournalUsecase {
  _FakeGetTodaysJournalUsecase_125(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchJournalUsecase_126 extends _i1.SmartFake
    implements _i111.WatchJournalUsecase {
  _FakeWatchJournalUsecase_126(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventTableCompanion_127 extends _i1.SmartFake
    implements _i2.EventTableCompanion {
  _FakeEventTableCompanion_127(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_128 extends _i1.SmartFake implements _i2.Event {
  _FakeEvent_128(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManageEvents_129 extends _i1.SmartFake
    implements _i112.ManageEvents {
  _FakeManageEvents_129(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecurringBillTableCompanion_130 extends _i1.SmartFake
    implements _i2.RecurringBillTableCompanion {
  _FakeRecurringBillTableCompanion_130(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecurringBill_131 extends _i1.SmartFake
    implements _i2.RecurringBill {
  _FakeRecurringBill_131(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddRentToBillsUsecase_132 extends _i1.SmartFake
    implements _i113.AddRentToBillsUsecase {
  _FakeAddRentToBillsUsecase_132(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveRentFromBillsUsecase_133 extends _i1.SmartFake
    implements _i114.RemoveRentFromBillsUsecase {
  _FakeRemoveRentFromBillsUsecase_133(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddCarLoanToBillsUsecase_134 extends _i1.SmartFake
    implements _i115.AddCarLoanToBillsUsecase {
  _FakeAddCarLoanToBillsUsecase_134(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveCarLoanFromBillsUsecase_135 extends _i1.SmartFake
    implements _i116.RemoveCarLoanFromBillsUsecase {
  _FakeRemoveCarLoanFromBillsUsecase_135(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddMortgageLoanToBillsUsecase_136 extends _i1.SmartFake
    implements _i117.AddMortgageLoanToBillsUsecase {
  _FakeAddMortgageLoanToBillsUsecase_136(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveMortgageLoanFromBillsUsecase_137 extends _i1.SmartFake
    implements _i118.RemoveMortgageLoanFromBillsUsecase {
  _FakeRemoveMortgageLoanFromBillsUsecase_137(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddPropertyTaxToBillsUsecase_138 extends _i1.SmartFake
    implements _i119.AddPropertyTaxToBillsUsecase {
  _FakeAddPropertyTaxToBillsUsecase_138(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemovePropertyTaxFromBillsUsecase_139 extends _i1.SmartFake
    implements _i120.RemovePropertyTaxFromBillsUsecase {
  _FakeRemovePropertyTaxFromBillsUsecase_139(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddStudentLoanToBillsUsecase_140 extends _i1.SmartFake
    implements _i121.AddStudentLoanToBillsUsecase {
  _FakeAddStudentLoanToBillsUsecase_140(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveStudentLoanFromBillsUsecase_141 extends _i1.SmartFake
    implements _i122.RemoveStudentLoanFromBillsUsecase {
  _FakeRemoveStudentLoanFromBillsUsecase_141(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCarLoanCalculatorUsecase_142 extends _i1.SmartFake
    implements _i123.CarLoanCalculatorUsecase {
  _FakeCarLoanCalculatorUsecase_142(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMortgageLoanCalculatorUsecase_143 extends _i1.SmartFake
    implements _i124.MortgageLoanCalculatorUsecase {
  _FakeMortgageLoanCalculatorUsecase_143(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStudentLoanCalculatorUsecase_144 extends _i1.SmartFake
    implements _i125.StudentLoanCalculatorUsecase {
  _FakeStudentLoanCalculatorUsecase_144(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCarLoanRecurringPaymentCalculatorUsecase_145 extends _i1.SmartFake
    implements _i126.CarLoanRecurringPaymentCalculatorUsecase {
  _FakeCarLoanRecurringPaymentCalculatorUsecase_145(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMortgageLoanRecurringPaymentCalculatorUsecase_146 extends _i1
    .SmartFake implements _i127.MortgageLoanRecurringPaymentCalculatorUsecase {
  _FakeMortgageLoanRecurringPaymentCalculatorUsecase_146(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStudentLoanRecurringPaymentCalculatorUsecase_147 extends _i1
    .SmartFake implements _i128.StudentLoanRecurringPaymentCalculatorUsecase {
  _FakeStudentLoanRecurringPaymentCalculatorUsecase_147(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCheckIfThereIsAnExistingCarLoanUsecase_148 extends _i1.SmartFake
    implements _i129.CheckIfThereIsAnExistingCarLoanUsecase {
  _FakeCheckIfThereIsAnExistingCarLoanUsecase_148(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCheckIfThereIsAnExistingMortgageLoanUsecase_149 extends _i1.SmartFake
    implements _i130.CheckIfThereIsAnExistingMortgageLoanUsecase {
  _FakeCheckIfThereIsAnExistingMortgageLoanUsecase_149(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseDownPaymentCalculatorUsecase_150 extends _i1.SmartFake
    implements _i131.BaseDownPaymentCalculatorUsecase {
  _FakeBaseDownPaymentCalculatorUsecase_150(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseLoanAmountCalculatorUsecase_151 extends _i1.SmartFake
    implements _i132.BaseLoanAmountCalculatorUsecase {
  _FakeBaseLoanAmountCalculatorUsecase_151(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateNewPlayerFamilyUsecase_152 extends _i1.SmartFake
    implements _i133.CreateNewPlayerFamilyUsecase {
  _FakeCreateNewPlayerFamilyUsecase_152(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateChildParentRelationshipUsecase_153 extends _i1.SmartFake
    implements _i134.CreateChildParentRelationshipUsecase {
  _FakeCreateChildParentRelationshipUsecase_153(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateSiblingRelationshipUsecase_154 extends _i1.SmartFake
    implements _i135.CreateSiblingRelationshipUsecase {
  _FakeCreateSiblingRelationshipUsecase_154(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateExclusiveRomanticRelationshipUsecase_155 extends _i1.SmartFake
    implements _i136.CreateExclusiveRomanticRelationshipUsecase {
  _FakeCreateExclusiveRomanticRelationshipUsecase_155(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEndAllPartnerRelationshipsNotInvolvingACertainPersonUsecase_156
    extends _i1.SmartFake
    implements
        _i137.EndAllPartnerRelationshipsNotInvolvingACertainPersonUsecase {
  _FakeEndAllPartnerRelationshipsNotInvolvingACertainPersonUsecase_156(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEndPartnerRelationshipUsecase_157 extends _i1.SmartFake
    implements _i138.EndPartnerRelationshipUsecase {
  _FakeEndPartnerRelationshipUsecase_157(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetMarriedUsecase_158 extends _i1.SmartFake
    implements _i139.GetMarriedUsecase {
  _FakeGetMarriedUsecase_158(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCurrentPartnerUsecase_159 extends _i1.SmartFake
    implements _i140.GetCurrentPartnerUsecase {
  _FakeGetCurrentPartnerUsecase_159(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetFriendsUsecase_160 extends _i1.SmartFake
    implements _i141.GetFriendsUsecase {
  _FakeGetFriendsUsecase_160(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRelationshipPairBasedOnTypeUsecase_161 extends _i1.SmartFake
    implements _i142.GetRelationshipPairBasedOnTypeUsecase {
  _FakeGetRelationshipPairBasedOnTypeUsecase_161(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdatePartnerRelationshipUsecase_162 extends _i1.SmartFake
    implements _i143.UpdatePartnerRelationshipUsecase {
  _FakeUpdatePartnerRelationshipUsecase_162(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSiblingsUsecase_163 extends _i1.SmartFake
    implements _i144.GetSiblingsUsecase {
  _FakeGetSiblingsUsecase_163(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateSiblingRelationshipUsecase_164 extends _i1.SmartFake
    implements _i145.UpdateSiblingRelationshipUsecase {
  _FakeUpdateSiblingRelationshipUsecase_164(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPiblingsUsecase_165 extends _i1.SmartFake
    implements _i146.GetPiblingsUsecase {
  _FakeGetPiblingsUsecase_165(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateRelativeRelationshipUsecase_166 extends _i1.SmartFake
    implements _i147.UpdateRelativeRelationshipUsecase {
  _FakeUpdateRelativeRelationshipUsecase_166(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetChildrenUsecase_167 extends _i1.SmartFake
    implements _i148.GetChildrenUsecase {
  _FakeGetChildrenUsecase_167(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateChildRelationshipUsecase_168 extends _i1.SmartFake
    implements _i149.UpdateChildRelationshipUsecase {
  _FakeUpdateChildRelationshipUsecase_168(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateParentRelationshipUsecase_169 extends _i1.SmartFake
    implements _i150.UpdateParentRelationshipUsecase {
  _FakeUpdateParentRelationshipUsecase_169(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateInLawRelationshipUsecase_170 extends _i1.SmartFake
    implements _i151.UpdateInLawRelationshipUsecase {
  _FakeUpdateInLawRelationshipUsecase_170(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateFriendRelationshipUsecase_171 extends _i1.SmartFake
    implements _i152.UpdateFriendRelationshipUsecase {
  _FakeUpdateFriendRelationshipUsecase_171(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateAcquaintanceRelationshipUsecase_172 extends _i1.SmartFake
    implements _i153.UpdateAcquaintanceRelationshipUsecase {
  _FakeUpdateAcquaintanceRelationshipUsecase_172(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateAnyRelationshipAmountUsecase_173 extends _i1.SmartFake
    implements _i154.UpdateAnyRelationshipAmountUsecase {
  _FakeUpdateAnyRelationshipAmountUsecase_173(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllActiveParentsUsecase_174 extends _i1.SmartFake
    implements _i155.WatchAllActiveParentsUsecase {
  _FakeWatchAllActiveParentsUsecase_174(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllActivePartnersUsecase_175 extends _i1.SmartFake
    implements _i156.WatchAllActivePartnersUsecase {
  _FakeWatchAllActivePartnersUsecase_175(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllChildrenUsecase_176 extends _i1.SmartFake
    implements _i157.WatchAllChildrenUsecase {
  _FakeWatchAllChildrenUsecase_176(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllCoparentsUsecase_177 extends _i1.SmartFake
    implements _i158.WatchAllCoparentsUsecase {
  _FakeWatchAllCoparentsUsecase_177(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllExesUsecase_178 extends _i1.SmartFake
    implements _i159.WatchAllExesUsecase {
  _FakeWatchAllExesUsecase_178(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllFriendsUsecase_179 extends _i1.SmartFake
    implements _i160.WatchAllFriendsUsecase {
  _FakeWatchAllFriendsUsecase_179(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllGravesUsecase_180 extends _i1.SmartFake
    implements _i161.WatchAllGravesUsecase {
  _FakeWatchAllGravesUsecase_180(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllInLawsUsecase_181 extends _i1.SmartFake
    implements _i162.WatchAllInLawsUsecase {
  _FakeWatchAllInLawsUsecase_181(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllRelativesUsecase_182 extends _i1.SmartFake
    implements _i163.WatchAllRelativesUsecase {
  _FakeWatchAllRelativesUsecase_182(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllSiblingsUsecase_183 extends _i1.SmartFake
    implements _i164.WatchAllSiblingsUsecase {
  _FakeWatchAllSiblingsUsecase_183(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetFriendRelationshipPairsFromFriendsUsecase_184 extends _i1
    .SmartFake implements _i165.GetFriendRelationshipPairsFromFriendsUsecase {
  _FakeGetFriendRelationshipPairsFromFriendsUsecase_184(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSiblingRelationshipPairsFromSiblingsUsecase_185 extends _i1
    .SmartFake implements _i166.GetSiblingRelationshipPairsFromSiblingsUsecase {
  _FakeGetSiblingRelationshipPairsFromSiblingsUsecase_185(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRelativeRelationshipPairsFromRelativesUsecase_186
    extends _i1.SmartFake
    implements _i167.GetRelativeRelationshipPairsFromRelativesUsecase {
  _FakeGetRelativeRelationshipPairsFromRelativesUsecase_186(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetParentRelationshipPairsFromParentsUsecase_187 extends _i1
    .SmartFake implements _i168.GetParentRelationshipPairsFromParentsUsecase {
  _FakeGetParentRelationshipPairsFromParentsUsecase_187(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPartnerRelationshipPairsFromPartnersUsecase_188 extends _i1
    .SmartFake implements _i169.GetPartnerRelationshipPairsFromPartnersUsecase {
  _FakeGetPartnerRelationshipPairsFromPartnersUsecase_188(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetGraveRelationshipPairsFromGravesUsecase_189 extends _i1.SmartFake
    implements _i170.GetGraveRelationshipPairsFromGravesUsecase {
  _FakeGetGraveRelationshipPairsFromGravesUsecase_189(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetInLawRelationshipPairsFromInLawsUsecase_190 extends _i1.SmartFake
    implements _i171.GetInLawRelationshipPairsFromInLawsUsecase {
  _FakeGetInLawRelationshipPairsFromInLawsUsecase_190(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetChildRelationshipPairsFromChildrenUsecase_191 extends _i1
    .SmartFake implements _i172.GetChildRelationshipPairsFromChildrenUsecase {
  _FakeGetChildRelationshipPairsFromChildrenUsecase_191(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCheckIfPersonIsInterestedInRelationshipUsecase_192 extends _i1
    .SmartFake implements _i173.CheckIfPersonIsInterestedInRelationshipUsecase {
  _FakeCheckIfPersonIsInterestedInRelationshipUsecase_192(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAcquaintanceUsecase_193 extends _i1.SmartFake
    implements _i174.WatchAcquaintanceUsecase {
  _FakeWatchAcquaintanceUsecase_193(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchChildUsecase_194 extends _i1.SmartFake
    implements _i175.WatchChildUsecase {
  _FakeWatchChildUsecase_194(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchFriendUsecase_195 extends _i1.SmartFake
    implements _i176.WatchFriendUsecase {
  _FakeWatchFriendUsecase_195(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchGraveUsecase_196 extends _i1.SmartFake
    implements _i177.WatchGraveUsecase {
  _FakeWatchGraveUsecase_196(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchInLawUsecase_197 extends _i1.SmartFake
    implements _i178.WatchInLawUsecase {
  _FakeWatchInLawUsecase_197(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchParentUsecase_198 extends _i1.SmartFake
    implements _i179.WatchParentUsecase {
  _FakeWatchParentUsecase_198(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchPartnerUsecase_199 extends _i1.SmartFake
    implements _i180.WatchPartnerUsecase {
  _FakeWatchPartnerUsecase_199(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchSiblingUsecase_200 extends _i1.SmartFake
    implements _i181.WatchSiblingUsecase {
  _FakeWatchSiblingUsecase_200(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchRelativeUsecase_201 extends _i1.SmartFake
    implements _i182.WatchRelativeUsecase {
  _FakeWatchRelativeUsecase_201(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAcquaintanceRelationshipPairUsecase_202 extends _i1.SmartFake
    implements _i183.GetAcquaintanceRelationshipPairUsecase {
  _FakeGetAcquaintanceRelationshipPairUsecase_202(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetChildRelationshipPairUsecase_203 extends _i1.SmartFake
    implements _i184.GetChildRelationshipPairUsecase {
  _FakeGetChildRelationshipPairUsecase_203(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetFriendRelationshipPairUsecase_204 extends _i1.SmartFake
    implements _i185.GetFriendRelationshipPairUsecase {
  _FakeGetFriendRelationshipPairUsecase_204(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetGraveRelationshipPairUsecase_205 extends _i1.SmartFake
    implements _i186.GetGraveRelationshipPairUsecase {
  _FakeGetGraveRelationshipPairUsecase_205(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetInLawRelationshipPairUsecase_206 extends _i1.SmartFake
    implements _i187.GetInLawRelationshipPairUsecase {
  _FakeGetInLawRelationshipPairUsecase_206(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetParentRelationshipPairUsecase_207 extends _i1.SmartFake
    implements _i188.GetParentRelationshipPairUsecase {
  _FakeGetParentRelationshipPairUsecase_207(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPartnerRelationshipPairUsecase_208 extends _i1.SmartFake
    implements _i189.GetPartnerRelationshipPairUsecase {
  _FakeGetPartnerRelationshipPairUsecase_208(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSiblingRelationshipPairUsecase_209 extends _i1.SmartFake
    implements _i190.GetSiblingRelationshipPairUsecase {
  _FakeGetSiblingRelationshipPairUsecase_209(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRelativeRelationshipPairUsecase_210 extends _i1.SmartFake
    implements _i191.GetRelativeRelationshipPairUsecase {
  _FakeGetRelativeRelationshipPairUsecase_210(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAnyRelationshipPairUsecase_211 extends _i1.SmartFake
    implements _i192.GetAnyRelationshipPairUsecase {
  _FakeGetAnyRelationshipPairUsecase_211(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRelationshipLevelFromAnyGivenRelationshipPairUsecase_212
    extends _i1.SmartFake
    implements _i193.GetRelationshipLevelFromAnyGivenRelationshipPairUsecase {
  _FakeGetRelationshipLevelFromAnyGivenRelationshipPairUsecase_212(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetStoreroomItemPairsUsecase_213 extends _i1.SmartFake
    implements _i194.GetStoreroomItemPairsUsecase {
  _FakeGetStoreroomItemPairsUsecase_213(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAvailbleStoreroomItemUsecase_214 extends _i1.SmartFake
    implements _i195.GetAvailbleStoreroomItemUsecase {
  _FakeGetAvailbleStoreroomItemUsecase_214(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUseStoreroomItemUsecase_215 extends _i1.SmartFake
    implements _i196.UseStoreroomItemUsecase {
  _FakeUseStoreroomItemUsecase_215(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCurrentCarUsecase_216 extends _i1.SmartFake
    implements _i197.GetCurrentCarUsecase {
  _FakeGetCurrentCarUsecase_216(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCurrentHouseUsecase_217 extends _i1.SmartFake
    implements _i198.GetCurrentHouseUsecase {
  _FakeGetCurrentHouseUsecase_217(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCarMaxConditionUsecase_218 extends _i1.SmartFake
    implements _i199.GetCarMaxConditionUsecase {
  _FakeGetCarMaxConditionUsecase_218(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriveCarUsecase_219 extends _i1.SmartFake
    implements _i200.DriveCarUsecase {
  _FakeDriveCarUsecase_219(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCarIsNotDeadUsecase_220 extends _i1.SmartFake
    implements _i201.CarIsNotDeadUsecase {
  _FakeCarIsNotDeadUsecase_220(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSetAllPersonCarsToNotCurrentlyDrivingUsecase_221 extends _i1
    .SmartFake implements _i202.SetAllPersonCarsToNotCurrentlyDrivingUsecase {
  _FakeSetAllPersonCarsToNotCurrentlyDrivingUsecase_221(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateCarUsecase_222 extends _i1.SmartFake
    implements _i203.UpdateCarUsecase {
  _FakeUpdateCarUsecase_222(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseCarFullyPaidUsecase_223 extends _i1.SmartFake
    implements _i204.PurchaseCarFullyPaidUsecase {
  _FakePurchaseCarFullyPaidUsecase_223(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddFoodToFridgeUsecase_224 extends _i1.SmartFake
    implements _i205.AddFoodToFridgeUsecase {
  _FakeAddFoodToFridgeUsecase_224(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetFoodRecordUsecase_225 extends _i1.SmartFake
    implements _i206.GetFoodRecordUsecase {
  _FakeGetFoodRecordUsecase_225(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetFridgeFoodCountUsecase_226 extends _i1.SmartFake
    implements _i207.GetFridgeFoodCountUsecase {
  _FakeGetFridgeFoodCountUsecase_226(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseFoodUsecase_227 extends _i1.SmartFake
    implements _i208.PurchaseFoodUsecase {
  _FakePurchaseFoodUsecase_227(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCurrentHouseStorageSpaceUsecase_228 extends _i1.SmartFake
    implements _i209.GetCurrentHouseStorageSpaceUsecase {
  _FakeGetCurrentHouseStorageSpaceUsecase_228(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseHouseFullyPaidUsecase_229 extends _i1.SmartFake
    implements _i210.PurchaseHouseFullyPaidUsecase {
  _FakePurchaseHouseFullyPaidUsecase_229(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddItemToStoreroomUsecase_230 extends _i1.SmartFake
    implements _i211.AddItemToStoreroomUsecase {
  _FakeAddItemToStoreroomUsecase_230(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetItemRecordUsecase_231 extends _i1.SmartFake
    implements _i212.GetItemRecordUsecase {
  _FakeGetItemRecordUsecase_231(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetStoreroomItemCountUsecase_232 extends _i1.SmartFake
    implements _i213.GetStoreroomItemCountUsecase {
  _FakeGetStoreroomItemCountUsecase_232(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseItemUsecase_233 extends _i1.SmartFake
    implements _i214.PurchaseItemUsecase {
  _FakePurchaseItemUsecase_233(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseJewelryUsecase_234 extends _i1.SmartFake
    implements _i215.PurchaseJewelryUsecase {
  _FakePurchaseJewelryUsecase_234(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRentHouseUsecase_235 extends _i1.SmartFake
    implements _i216.RentHouseUsecase {
  _FakeRentHouseUsecase_235(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBreakOldLeaseSignNewLease_236 extends _i1.SmartFake
    implements _i217.BreakOldLeaseSignNewLease {
  _FakeBreakOldLeaseSignNewLease_236(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEndLeaseUsecase_237 extends _i1.SmartFake
    implements _i218.EndLeaseUsecase {
  _FakeEndLeaseUsecase_237(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignLeaseForRentalUsecase_238 extends _i1.SmartFake
    implements _i219.SignLeaseForRentalUsecase {
  _FakeSignLeaseForRentalUsecase_238(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMoveStorageToNewHouseUsecase_239 extends _i1.SmartFake
    implements _i220.MoveStorageToNewHouseUsecase {
  _FakeMoveStorageToNewHouseUsecase_239(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUseFoodUsecase_240 extends _i1.SmartFake
    implements _i221.UseFoodUsecase {
  _FakeUseFoodUsecase_240(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAllPersonFridgeFoodPairsUsecase_241 extends _i1.SmartFake
    implements _i222.GetAllPersonFridgeFoodPairsUsecase {
  _FakeGetAllPersonFridgeFoodPairsUsecase_241(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseCarWithLoanUsecase_242 extends _i1.SmartFake
    implements _i223.PurchaseCarWithLoanUsecase {
  _FakePurchaseCarWithLoanUsecase_242(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseHouseWithLoanUsecase_243 extends _i1.SmartFake
    implements _i224.PurchaseHouseWithLoanUsecase {
  _FakePurchaseHouseWithLoanUsecase_243(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignMortgageLoanContract_244 extends _i1.SmartFake
    implements _i225.SignMortgageLoanContract {
  _FakeSignMortgageLoanContract_244(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddLocationToBuildingsUsecase_245 extends _i1.SmartFake
    implements _i226.AddLocationToBuildingsUsecase {
  _FakeAddLocationToBuildingsUsecase_245(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPurchaseHousesUsecase_246 extends _i1.SmartFake
    implements _i227.GetPurchaseHousesUsecase {
  _FakeGetPurchaseHousesUsecase_246(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRentalHousesUsecase_247 extends _i1.SmartFake
    implements _i228.GetRentalHousesUsecase {
  _FakeGetRentalHousesUsecase_247(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMoveIntoNewHouseUsecase_248 extends _i1.SmartFake
    implements _i229.MoveIntoNewHouseUsecase {
  _FakeMoveIntoNewHouseUsecase_248(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteCurrentHomeUsecase_249 extends _i1.SmartFake
    implements _i230.DeleteCurrentHomeUsecase {
  _FakeDeleteCurrentHomeUsecase_249(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAllPeopleInAHouseUsecase_250 extends _i1.SmartFake
    implements _i231.GetAllPeopleInAHouseUsecase {
  _FakeGetAllPeopleInAHouseUsecase_250(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCurrentHomeUsecase_251 extends _i1.SmartFake
    implements _i232.GetCurrentHomeUsecase {
  _FakeGetCurrentHomeUsecase_251(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSetCurrentHomeUsecase_252 extends _i1.SmartFake
    implements _i233.SetCurrentHomeUsecase {
  _FakeSetCurrentHomeUsecase_252(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchAllPeopleInAHouseUsecase_253 extends _i1.SmartFake
    implements _i234.WatchAllPeopleInAHouseUsecase {
  _FakeWatchAllPeopleInAHouseUsecase_253(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchCurrentHomeUsecase_254 extends _i1.SmartFake
    implements _i235.WatchCurrentHomeUsecase {
  _FakeWatchCurrentHomeUsecase_254(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Person].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerson extends _i1.Mock implements _i2.Person {
  MockPerson() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get gameId => (super.noSuchMethod(
        Invocation.getter(#gameId),
        returnValue: 0,
      ) as int);
  @override
  String get firstName => (super.noSuchMethod(
        Invocation.getter(#firstName),
        returnValue: '',
      ) as String);
  @override
  String get lastName => (super.noSuchMethod(
        Invocation.getter(#lastName),
        returnValue: '',
      ) as String);
  @override
  int get dayOfBirth => (super.noSuchMethod(
        Invocation.getter(#dayOfBirth),
        returnValue: 0,
      ) as int);
  @override
  String get gender => (super.noSuchMethod(
        Invocation.getter(#gender),
        returnValue: '',
      ) as String);
  @override
  String get subjectPronoun => (super.noSuchMethod(
        Invocation.getter(#subjectPronoun),
        returnValue: '',
      ) as String);
  @override
  String get objectPronoun => (super.noSuchMethod(
        Invocation.getter(#objectPronoun),
        returnValue: '',
      ) as String);
  @override
  String get possessivePronoun => (super.noSuchMethod(
        Invocation.getter(#possessivePronoun),
        returnValue: '',
      ) as String);
  @override
  String get sexuality => (super.noSuchMethod(
        Invocation.getter(#sexuality),
        returnValue: '',
      ) as String);
  @override
  String get currentState => (super.noSuchMethod(
        Invocation.getter(#currentState),
        returnValue: '',
      ) as String);
  @override
  String get currentCountry => (super.noSuchMethod(
        Invocation.getter(#currentCountry),
        returnValue: '',
      ) as String);
  @override
  String get birthState => (super.noSuchMethod(
        Invocation.getter(#birthState),
        returnValue: '',
      ) as String);
  @override
  String get birthCountry => (super.noSuchMethod(
        Invocation.getter(#birthCountry),
        returnValue: '',
      ) as String);
  @override
  int get money => (super.noSuchMethod(
        Invocation.getter(#money),
        returnValue: 0,
      ) as int);
  @override
  String get zodiacSign => (super.noSuchMethod(
        Invocation.getter(#zodiacSign),
        returnValue: '',
      ) as String);
  @override
  bool get hasDriversLicense => (super.noSuchMethod(
        Invocation.getter(#hasDriversLicense),
        returnValue: false,
      ) as bool);
  @override
  String get transportMode => (super.noSuchMethod(
        Invocation.getter(#transportMode),
        returnValue: '',
      ) as String);
  @override
  bool get hasFertilityIssues => (super.noSuchMethod(
        Invocation.getter(#hasFertilityIssues),
        returnValue: false,
      ) as bool);
  @override
  bool get onBirthControl => (super.noSuchMethod(
        Invocation.getter(#onBirthControl),
        returnValue: false,
      ) as bool);
  @override
  bool get isSterile => (super.noSuchMethod(
        Invocation.getter(#isSterile),
        returnValue: false,
      ) as bool);
  @override
  bool get sickly => (super.noSuchMethod(
        Invocation.getter(#sickly),
        returnValue: false,
      ) as bool);
  @override
  bool get dead => (super.noSuchMethod(
        Invocation.getter(#dead),
        returnValue: false,
      ) as bool);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.PersonTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakePersonTableCompanion_0(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.PersonTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.Person copyWith({
    int? id,
    int? gameId,
    String? firstName,
    String? lastName,
    int? dayOfBirth,
    String? gender,
    String? subjectPronoun,
    String? objectPronoun,
    String? possessivePronoun,
    String? sexuality,
    String? currentState,
    String? currentCountry,
    String? birthState,
    String? birthCountry,
    int? money,
    String? zodiacSign,
    bool? hasDriversLicense,
    String? transportMode,
    bool? hasFertilityIssues,
    bool? onBirthControl,
    bool? isSterile,
    bool? sickly,
    bool? dead,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #gameId: gameId,
            #firstName: firstName,
            #lastName: lastName,
            #dayOfBirth: dayOfBirth,
            #gender: gender,
            #subjectPronoun: subjectPronoun,
            #objectPronoun: objectPronoun,
            #possessivePronoun: possessivePronoun,
            #sexuality: sexuality,
            #currentState: currentState,
            #currentCountry: currentCountry,
            #birthState: birthState,
            #birthCountry: birthCountry,
            #money: money,
            #zodiacSign: zodiacSign,
            #hasDriversLicense: hasDriversLicense,
            #transportMode: transportMode,
            #hasFertilityIssues: hasFertilityIssues,
            #onBirthControl: onBirthControl,
            #isSterile: isSterile,
            #sickly: sickly,
            #dead: dead,
          },
        ),
        returnValue: _FakePerson_1(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #gameId: gameId,
              #firstName: firstName,
              #lastName: lastName,
              #dayOfBirth: dayOfBirth,
              #gender: gender,
              #subjectPronoun: subjectPronoun,
              #objectPronoun: objectPronoun,
              #possessivePronoun: possessivePronoun,
              #sexuality: sexuality,
              #currentState: currentState,
              #currentCountry: currentCountry,
              #birthState: birthState,
              #birthCountry: birthCountry,
              #money: money,
              #zodiacSign: zodiacSign,
              #hasDriversLicense: hasDriversLicense,
              #transportMode: transportMode,
              #hasFertilityIssues: hasFertilityIssues,
              #onBirthControl: onBirthControl,
              #isSterile: isSterile,
              #sickly: sickly,
              #dead: dead,
            },
          ),
        ),
      ) as _i2.Person);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [Stats].
///
/// See the documentation for Mockito's code generation for more information.
class MockStats extends _i1.Mock implements _i2.Stats {
  MockStats() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get personId => (super.noSuchMethod(
        Invocation.getter(#personId),
        returnValue: 0,
      ) as int);
  @override
  int get energy => (super.noSuchMethod(
        Invocation.getter(#energy),
        returnValue: 0,
      ) as int);
  @override
  int get hunger => (super.noSuchMethod(
        Invocation.getter(#hunger),
        returnValue: 0,
      ) as int);
  @override
  int get mood => (super.noSuchMethod(
        Invocation.getter(#mood),
        returnValue: 0,
      ) as int);
  @override
  int get health => (super.noSuchMethod(
        Invocation.getter(#health),
        returnValue: 0,
      ) as int);
  @override
  int get sober => (super.noSuchMethod(
        Invocation.getter(#sober),
        returnValue: 0,
      ) as int);
  @override
  int get looks => (super.noSuchMethod(
        Invocation.getter(#looks),
        returnValue: 0,
      ) as int);
  @override
  int get athleticism => (super.noSuchMethod(
        Invocation.getter(#athleticism),
        returnValue: 0,
      ) as int);
  @override
  int get intellect => (super.noSuchMethod(
        Invocation.getter(#intellect),
        returnValue: 0,
      ) as int);
  @override
  int get alcoholTolerance => (super.noSuchMethod(
        Invocation.getter(#alcoholTolerance),
        returnValue: 0,
      ) as int);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.StatsTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeStatsTableCompanion_2(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.StatsTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.Stats copyWith({
    int? id,
    int? personId,
    int? energy,
    int? hunger,
    int? mood,
    int? health,
    int? sober,
    int? looks,
    int? athleticism,
    int? intellect,
    int? alcoholTolerance,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #personId: personId,
            #energy: energy,
            #hunger: hunger,
            #mood: mood,
            #health: health,
            #sober: sober,
            #looks: looks,
            #athleticism: athleticism,
            #intellect: intellect,
            #alcoholTolerance: alcoholTolerance,
          },
        ),
        returnValue: _FakeStats_3(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #personId: personId,
              #energy: energy,
              #hunger: hunger,
              #mood: mood,
              #health: health,
              #sober: sober,
              #looks: looks,
              #athleticism: athleticism,
              #intellect: intellect,
              #alcoholTolerance: alcoholTolerance,
            },
          ),
        ),
      ) as _i2.Stats);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [Stance].
///
/// See the documentation for Mockito's code generation for more information.
class MockStance extends _i1.Mock implements _i2.Stance {
  MockStance() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get personId => (super.noSuchMethod(
        Invocation.getter(#personId),
        returnValue: 0,
      ) as int);
  @override
  bool get openToAdoption => (super.noSuchMethod(
        Invocation.getter(#openToAdoption),
        returnValue: false,
      ) as bool);
  @override
  bool get openToMarriage => (super.noSuchMethod(
        Invocation.getter(#openToMarriage),
        returnValue: false,
      ) as bool);
  @override
  bool get openToSexWorkerPartner => (super.noSuchMethod(
        Invocation.getter(#openToSexWorkerPartner),
        returnValue: false,
      ) as bool);
  @override
  bool get openToAbortion => (super.noSuchMethod(
        Invocation.getter(#openToAbortion),
        returnValue: false,
      ) as bool);
  @override
  bool get openToSurrogacy => (super.noSuchMethod(
        Invocation.getter(#openToSurrogacy),
        returnValue: false,
      ) as bool);
  @override
  bool get openToAlternativeFertilityMethods => (super.noSuchMethod(
        Invocation.getter(#openToAlternativeFertilityMethods),
        returnValue: false,
      ) as bool);
  @override
  bool get openToSigningPrenup => (super.noSuchMethod(
        Invocation.getter(#openToSigningPrenup),
        returnValue: false,
      ) as bool);
  @override
  bool get wantsPartnerToSignPrenup => (super.noSuchMethod(
        Invocation.getter(#wantsPartnerToSignPrenup),
        returnValue: false,
      ) as bool);
  @override
  bool get openToCrimes => (super.noSuchMethod(
        Invocation.getter(#openToCrimes),
        returnValue: false,
      ) as bool);
  @override
  bool get openToStayAtHomeParenting => (super.noSuchMethod(
        Invocation.getter(#openToStayAtHomeParenting),
        returnValue: false,
      ) as bool);
  @override
  bool get openToPremaritalSex => (super.noSuchMethod(
        Invocation.getter(#openToPremaritalSex),
        returnValue: false,
      ) as bool);
  @override
  bool get openToWorkingAJob => (super.noSuchMethod(
        Invocation.getter(#openToWorkingAJob),
        returnValue: false,
      ) as bool);
  @override
  bool get openToBeingPregnant => (super.noSuchMethod(
        Invocation.getter(#openToBeingPregnant),
        returnValue: false,
      ) as bool);
  @override
  bool get openToHavingChildren => (super.noSuchMethod(
        Invocation.getter(#openToHavingChildren),
        returnValue: false,
      ) as bool);
  @override
  bool get openToHavingChildrenOutsideAMarriage => (super.noSuchMethod(
        Invocation.getter(#openToHavingChildrenOutsideAMarriage),
        returnValue: false,
      ) as bool);
  @override
  bool get openToHavingMultipleCoparents => (super.noSuchMethod(
        Invocation.getter(#openToHavingMultipleCoparents),
        returnValue: false,
      ) as bool);
  @override
  bool get openToCheating => (super.noSuchMethod(
        Invocation.getter(#openToCheating),
        returnValue: false,
      ) as bool);
  @override
  bool get openToGayPeople => (super.noSuchMethod(
        Invocation.getter(#openToGayPeople),
        returnValue: false,
      ) as bool);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.StanceTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeStanceTableCompanion_4(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.StanceTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.Stance copyWith({
    int? id,
    int? personId,
    bool? openToAdoption,
    bool? openToMarriage,
    bool? openToSexWorkerPartner,
    bool? openToAbortion,
    bool? openToSurrogacy,
    bool? openToAlternativeFertilityMethods,
    bool? openToSigningPrenup,
    bool? wantsPartnerToSignPrenup,
    bool? openToCrimes,
    bool? openToStayAtHomeParenting,
    bool? openToPremaritalSex,
    bool? openToWorkingAJob,
    bool? openToBeingPregnant,
    bool? openToHavingChildren,
    bool? openToHavingChildrenOutsideAMarriage,
    bool? openToHavingMultipleCoparents,
    bool? openToCheating,
    bool? openToGayPeople,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #personId: personId,
            #openToAdoption: openToAdoption,
            #openToMarriage: openToMarriage,
            #openToSexWorkerPartner: openToSexWorkerPartner,
            #openToAbortion: openToAbortion,
            #openToSurrogacy: openToSurrogacy,
            #openToAlternativeFertilityMethods:
                openToAlternativeFertilityMethods,
            #openToSigningPrenup: openToSigningPrenup,
            #wantsPartnerToSignPrenup: wantsPartnerToSignPrenup,
            #openToCrimes: openToCrimes,
            #openToStayAtHomeParenting: openToStayAtHomeParenting,
            #openToPremaritalSex: openToPremaritalSex,
            #openToWorkingAJob: openToWorkingAJob,
            #openToBeingPregnant: openToBeingPregnant,
            #openToHavingChildren: openToHavingChildren,
            #openToHavingChildrenOutsideAMarriage:
                openToHavingChildrenOutsideAMarriage,
            #openToHavingMultipleCoparents: openToHavingMultipleCoparents,
            #openToCheating: openToCheating,
            #openToGayPeople: openToGayPeople,
          },
        ),
        returnValue: _FakeStance_5(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #personId: personId,
              #openToAdoption: openToAdoption,
              #openToMarriage: openToMarriage,
              #openToSexWorkerPartner: openToSexWorkerPartner,
              #openToAbortion: openToAbortion,
              #openToSurrogacy: openToSurrogacy,
              #openToAlternativeFertilityMethods:
                  openToAlternativeFertilityMethods,
              #openToSigningPrenup: openToSigningPrenup,
              #wantsPartnerToSignPrenup: wantsPartnerToSignPrenup,
              #openToCrimes: openToCrimes,
              #openToStayAtHomeParenting: openToStayAtHomeParenting,
              #openToPremaritalSex: openToPremaritalSex,
              #openToWorkingAJob: openToWorkingAJob,
              #openToBeingPregnant: openToBeingPregnant,
              #openToHavingChildren: openToHavingChildren,
              #openToHavingChildrenOutsideAMarriage:
                  openToHavingChildrenOutsideAMarriage,
              #openToHavingMultipleCoparents: openToHavingMultipleCoparents,
              #openToCheating: openToCheating,
              #openToGayPeople: openToGayPeople,
            },
          ),
        ),
      ) as _i2.Stance);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [PersonUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockPersonUsecases extends _i1.Mock implements _i237.PersonUsecases {
  MockPersonUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GenerateAPersonUsecase get generateAPersonUsecase => (super.noSuchMethod(
        Invocation.getter(#generateAPersonUsecase),
        returnValue: _FakeGenerateAPersonUsecase_6(
          this,
          Invocation.getter(#generateAPersonUsecase),
        ),
      ) as _i3.GenerateAPersonUsecase);
  @override
  _i4.GenerateListOfPersonUsecase get generateListOfPersonUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#generateListOfPersonUsecase),
        returnValue: _FakeGenerateListOfPersonUsecase_7(
          this,
          Invocation.getter(#generateListOfPersonUsecase),
        ),
      ) as _i4.GenerateListOfPersonUsecase);
  @override
  _i5.GeneratePersonalityUsecase get generatePersonalityUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#generatePersonalityUsecase),
        returnValue: _FakeGeneratePersonalityUsecase_8(
          this,
          Invocation.getter(#generatePersonalityUsecase),
        ),
      ) as _i5.GeneratePersonalityUsecase);
  @override
  _i6.GenerateStatsUsecase get generateStatsUsecase => (super.noSuchMethod(
        Invocation.getter(#generateStatsUsecase),
        returnValue: _FakeGenerateStatsUsecase_9(
          this,
          Invocation.getter(#generateStatsUsecase),
        ),
      ) as _i6.GenerateStatsUsecase);
  @override
  _i7.GenerateStanceUsecase get generateStanceUsecase => (super.noSuchMethod(
        Invocation.getter(#generateStanceUsecase),
        returnValue: _FakeGenerateStanceUsecase_10(
          this,
          Invocation.getter(#generateStanceUsecase),
        ),
      ) as _i7.GenerateStanceUsecase);
  @override
  _i8.GenerateBabyTraitsUsecase get generateBabyTraitsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#generateBabyTraitsUsecase),
        returnValue: _FakeGenerateBabyTraitsUsecase_11(
          this,
          Invocation.getter(#generateBabyTraitsUsecase),
        ),
      ) as _i8.GenerateBabyTraitsUsecase);
  @override
  _i9.CreateAdultPersonUsecase get createAdultPersonUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#createAdultPersonUsecase),
        returnValue: _FakeCreateAdultPersonUsecase_12(
          this,
          Invocation.getter(#createAdultPersonUsecase),
        ),
      ) as _i9.CreateAdultPersonUsecase);
  @override
  _i10.CreateChildPersonUsecase get createChildPersonUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#createChildPersonUsecase),
        returnValue: _FakeCreateChildPersonUsecase_13(
          this,
          Invocation.getter(#createChildPersonUsecase),
        ),
      ) as _i10.CreateChildPersonUsecase);
  @override
  _i11.DepleteBabyEnergyUsecase get depleteBabyEnergyUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#depleteBabyEnergyUsecase),
        returnValue: _FakeDepleteBabyEnergyUsecase_14(
          this,
          Invocation.getter(#depleteBabyEnergyUsecase),
        ),
      ) as _i11.DepleteBabyEnergyUsecase);
  @override
  _i12.DepleteBabyHungerUsecase get depleteBabyHungerUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#depleteBabyHungerUsecase),
        returnValue: _FakeDepleteBabyHungerUsecase_15(
          this,
          Invocation.getter(#depleteBabyHungerUsecase),
        ),
      ) as _i12.DepleteBabyHungerUsecase);
  @override
  _i13.DepleteMainPlayerEnergyUsecase get depleteMainPlayerEnergyUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#depleteMainPlayerEnergyUsecase),
        returnValue: _FakeDepleteMainPlayerEnergyUsecase_16(
          this,
          Invocation.getter(#depleteMainPlayerEnergyUsecase),
        ),
      ) as _i13.DepleteMainPlayerEnergyUsecase);
  @override
  _i14.DepleteMainPlayerHungerUsecase get depleteMainPlayerHungerUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#depleteMainPlayerHungerUsecase),
        returnValue: _FakeDepleteMainPlayerHungerUsecase_17(
          this,
          Invocation.getter(#depleteMainPlayerHungerUsecase),
        ),
      ) as _i14.DepleteMainPlayerHungerUsecase);
  @override
  _i15.DepleteMainPlayerHealthUsecase get depleteMainPlayerHealthUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#depleteMainPlayerHealthUsecase),
        returnValue: _FakeDepleteMainPlayerHealthUsecase_18(
          this,
          Invocation.getter(#depleteMainPlayerHealthUsecase),
        ),
      ) as _i15.DepleteMainPlayerHealthUsecase);
  @override
  _i16.DepleteMainPlayerMoodUsecase get depleteMainPlayerMoodUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#depleteMainPlayerMoodUsecase),
        returnValue: _FakeDepleteMainPlayerMoodUsecase_19(
          this,
          Invocation.getter(#depleteMainPlayerMoodUsecase),
        ),
      ) as _i16.DepleteMainPlayerMoodUsecase);
  @override
  _i17.DepleteMainPlayerAthleticismUsecase
      get depleteMainPlayerAthleticismUsecase => (super.noSuchMethod(
            Invocation.getter(#depleteMainPlayerAthleticismUsecase),
            returnValue: _FakeDepleteMainPlayerAthleticismUsecase_20(
              this,
              Invocation.getter(#depleteMainPlayerAthleticismUsecase),
            ),
          ) as _i17.DepleteMainPlayerAthleticismUsecase);
  @override
  _i18.IncreaseMainPlayerSobernessUsecase
      get increaseMainPlayerSobernessUsecase => (super.noSuchMethod(
            Invocation.getter(#increaseMainPlayerSobernessUsecase),
            returnValue: _FakeIncreaseMainPlayerSobernessUsecase_21(
              this,
              Invocation.getter(#increaseMainPlayerSobernessUsecase),
            ),
          ) as _i18.IncreaseMainPlayerSobernessUsecase);
  @override
  _i19.DepleteNonPlayerHungerUsecase get depleteNonPlayerHungerUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#depleteNonPlayerHungerUsecase),
        returnValue: _FakeDepleteNonPlayerHungerUsecase_22(
          this,
          Invocation.getter(#depleteNonPlayerHungerUsecase),
        ),
      ) as _i19.DepleteNonPlayerHungerUsecase);
  @override
  _i20.EatUsecase get eatUsecase => (super.noSuchMethod(
        Invocation.getter(#eatUsecase),
        returnValue: _FakeEatUsecase_23(
          this,
          Invocation.getter(#eatUsecase),
        ),
      ) as _i20.EatUsecase);
  @override
  _i21.QuickEatUsecase get quickEatUsecase => (super.noSuchMethod(
        Invocation.getter(#quickEatUsecase),
        returnValue: _FakeQuickEatUsecase_24(
          this,
          Invocation.getter(#quickEatUsecase),
        ),
      ) as _i21.QuickEatUsecase);
  @override
  _i22.SleepUsecase get sleepUsecase => (super.noSuchMethod(
        Invocation.getter(#sleepUsecase),
        returnValue: _FakeSleepUsecase_25(
          this,
          Invocation.getter(#sleepUsecase),
        ),
      ) as _i22.SleepUsecase);
  @override
  _i23.MakeNonPlayerHungryUsecase get makeNonPlayerHungryUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#makeNonPlayerHungryUsecase),
        returnValue: _FakeMakeNonPlayerHungryUsecase_26(
          this,
          Invocation.getter(#makeNonPlayerHungryUsecase),
        ),
      ) as _i23.MakeNonPlayerHungryUsecase);
  @override
  _i24.UpdatePersonUsecase get updatePersonUsecase => (super.noSuchMethod(
        Invocation.getter(#updatePersonUsecase),
        returnValue: _FakeUpdatePersonUsecase_27(
          this,
          Invocation.getter(#updatePersonUsecase),
        ),
      ) as _i24.UpdatePersonUsecase);
  @override
  _i25.DeletePersonUsecase get deletePersonUsecase => (super.noSuchMethod(
        Invocation.getter(#deletePersonUsecase),
        returnValue: _FakeDeletePersonUsecase_28(
          this,
          Invocation.getter(#deletePersonUsecase),
        ),
      ) as _i25.DeletePersonUsecase);
  @override
  _i26.GetPersonStatsUsecase get getPersonStatsUsecase => (super.noSuchMethod(
        Invocation.getter(#getPersonStatsUsecase),
        returnValue: _FakeGetPersonStatsUsecase_29(
          this,
          Invocation.getter(#getPersonStatsUsecase),
        ),
      ) as _i26.GetPersonStatsUsecase);
  @override
  _i27.GetPersonUsecase get getPersonUsecase => (super.noSuchMethod(
        Invocation.getter(#getPersonUsecase),
        returnValue: _FakeGetPersonUsecase_30(
          this,
          Invocation.getter(#getPersonUsecase),
        ),
      ) as _i27.GetPersonUsecase);
  @override
  _i28.GetPlayerMoneyUsecase get getPlayerMoneyUsecase => (super.noSuchMethod(
        Invocation.getter(#getPlayerMoneyUsecase),
        returnValue: _FakeGetPlayerMoneyUsecase_31(
          this,
          Invocation.getter(#getPlayerMoneyUsecase),
        ),
      ) as _i28.GetPlayerMoneyUsecase);
  @override
  _i29.TakeMoneyFromPlayerUsecase get takeMoneyFromPlayerUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#takeMoneyFromPlayerUsecase),
        returnValue: _FakeTakeMoneyFromPlayerUsecase_32(
          this,
          Invocation.getter(#takeMoneyFromPlayerUsecase),
        ),
      ) as _i29.TakeMoneyFromPlayerUsecase);
  @override
  _i30.AddMoneyToPlayerUsecase get addMoneyToPlayerUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addMoneyToPlayerUsecase),
        returnValue: _FakeAddMoneyToPlayerUsecase_33(
          this,
          Invocation.getter(#addMoneyToPlayerUsecase),
        ),
      ) as _i30.AddMoneyToPlayerUsecase);
  @override
  _i31.UpdateStatsUsecase get updateStatsUsecase => (super.noSuchMethod(
        Invocation.getter(#updateStatsUsecase),
        returnValue: _FakeUpdateStatsUsecase_34(
          this,
          Invocation.getter(#updateStatsUsecase),
        ),
      ) as _i31.UpdateStatsUsecase);
  @override
  _i32.UpdateMoodStatsUsecase get updateMoodStatsUsecase => (super.noSuchMethod(
        Invocation.getter(#updateMoodStatsUsecase),
        returnValue: _FakeUpdateMoodStatsUsecase_35(
          this,
          Invocation.getter(#updateMoodStatsUsecase),
        ),
      ) as _i32.UpdateMoodStatsUsecase);
  @override
  _i33.UpdateHealthStatsUsecase get updateHealthStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateHealthStatsUsecase),
        returnValue: _FakeUpdateHealthStatsUsecase_36(
          this,
          Invocation.getter(#updateHealthStatsUsecase),
        ),
      ) as _i33.UpdateHealthStatsUsecase);
  @override
  _i34.UpdateHungerStatsUsecase get updateHungerStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateHungerStatsUsecase),
        returnValue: _FakeUpdateHungerStatsUsecase_37(
          this,
          Invocation.getter(#updateHungerStatsUsecase),
        ),
      ) as _i34.UpdateHungerStatsUsecase);
  @override
  _i35.UpdateEnergyStatsUsecase get updateEnergyStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateEnergyStatsUsecase),
        returnValue: _FakeUpdateEnergyStatsUsecase_38(
          this,
          Invocation.getter(#updateEnergyStatsUsecase),
        ),
      ) as _i35.UpdateEnergyStatsUsecase);
  @override
  _i36.UpdateLooksStatsUsecase get updateLooksStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateLooksStatsUsecase),
        returnValue: _FakeUpdateLooksStatsUsecase_39(
          this,
          Invocation.getter(#updateLooksStatsUsecase),
        ),
      ) as _i36.UpdateLooksStatsUsecase);
  @override
  _i37.UpdateSoberStatsUsecase get updateSoberStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateSoberStatsUsecase),
        returnValue: _FakeUpdateSoberStatsUsecase_40(
          this,
          Invocation.getter(#updateSoberStatsUsecase),
        ),
      ) as _i37.UpdateSoberStatsUsecase);
  @override
  _i38.UpdateIntellectStatsUsecase get updateIntellectStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateIntellectStatsUsecase),
        returnValue: _FakeUpdateIntellectStatsUsecase_41(
          this,
          Invocation.getter(#updateIntellectStatsUsecase),
        ),
      ) as _i38.UpdateIntellectStatsUsecase);
  @override
  _i39.UpdateAthleticismStatsUsecase get updateAthleticismStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateAthleticismStatsUsecase),
        returnValue: _FakeUpdateAthleticismStatsUsecase_42(
          this,
          Invocation.getter(#updateAthleticismStatsUsecase),
        ),
      ) as _i39.UpdateAthleticismStatsUsecase);
  @override
  _i40.CheckIfPlayerCanAffordItUsecase get checkIfPlayerCanAffordItUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#checkIfPlayerCanAffordItUsecase),
        returnValue: _FakeCheckIfPlayerCanAffordItUsecase_43(
          this,
          Invocation.getter(#checkIfPlayerCanAffordItUsecase),
        ),
      ) as _i40.CheckIfPlayerCanAffordItUsecase);
  @override
  _i41.WatchPersonUsecase get watchPersonUsecase => (super.noSuchMethod(
        Invocation.getter(#watchPersonUsecase),
        returnValue: _FakeWatchPersonUsecase_44(
          this,
          Invocation.getter(#watchPersonUsecase),
        ),
      ) as _i41.WatchPersonUsecase);
  @override
  _i42.WatchPersonStatsUsecase get watchPersonStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchPersonStatsUsecase),
        returnValue: _FakeWatchPersonStatsUsecase_45(
          this,
          Invocation.getter(#watchPersonStatsUsecase),
        ),
      ) as _i42.WatchPersonStatsUsecase);
  @override
  _i43.GetPlayerInformationFromDataUsecase
      get getPlayerInformationFromDataUsecase => (super.noSuchMethod(
            Invocation.getter(#getPlayerInformationFromDataUsecase),
            returnValue: _FakeGetPlayerInformationFromDataUsecase_46(
              this,
              Invocation.getter(#getPlayerInformationFromDataUsecase),
            ),
          ) as _i43.GetPlayerInformationFromDataUsecase);
  @override
  _i44.GetPersonDepleteStatsFlagUsecase get getPersonDepleteStatsFlagUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getPersonDepleteStatsFlagUsecase),
        returnValue: _FakeGetPersonDepleteStatsFlagUsecase_47(
          this,
          Invocation.getter(#getPersonDepleteStatsFlagUsecase),
        ),
      ) as _i44.GetPersonDepleteStatsFlagUsecase);
  @override
  _i45.CreateOrUpdateDepleteStatsFlagUsecase
      get createOrUpdateDepleteStatsFlagUsecase => (super.noSuchMethod(
            Invocation.getter(#createOrUpdateDepleteStatsFlagUsecase),
            returnValue: _FakeCreateOrUpdateDepleteStatsFlagUsecase_48(
              this,
              Invocation.getter(#createOrUpdateDepleteStatsFlagUsecase),
            ),
          ) as _i45.CreateOrUpdateDepleteStatsFlagUsecase);
  @override
  _i46.DeletePersonDepleteStatsFlagUsecase
      get deletePersonDepleteStatsFlagUsecase => (super.noSuchMethod(
            Invocation.getter(#deletePersonDepleteStatsFlagUsecase),
            returnValue: _FakeDeletePersonDepleteStatsFlagUsecase_49(
              this,
              Invocation.getter(#deletePersonDepleteStatsFlagUsecase),
            ),
          ) as _i46.DeletePersonDepleteStatsFlagUsecase);
  @override
  _i47.ToggleDepleteStatsFlagUsecase get toggleDepleteStatsFlagUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#toggleDepleteStatsFlagUsecase),
        returnValue: _FakeToggleDepleteStatsFlagUsecase_50(
          this,
          Invocation.getter(#toggleDepleteStatsFlagUsecase),
        ),
      ) as _i47.ToggleDepleteStatsFlagUsecase);
  @override
  _i48.ResetDepleteStatsFlagUsecase get resetDepleteStatsFlagUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#resetDepleteStatsFlagUsecase),
        returnValue: _FakeResetDepleteStatsFlagUsecase_51(
          this,
          Invocation.getter(#resetDepleteStatsFlagUsecase),
        ),
      ) as _i48.ResetDepleteStatsFlagUsecase);
  @override
  _i49.EnergyAndHungerEmergencyModeSideEffectUsecase
      get energyAndHungerEmergencyModeSideEffectUsecase => (super.noSuchMethod(
            Invocation.getter(#energyAndHungerEmergencyModeSideEffectUsecase),
            returnValue: _FakeEnergyAndHungerEmergencyModeSideEffectUsecase_52(
              this,
              Invocation.getter(#energyAndHungerEmergencyModeSideEffectUsecase),
            ),
          ) as _i49.EnergyAndHungerEmergencyModeSideEffectUsecase);
}

/// A class which mocks [Game].
///
/// See the documentation for Mockito's code generation for more information.
class MockGame extends _i1.Mock implements _i2.Game {
  MockGame() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get currentPlayerID => (super.noSuchMethod(
        Invocation.getter(#currentPlayerID),
        returnValue: 0,
      ) as int);
  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);
  @override
  int get lastPlayedTime => (super.noSuchMethod(
        Invocation.getter(#lastPlayedTime),
        returnValue: 0,
      ) as int);
  @override
  int get currentDay => (super.noSuchMethod(
        Invocation.getter(#currentDay),
        returnValue: 0,
      ) as int);
  @override
  int get currentTimeInMinutes => (super.noSuchMethod(
        Invocation.getter(#currentTimeInMinutes),
        returnValue: 0,
      ) as int);
  @override
  int get generation => (super.noSuchMethod(
        Invocation.getter(#generation),
        returnValue: 0,
      ) as int);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.GameTableCompanion toCompanion(bool? nullToAbsent) => (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeGameTableCompanion_53(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.GameTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.Game copyWith({
    int? id,
    int? currentPlayerID,
    bool? isActive,
    int? lastPlayedTime,
    int? currentDay,
    int? currentTimeInMinutes,
    int? generation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #currentPlayerID: currentPlayerID,
            #isActive: isActive,
            #lastPlayedTime: lastPlayedTime,
            #currentDay: currentDay,
            #currentTimeInMinutes: currentTimeInMinutes,
            #generation: generation,
          },
        ),
        returnValue: _FakeGame_54(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #currentPlayerID: currentPlayerID,
              #isActive: isActive,
              #lastPlayedTime: lastPlayedTime,
              #currentDay: currentDay,
              #currentTimeInMinutes: currentTimeInMinutes,
              #generation: generation,
            },
          ),
        ),
      ) as _i2.Game);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [GameUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockGameUsecases extends _i1.Mock implements _i238.GameUsecases {
  MockGameUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i50.CreateNewGameUsecase get createGameUsecase => (super.noSuchMethod(
        Invocation.getter(#createGameUsecase),
        returnValue: _FakeCreateNewGameUsecase_55(
          this,
          Invocation.getter(#createGameUsecase),
        ),
      ) as _i50.CreateNewGameUsecase);
  @override
  _i51.UpdateGameUsecase get updateGameUsecase => (super.noSuchMethod(
        Invocation.getter(#updateGameUsecase),
        returnValue: _FakeUpdateGameUsecase_56(
          this,
          Invocation.getter(#updateGameUsecase),
        ),
      ) as _i51.UpdateGameUsecase);
  @override
  _i52.DeleteGameUsecase get deleteGameUsecase => (super.noSuchMethod(
        Invocation.getter(#deleteGameUsecase),
        returnValue: _FakeDeleteGameUsecase_57(
          this,
          Invocation.getter(#deleteGameUsecase),
        ),
      ) as _i52.DeleteGameUsecase);
  @override
  _i53.GetAllActiveGamesUsecase get getAllActiveGamesUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getAllActiveGamesUsecase),
        returnValue: _FakeGetAllActiveGamesUsecase_58(
          this,
          Invocation.getter(#getAllActiveGamesUsecase),
        ),
      ) as _i53.GetAllActiveGamesUsecase);
  @override
  _i54.GetGameUsecase get getGameUsecase => (super.noSuchMethod(
        Invocation.getter(#getGameUsecase),
        returnValue: _FakeGetGameUsecase_59(
          this,
          Invocation.getter(#getGameUsecase),
        ),
      ) as _i54.GetGameUsecase);
  @override
  _i55.GetLastPlayedActiveGameUsecase get getLastPlayedActiveGameUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getLastPlayedActiveGameUsecase),
        returnValue: _FakeGetLastPlayedActiveGameUsecase_60(
          this,
          Invocation.getter(#getLastPlayedActiveGameUsecase),
        ),
      ) as _i55.GetLastPlayedActiveGameUsecase);
  @override
  _i56.ChangeCurrentPlayerUsecase get changeCurrentPlayerUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#changeCurrentPlayerUsecase),
        returnValue: _FakeChangeCurrentPlayerUsecase_61(
          this,
          Invocation.getter(#changeCurrentPlayerUsecase),
        ),
      ) as _i56.ChangeCurrentPlayerUsecase);
  @override
  _i57.MoveTimeForwardUsecase get moveTimeForwardUsecase => (super.noSuchMethod(
        Invocation.getter(#moveTimeForwardUsecase),
        returnValue: _FakeMoveTimeForwardUsecase_62(
          this,
          Invocation.getter(#moveTimeForwardUsecase),
        ),
      ) as _i57.MoveTimeForwardUsecase);
  @override
  _i58.SetLastPlayedActiveGameUsecase get setLastPlayedActiveGameUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#setLastPlayedActiveGameUsecase),
        returnValue: _FakeSetLastPlayedActiveGameUsecase_63(
          this,
          Invocation.getter(#setLastPlayedActiveGameUsecase),
        ),
      ) as _i58.SetLastPlayedActiveGameUsecase);
  @override
  _i59.GetCurrentGameAndPlayerUsecase get getCurrentGameAndPlayerUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getCurrentGameAndPlayerUsecase),
        returnValue: _FakeGetCurrentGameAndPlayerUsecase_64(
          this,
          Invocation.getter(#getCurrentGameAndPlayerUsecase),
        ),
      ) as _i59.GetCurrentGameAndPlayerUsecase);
  @override
  _i60.GetPlayerBarInfoUsecase get getPlayerBarInfoUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getPlayerBarInfoUsecase),
        returnValue: _FakeGetPlayerBarInfoUsecase_65(
          this,
          Invocation.getter(#getPlayerBarInfoUsecase),
        ),
      ) as _i60.GetPlayerBarInfoUsecase);
  @override
  _i61.GetPlayerBarInfoFromDataUsecase get getPlayerBarInfoFromDataUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getPlayerBarInfoFromDataUsecase),
        returnValue: _FakeGetPlayerBarInfoFromDataUsecase_66(
          this,
          Invocation.getter(#getPlayerBarInfoFromDataUsecase),
        ),
      ) as _i61.GetPlayerBarInfoFromDataUsecase);
  @override
  _i62.WatchLastPlayedActiveGameUsecase get watchLastPlayedActiveGameUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchLastPlayedActiveGameUsecase),
        returnValue: _FakeWatchLastPlayedActiveGameUsecase_67(
          this,
          Invocation.getter(#watchLastPlayedActiveGameUsecase),
        ),
      ) as _i62.WatchLastPlayedActiveGameUsecase);
  @override
  _i63.GameControllerUsecase get gameControllerUsecase => (super.noSuchMethod(
        Invocation.getter(#gameControllerUsecase),
        returnValue: _FakeGameControllerUsecase_68(
          this,
          Invocation.getter(#gameControllerUsecase),
        ),
      ) as _i63.GameControllerUsecase);
  @override
  _i64.DecayAndAlterPlayerStatsUsecase get decayAndAlterPlayerStatsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#decayAndAlterPlayerStatsUsecase),
        returnValue: _FakeDecayAndAlterPlayerStatsUsecase_69(
          this,
          Invocation.getter(#decayAndAlterPlayerStatsUsecase),
        ),
      ) as _i64.DecayAndAlterPlayerStatsUsecase);
}

/// A class which mocks [Job].
///
/// See the documentation for Mockito's code generation for more information.
class MockJob extends _i1.Mock implements _i2.Job {
  MockJob() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  String get jobTitle => (super.noSuchMethod(
        Invocation.getter(#jobTitle),
        returnValue: '',
      ) as String);
  @override
  String get jobType => (super.noSuchMethod(
        Invocation.getter(#jobType),
        returnValue: '',
      ) as String);
  @override
  String get companySuffix => (super.noSuchMethod(
        Invocation.getter(#companySuffix),
        returnValue: '',
      ) as String);
  @override
  String get employmentType => (super.noSuchMethod(
        Invocation.getter(#employmentType),
        returnValue: '',
      ) as String);
  @override
  bool get getsTips => (super.noSuchMethod(
        Invocation.getter(#getsTips),
        returnValue: false,
      ) as bool);
  @override
  String get levelOneTitle => (super.noSuchMethod(
        Invocation.getter(#levelOneTitle),
        returnValue: '',
      ) as String);
  @override
  int get levelOneBasePay => (super.noSuchMethod(
        Invocation.getter(#levelOneBasePay),
        returnValue: 0,
      ) as int);
  @override
  String get levelTwoTitle => (super.noSuchMethod(
        Invocation.getter(#levelTwoTitle),
        returnValue: '',
      ) as String);
  @override
  int get levelTwoBasePay => (super.noSuchMethod(
        Invocation.getter(#levelTwoBasePay),
        returnValue: 0,
      ) as int);
  @override
  String get levelThreeTitle => (super.noSuchMethod(
        Invocation.getter(#levelThreeTitle),
        returnValue: '',
      ) as String);
  @override
  int get levelThreeBasePay => (super.noSuchMethod(
        Invocation.getter(#levelThreeBasePay),
        returnValue: 0,
      ) as int);
  @override
  String get qualifiedDisciplines => (super.noSuchMethod(
        Invocation.getter(#qualifiedDisciplines),
        returnValue: '',
      ) as String);
  @override
  String get qualifiedBranches => (super.noSuchMethod(
        Invocation.getter(#qualifiedBranches),
        returnValue: '',
      ) as String);
  @override
  int get healthInsuranceCoverage => (super.noSuchMethod(
        Invocation.getter(#healthInsuranceCoverage),
        returnValue: 0,
      ) as int);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.JobTableCompanion toCompanion(bool? nullToAbsent) => (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeJobTableCompanion_70(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.JobTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.Job copyWith({
    int? id,
    String? jobTitle,
    String? jobType,
    String? companySuffix,
    String? employmentType,
    bool? getsTips,
    String? levelOneTitle,
    int? levelOneBasePay,
    String? levelTwoTitle,
    int? levelTwoBasePay,
    String? levelThreeTitle,
    int? levelThreeBasePay,
    String? qualifiedDisciplines,
    String? qualifiedBranches,
    int? healthInsuranceCoverage,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #jobTitle: jobTitle,
            #jobType: jobType,
            #companySuffix: companySuffix,
            #employmentType: employmentType,
            #getsTips: getsTips,
            #levelOneTitle: levelOneTitle,
            #levelOneBasePay: levelOneBasePay,
            #levelTwoTitle: levelTwoTitle,
            #levelTwoBasePay: levelTwoBasePay,
            #levelThreeTitle: levelThreeTitle,
            #levelThreeBasePay: levelThreeBasePay,
            #qualifiedDisciplines: qualifiedDisciplines,
            #qualifiedBranches: qualifiedBranches,
            #healthInsuranceCoverage: healthInsuranceCoverage,
          },
        ),
        returnValue: _FakeJob_71(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #jobTitle: jobTitle,
              #jobType: jobType,
              #companySuffix: companySuffix,
              #employmentType: employmentType,
              #getsTips: getsTips,
              #levelOneTitle: levelOneTitle,
              #levelOneBasePay: levelOneBasePay,
              #levelTwoTitle: levelTwoTitle,
              #levelTwoBasePay: levelTwoBasePay,
              #levelThreeTitle: levelThreeTitle,
              #levelThreeBasePay: levelThreeBasePay,
              #qualifiedDisciplines: qualifiedDisciplines,
              #qualifiedBranches: qualifiedBranches,
              #healthInsuranceCoverage: healthInsuranceCoverage,
            },
          ),
        ),
      ) as _i2.Job);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [JobUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockJobUsecases extends _i1.Mock implements _i239.JobUsecases {
  MockJobUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i65.CheckIfQualifiedForFullTimeJobUsecase
      get checkIfQualifiedForFullTimeJobUsecase => (super.noSuchMethod(
            Invocation.getter(#checkIfQualifiedForFullTimeJobUsecase),
            returnValue: _FakeCheckIfQualifiedForFullTimeJobUsecase_72(
              this,
              Invocation.getter(#checkIfQualifiedForFullTimeJobUsecase),
            ),
          ) as _i65.CheckIfQualifiedForFullTimeJobUsecase);
  @override
  _i66.EndAllActiveFullTimeEmploymentUsecase
      get endAllActiveFullTimeEmploymentUsecase => (super.noSuchMethod(
            Invocation.getter(#endAllActiveFullTimeEmploymentUsecase),
            returnValue: _FakeEndAllActiveFullTimeEmploymentUsecase_73(
              this,
              Invocation.getter(#endAllActiveFullTimeEmploymentUsecase),
            ),
          ) as _i66.EndAllActiveFullTimeEmploymentUsecase);
  @override
  _i67.EmployPersonForFullTimeJobUsecase
      get employPersonForFullTimeJobUsecase => (super.noSuchMethod(
            Invocation.getter(#employPersonForFullTimeJobUsecase),
            returnValue: _FakeEmployPersonForFullTimeJobUsecase_74(
              this,
              Invocation.getter(#employPersonForFullTimeJobUsecase),
            ),
          ) as _i67.EmployPersonForFullTimeJobUsecase);
  @override
  _i68.GetAValidListOfFullTimeJobsUsecase
      get getAValidListOfFullTimeJobsUsecase => (super.noSuchMethod(
            Invocation.getter(#getAValidListOfFullTimeJobsUsecase),
            returnValue: _FakeGetAValidListOfFullTimeJobsUsecase_75(
              this,
              Invocation.getter(#getAValidListOfFullTimeJobsUsecase),
            ),
          ) as _i68.GetAValidListOfFullTimeJobsUsecase);
  @override
  _i69.WatchActiveEmploymentsUsecase get watchActiveEmploymentsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchActiveEmploymentsUsecase),
        returnValue: _FakeWatchActiveEmploymentsUsecase_76(
          this,
          Invocation.getter(#watchActiveEmploymentsUsecase),
        ),
      ) as _i69.WatchActiveEmploymentsUsecase);
  @override
  _i70.GetJobTitlesFromEmploymentsUsecase
      get getJobTitlesFromEmploymentsUsecase => (super.noSuchMethod(
            Invocation.getter(#getJobTitlesFromEmploymentsUsecase),
            returnValue: _FakeGetJobTitlesFromEmploymentsUsecase_77(
              this,
              Invocation.getter(#getJobTitlesFromEmploymentsUsecase),
            ),
          ) as _i70.GetJobTitlesFromEmploymentsUsecase);
  @override
  _i71.GetEmploymentPairsFromEmploymentsUsecase
      get getEmploymentPairsFromEmploymentsUsecase => (super.noSuchMethod(
            Invocation.getter(#getEmploymentPairsFromEmploymentsUsecase),
            returnValue: _FakeGetEmploymentPairsFromEmploymentsUsecase_78(
              this,
              Invocation.getter(#getEmploymentPairsFromEmploymentsUsecase),
            ),
          ) as _i71.GetEmploymentPairsFromEmploymentsUsecase);
  @override
  _i72.AddLocationToJobsListUsecase get addLocationToJobsListUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addLocationToJobsListUsecase),
        returnValue: _FakeAddLocationToJobsListUsecase_79(
          this,
          Invocation.getter(#addLocationToJobsListUsecase),
        ),
      ) as _i72.AddLocationToJobsListUsecase);
}

/// A class which mocks [School].
///
/// See the documentation for Mockito's code generation for more information.
class MockSchool extends _i1.Mock implements _i2.School {
  MockSchool() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get mainPersonId => (super.noSuchMethod(
        Invocation.getter(#mainPersonId),
        returnValue: 0,
      ) as int);
  @override
  int get degreeId => (super.noSuchMethod(
        Invocation.getter(#degreeId),
        returnValue: 0,
      ) as int);
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
      ) as String);
  @override
  int get grades => (super.noSuchMethod(
        Invocation.getter(#grades),
        returnValue: 0,
      ) as int);
  @override
  int get attendance => (super.noSuchMethod(
        Invocation.getter(#attendance),
        returnValue: 0,
      ) as int);
  @override
  int get project => (super.noSuchMethod(
        Invocation.getter(#project),
        returnValue: 0,
      ) as int);
  @override
  int get exam => (super.noSuchMethod(
        Invocation.getter(#exam),
        returnValue: 0,
      ) as int);
  @override
  int get classStartTime => (super.noSuchMethod(
        Invocation.getter(#classStartTime),
        returnValue: 0,
      ) as int);
  @override
  int get classEndTime => (super.noSuchMethod(
        Invocation.getter(#classEndTime),
        returnValue: 0,
      ) as int);
  @override
  int get totalSemesterNumber => (super.noSuchMethod(
        Invocation.getter(#totalSemesterNumber),
        returnValue: 0,
      ) as int);
  @override
  int get currentSemesterNumber => (super.noSuchMethod(
        Invocation.getter(#currentSemesterNumber),
        returnValue: 0,
      ) as int);
  @override
  String get schoolType => (super.noSuchMethod(
        Invocation.getter(#schoolType),
        returnValue: '',
      ) as String);
  @override
  int get semesterStartDay => (super.noSuchMethod(
        Invocation.getter(#semesterStartDay),
        returnValue: 0,
      ) as int);
  @override
  int get currentDayInSemester => (super.noSuchMethod(
        Invocation.getter(#currentDayInSemester),
        returnValue: 0,
      ) as int);
  @override
  String get degreeLevel => (super.noSuchMethod(
        Invocation.getter(#degreeLevel),
        returnValue: '',
      ) as String);
  @override
  int get schoolFeesPerSemester => (super.noSuchMethod(
        Invocation.getter(#schoolFeesPerSemester),
        returnValue: 0,
      ) as int);
  @override
  int get scholarshipPercentage => (super.noSuchMethod(
        Invocation.getter(#scholarshipPercentage),
        returnValue: 0,
      ) as int);
  @override
  int get totalLoanAmount => (super.noSuchMethod(
        Invocation.getter(#totalLoanAmount),
        returnValue: 0,
      ) as int);
  @override
  bool get loanProcessed => (super.noSuchMethod(
        Invocation.getter(#loanProcessed),
        returnValue: false,
      ) as bool);
  @override
  bool get hasTakenLeave => (super.noSuchMethod(
        Invocation.getter(#hasTakenLeave),
        returnValue: false,
      ) as bool);
  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);
  @override
  bool get isCompleted => (super.noSuchMethod(
        Invocation.getter(#isCompleted),
        returnValue: false,
      ) as bool);
  @override
  bool get wasExpelled => (super.noSuchMethod(
        Invocation.getter(#wasExpelled),
        returnValue: false,
      ) as bool);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.SchoolTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeSchoolTableCompanion_80(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.SchoolTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.School copyWith({
    int? id,
    int? mainPersonId,
    int? degreeId,
    String? name,
    int? grades,
    int? attendance,
    int? project,
    int? exam,
    int? classStartTime,
    int? classEndTime,
    int? totalSemesterNumber,
    int? currentSemesterNumber,
    String? schoolType,
    int? semesterStartDay,
    int? currentDayInSemester,
    String? degreeLevel,
    int? schoolFeesPerSemester,
    int? scholarshipPercentage,
    int? totalLoanAmount,
    bool? loanProcessed,
    bool? hasTakenLeave,
    bool? isActive,
    bool? isCompleted,
    bool? wasExpelled,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #mainPersonId: mainPersonId,
            #degreeId: degreeId,
            #name: name,
            #grades: grades,
            #attendance: attendance,
            #project: project,
            #exam: exam,
            #classStartTime: classStartTime,
            #classEndTime: classEndTime,
            #totalSemesterNumber: totalSemesterNumber,
            #currentSemesterNumber: currentSemesterNumber,
            #schoolType: schoolType,
            #semesterStartDay: semesterStartDay,
            #currentDayInSemester: currentDayInSemester,
            #degreeLevel: degreeLevel,
            #schoolFeesPerSemester: schoolFeesPerSemester,
            #scholarshipPercentage: scholarshipPercentage,
            #totalLoanAmount: totalLoanAmount,
            #loanProcessed: loanProcessed,
            #hasTakenLeave: hasTakenLeave,
            #isActive: isActive,
            #isCompleted: isCompleted,
            #wasExpelled: wasExpelled,
          },
        ),
        returnValue: _FakeSchool_81(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #mainPersonId: mainPersonId,
              #degreeId: degreeId,
              #name: name,
              #grades: grades,
              #attendance: attendance,
              #project: project,
              #exam: exam,
              #classStartTime: classStartTime,
              #classEndTime: classEndTime,
              #totalSemesterNumber: totalSemesterNumber,
              #currentSemesterNumber: currentSemesterNumber,
              #schoolType: schoolType,
              #semesterStartDay: semesterStartDay,
              #currentDayInSemester: currentDayInSemester,
              #degreeLevel: degreeLevel,
              #schoolFeesPerSemester: schoolFeesPerSemester,
              #scholarshipPercentage: scholarshipPercentage,
              #totalLoanAmount: totalLoanAmount,
              #loanProcessed: loanProcessed,
              #hasTakenLeave: hasTakenLeave,
              #isActive: isActive,
              #isCompleted: isCompleted,
              #wasExpelled: wasExpelled,
            },
          ),
        ),
      ) as _i2.School);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [SchoolRelationship].
///
/// See the documentation for Mockito's code generation for more information.
class MockSchoolRelationship extends _i1.Mock
    implements _i2.SchoolRelationship {
  MockSchoolRelationship() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get schoolId => (super.noSuchMethod(
        Invocation.getter(#schoolId),
        returnValue: 0,
      ) as int);
  @override
  int get mainPersonId => (super.noSuchMethod(
        Invocation.getter(#mainPersonId),
        returnValue: 0,
      ) as int);
  @override
  int get otherPersonId => (super.noSuchMethod(
        Invocation.getter(#otherPersonId),
        returnValue: 0,
      ) as int);
  @override
  String get schoolRelationshipType => (super.noSuchMethod(
        Invocation.getter(#schoolRelationshipType),
        returnValue: '',
      ) as String);
  @override
  String get informalRelationshipType => (super.noSuchMethod(
        Invocation.getter(#informalRelationshipType),
        returnValue: '',
      ) as String);
  @override
  int get grades => (super.noSuchMethod(
        Invocation.getter(#grades),
        returnValue: 0,
      ) as int);
  @override
  bool get professional => (super.noSuchMethod(
        Invocation.getter(#professional),
        returnValue: false,
      ) as bool);
  @override
  bool get helpful => (super.noSuchMethod(
        Invocation.getter(#helpful),
        returnValue: false,
      ) as bool);
  @override
  String get personalityType => (super.noSuchMethod(
        Invocation.getter(#personalityType),
        returnValue: '',
      ) as String);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.SchoolRelationshipTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeSchoolRelationshipTableCompanion_82(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.SchoolRelationshipTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.SchoolRelationship copyWith({
    int? id,
    int? schoolId,
    int? mainPersonId,
    int? otherPersonId,
    String? schoolRelationshipType,
    String? informalRelationshipType,
    int? grades,
    bool? professional,
    bool? helpful,
    String? personalityType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #schoolId: schoolId,
            #mainPersonId: mainPersonId,
            #otherPersonId: otherPersonId,
            #schoolRelationshipType: schoolRelationshipType,
            #informalRelationshipType: informalRelationshipType,
            #grades: grades,
            #professional: professional,
            #helpful: helpful,
            #personalityType: personalityType,
          },
        ),
        returnValue: _FakeSchoolRelationship_83(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #schoolId: schoolId,
              #mainPersonId: mainPersonId,
              #otherPersonId: otherPersonId,
              #schoolRelationshipType: schoolRelationshipType,
              #informalRelationshipType: informalRelationshipType,
              #grades: grades,
              #professional: professional,
              #helpful: helpful,
              #personalityType: personalityType,
            },
          ),
        ),
      ) as _i2.SchoolRelationship);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [SchoolProject].
///
/// See the documentation for Mockito's code generation for more information.
class MockSchoolProject extends _i1.Mock implements _i2.SchoolProject {
  MockSchoolProject() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get schoolId => (super.noSuchMethod(
        Invocation.getter(#schoolId),
        returnValue: 0,
      ) as int);
  @override
  int get mainPersonId => (super.noSuchMethod(
        Invocation.getter(#mainPersonId),
        returnValue: 0,
      ) as int);
  @override
  int get projectPartnerSchoolRelationshipId => (super.noSuchMethod(
        Invocation.getter(#projectPartnerSchoolRelationshipId),
        returnValue: 0,
      ) as int);
  @override
  int get semesterNumber => (super.noSuchMethod(
        Invocation.getter(#semesterNumber),
        returnValue: 0,
      ) as int);
  @override
  int get mainPersonContribution => (super.noSuchMethod(
        Invocation.getter(#mainPersonContribution),
        returnValue: 0,
      ) as int);
  @override
  int get projectPartnerContribution => (super.noSuchMethod(
        Invocation.getter(#projectPartnerContribution),
        returnValue: 0,
      ) as int);
  @override
  bool get projectPartnerWillContribute => (super.noSuchMethod(
        Invocation.getter(#projectPartnerWillContribute),
        returnValue: false,
      ) as bool);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.SchoolProjectTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeSchoolProjectTableCompanion_84(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.SchoolProjectTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.SchoolProject copyWith({
    int? id,
    int? schoolId,
    int? mainPersonId,
    int? projectPartnerSchoolRelationshipId,
    int? semesterNumber,
    int? mainPersonContribution,
    int? projectPartnerContribution,
    bool? projectPartnerWillContribute,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #schoolId: schoolId,
            #mainPersonId: mainPersonId,
            #projectPartnerSchoolRelationshipId:
                projectPartnerSchoolRelationshipId,
            #semesterNumber: semesterNumber,
            #mainPersonContribution: mainPersonContribution,
            #projectPartnerContribution: projectPartnerContribution,
            #projectPartnerWillContribute: projectPartnerWillContribute,
          },
        ),
        returnValue: _FakeSchoolProject_85(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #schoolId: schoolId,
              #mainPersonId: mainPersonId,
              #projectPartnerSchoolRelationshipId:
                  projectPartnerSchoolRelationshipId,
              #semesterNumber: semesterNumber,
              #mainPersonContribution: mainPersonContribution,
              #projectPartnerContribution: projectPartnerContribution,
              #projectPartnerWillContribute: projectPartnerWillContribute,
            },
          ),
        ),
      ) as _i2.SchoolProject);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [SchoolUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockSchoolUsecases extends _i1.Mock implements _i240.SchoolUsecases {
  MockSchoolUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i73.GetCompletedDegreesUsecase get getCompletedDegreesUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getCompletedDegreesUsecase),
        returnValue: _FakeGetCompletedDegreesUsecase_86(
          this,
          Invocation.getter(#getCompletedDegreesUsecase),
        ),
      ) as _i73.GetCompletedDegreesUsecase);
  @override
  _i74.GetHighestAttainedDegreeLevelForACompletedDegreeUsecase
      get getHighestAttainedDegreeLevelForACompletedDegree =>
          (super.noSuchMethod(
            Invocation.getter(
                #getHighestAttainedDegreeLevelForACompletedDegree),
            returnValue:
                _FakeGetHighestAttainedDegreeLevelForACompletedDegreeUsecase_87(
              this,
              Invocation.getter(
                  #getHighestAttainedDegreeLevelForACompletedDegree),
            ),
          ) as _i74.GetHighestAttainedDegreeLevelForACompletedDegreeUsecase);
  @override
  _i75.EndAllActiveSchoolProgramsUsecase
      get endAllActiveSchoolProgramsUsecase => (super.noSuchMethod(
            Invocation.getter(#endAllActiveSchoolProgramsUsecase),
            returnValue: _FakeEndAllActiveSchoolProgramsUsecase_88(
              this,
              Invocation.getter(#endAllActiveSchoolProgramsUsecase),
            ),
          ) as _i75.EndAllActiveSchoolProgramsUsecase);
  @override
  _i76.GetGradeForCompletedSchoolUsecase
      get getGradeForCompletedSchoolUsecase => (super.noSuchMethod(
            Invocation.getter(#getGradeForCompletedSchoolUsecase),
            returnValue: _FakeGetGradeForCompletedSchoolUsecase_89(
              this,
              Invocation.getter(#getGradeForCompletedSchoolUsecase),
            ),
          ) as _i76.GetGradeForCompletedSchoolUsecase);
  @override
  _i77.GetHighestGradeForAnyCompletedSchoolInADisciplineUsecase
      get getHighestGradeForAnyCompletedSchoolInADisciplineUsecase =>
          (super.noSuchMethod(
            Invocation.getter(
                #getHighestGradeForAnyCompletedSchoolInADisciplineUsecase),
            returnValue:
                _FakeGetHighestGradeForAnyCompletedSchoolInADisciplineUsecase_90(
              this,
              Invocation.getter(
                  #getHighestGradeForAnyCompletedSchoolInADisciplineUsecase),
            ),
          ) as _i77.GetHighestGradeForAnyCompletedSchoolInADisciplineUsecase);
  @override
  _i78.GetOrCreateDegreeUsecase get getOrCreateDegreeUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getOrCreateDegreeUsecase),
        returnValue: _FakeGetOrCreateDegreeUsecase_91(
          this,
          Invocation.getter(#getOrCreateDegreeUsecase),
        ),
      ) as _i78.GetOrCreateDegreeUsecase);
  @override
  _i79.WatchActiveSchoolUsecase get watchActiveSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchActiveSchoolUsecase),
        returnValue: _FakeWatchActiveSchoolUsecase_92(
          this,
          Invocation.getter(#watchActiveSchoolUsecase),
        ),
      ) as _i79.WatchActiveSchoolUsecase);
  @override
  _i80.GetSchoolPairsFromSchoolsUsecase get getSchoolPairsFromSchoolsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getSchoolPairsFromSchoolsUsecase),
        returnValue: _FakeGetSchoolPairsFromSchoolsUsecase_93(
          this,
          Invocation.getter(#getSchoolPairsFromSchoolsUsecase),
        ),
      ) as _i80.GetSchoolPairsFromSchoolsUsecase);
  @override
  _i81.GetASchoolPairFromSchoolUsecase get getASchoolPairFromSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getASchoolPairFromSchoolUsecase),
        returnValue: _FakeGetASchoolPairFromSchoolUsecase_94(
          this,
          Invocation.getter(#getASchoolPairFromSchoolUsecase),
        ),
      ) as _i81.GetASchoolPairFromSchoolUsecase);
  @override
  _i82.GetValidListOfBachelorDegreesUsecase
      get getValidListOfBachelorDegreesUsecase => (super.noSuchMethod(
            Invocation.getter(#getValidListOfBachelorDegreesUsecase),
            returnValue: _FakeGetValidListOfBachelorDegreesUsecase_95(
              this,
              Invocation.getter(#getValidListOfBachelorDegreesUsecase),
            ),
          ) as _i82.GetValidListOfBachelorDegreesUsecase);
  @override
  _i83.GetValidListOfMasterDegreesUsecase
      get getValidListOfMasterDegreesUsecase => (super.noSuchMethod(
            Invocation.getter(#getValidListOfMasterDegreesUsecase),
            returnValue: _FakeGetValidListOfMasterDegreesUsecase_96(
              this,
              Invocation.getter(#getValidListOfMasterDegreesUsecase),
            ),
          ) as _i83.GetValidListOfMasterDegreesUsecase);
  @override
  _i84.GetValidListOfDoctorateDegreesUsecase
      get getValidListOfDoctorateDegreesUsecase => (super.noSuchMethod(
            Invocation.getter(#getValidListOfDoctorateDegreesUsecase),
            returnValue: _FakeGetValidListOfDoctorateDegreesUsecase_97(
              this,
              Invocation.getter(#getValidListOfDoctorateDegreesUsecase),
            ),
          ) as _i84.GetValidListOfDoctorateDegreesUsecase);
  @override
  _i85.GetValidListOfEducationDegreesUsecase
      get getValidListOfEducationDegreesUsecase => (super.noSuchMethod(
            Invocation.getter(#getValidListOfEducationDegreesUsecase),
            returnValue: _FakeGetValidListOfEducationDegreesUsecase_98(
              this,
              Invocation.getter(#getValidListOfEducationDegreesUsecase),
            ),
          ) as _i85.GetValidListOfEducationDegreesUsecase);
  @override
  _i86.GetValidListOfLawDegreesUsecase get getValidListOfLawDegreesUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getValidListOfLawDegreesUsecase),
        returnValue: _FakeGetValidListOfLawDegreesUsecase_99(
          this,
          Invocation.getter(#getValidListOfLawDegreesUsecase),
        ),
      ) as _i86.GetValidListOfLawDegreesUsecase);
  @override
  _i87.GetValidListOfMedicalDegreesUsecase
      get getValidListOfMedicalDegreesUsecase => (super.noSuchMethod(
            Invocation.getter(#getValidListOfMedicalDegreesUsecase),
            returnValue: _FakeGetValidListOfMedicalDegreesUsecase_100(
              this,
              Invocation.getter(#getValidListOfMedicalDegreesUsecase),
            ),
          ) as _i87.GetValidListOfMedicalDegreesUsecase);
  @override
  _i88.GetValidListOfNursingDegreesUsecase
      get getValidListOfNursingDegreesUsecase => (super.noSuchMethod(
            Invocation.getter(#getValidListOfNursingDegreesUsecase),
            returnValue: _FakeGetValidListOfNursingDegreesUsecase_101(
              this,
              Invocation.getter(#getValidListOfNursingDegreesUsecase),
            ),
          ) as _i88.GetValidListOfNursingDegreesUsecase);
  @override
  _i89.GetValidListOfPharmacyDegreesUsecase
      get getValidListOfPharmacyDegreesUsecase => (super.noSuchMethod(
            Invocation.getter(#getValidListOfPharmacyDegreesUsecase),
            returnValue: _FakeGetValidListOfPharmacyDegreesUsecase_102(
              this,
              Invocation.getter(#getValidListOfPharmacyDegreesUsecase),
            ),
          ) as _i89.GetValidListOfPharmacyDegreesUsecase);
  @override
  _i90.ApplyToDoctorateSchoolUsecase get applyToDoctorateSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#applyToDoctorateSchoolUsecase),
        returnValue: _FakeApplyToDoctorateSchoolUsecase_103(
          this,
          Invocation.getter(#applyToDoctorateSchoolUsecase),
        ),
      ) as _i90.ApplyToDoctorateSchoolUsecase);
  @override
  _i91.ApplyToGraduateSchoolUsecase get applyToGraduateSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#applyToGraduateSchoolUsecase),
        returnValue: _FakeApplyToGraduateSchoolUsecase_104(
          this,
          Invocation.getter(#applyToGraduateSchoolUsecase),
        ),
      ) as _i91.ApplyToGraduateSchoolUsecase);
  @override
  _i92.ApplyToUndergraduateSchoolUsecase
      get applyToUndergraduateSchoolUsecase => (super.noSuchMethod(
            Invocation.getter(#applyToUndergraduateSchoolUsecase),
            returnValue: _FakeApplyToUndergraduateSchoolUsecase_105(
              this,
              Invocation.getter(#applyToUndergraduateSchoolUsecase),
            ),
          ) as _i92.ApplyToUndergraduateSchoolUsecase);
  @override
  _i93.ApplyToLawSchoolUsecase get applyToLawSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#applyToLawSchoolUsecase),
        returnValue: _FakeApplyToLawSchoolUsecase_106(
          this,
          Invocation.getter(#applyToLawSchoolUsecase),
        ),
      ) as _i93.ApplyToLawSchoolUsecase);
  @override
  _i94.ApplyToMedicalSchoolUsecase get applyToMedicalSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#applyToMedicalSchoolUsecase),
        returnValue: _FakeApplyToMedicalSchoolUsecase_107(
          this,
          Invocation.getter(#applyToMedicalSchoolUsecase),
        ),
      ) as _i94.ApplyToMedicalSchoolUsecase);
  @override
  _i95.ApplyToNursingSchoolUsecase get applyToNursingSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#applyToNursingSchoolUsecase),
        returnValue: _FakeApplyToNursingSchoolUsecase_108(
          this,
          Invocation.getter(#applyToNursingSchoolUsecase),
        ),
      ) as _i95.ApplyToNursingSchoolUsecase);
  @override
  _i96.ApplyToPharmacySchoolUsecase get applyToPharmacySchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#applyToPharmacySchoolUsecase),
        returnValue: _FakeApplyToPharmacySchoolUsecase_109(
          this,
          Invocation.getter(#applyToPharmacySchoolUsecase),
        ),
      ) as _i96.ApplyToPharmacySchoolUsecase);
  @override
  _i97.ApplyToTeacherEducationProgramUsecase
      get applyToTeacherEducationProgramUsecase => (super.noSuchMethod(
            Invocation.getter(#applyToTeacherEducationProgramUsecase),
            returnValue: _FakeApplyToTeacherEducationProgramUsecase_110(
              this,
              Invocation.getter(#applyToTeacherEducationProgramUsecase),
            ),
          ) as _i97.ApplyToTeacherEducationProgramUsecase);
  @override
  _i98.AdmitIntoDoctorateSchoolUsecase get admitIntoDoctorateSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#admitIntoDoctorateSchoolUsecase),
        returnValue: _FakeAdmitIntoDoctorateSchoolUsecase_111(
          this,
          Invocation.getter(#admitIntoDoctorateSchoolUsecase),
        ),
      ) as _i98.AdmitIntoDoctorateSchoolUsecase);
  @override
  _i99.AdmitIntoGraduateSchoolUsecase get admitIntoGraduateSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#admitIntoGraduateSchoolUsecase),
        returnValue: _FakeAdmitIntoGraduateSchoolUsecase_112(
          this,
          Invocation.getter(#admitIntoGraduateSchoolUsecase),
        ),
      ) as _i99.AdmitIntoGraduateSchoolUsecase);
  @override
  _i100.AdmitIntoUndergraduateSchoolUsecase
      get admitIntoUndergraduateSchoolUsecase => (super.noSuchMethod(
            Invocation.getter(#admitIntoUndergraduateSchoolUsecase),
            returnValue: _FakeAdmitIntoUndergraduateSchoolUsecase_113(
              this,
              Invocation.getter(#admitIntoUndergraduateSchoolUsecase),
            ),
          ) as _i100.AdmitIntoUndergraduateSchoolUsecase);
  @override
  _i101.AdmitIntoLawSchoolUsecase get admitIntoLawSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#admitIntoLawSchoolUsecase),
        returnValue: _FakeAdmitIntoLawSchoolUsecase_114(
          this,
          Invocation.getter(#admitIntoLawSchoolUsecase),
        ),
      ) as _i101.AdmitIntoLawSchoolUsecase);
  @override
  _i102.AdmitIntoMedicalSchoolUsecase get admitIntoMedicalSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#admitIntoMedicalSchoolUsecase),
        returnValue: _FakeAdmitIntoMedicalSchoolUsecase_115(
          this,
          Invocation.getter(#admitIntoMedicalSchoolUsecase),
        ),
      ) as _i102.AdmitIntoMedicalSchoolUsecase);
  @override
  _i103.AdmitIntoNursingSchoolUsecase get admitIntoNursingSchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#admitIntoNursingSchoolUsecase),
        returnValue: _FakeAdmitIntoNursingSchoolUsecase_116(
          this,
          Invocation.getter(#admitIntoNursingSchoolUsecase),
        ),
      ) as _i103.AdmitIntoNursingSchoolUsecase);
  @override
  _i104.AdmitIntoPharmacySchoolUsecase get admitIntoPharmacySchoolUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#admitIntoPharmacySchoolUsecase),
        returnValue: _FakeAdmitIntoPharmacySchoolUsecase_117(
          this,
          Invocation.getter(#admitIntoPharmacySchoolUsecase),
        ),
      ) as _i104.AdmitIntoPharmacySchoolUsecase);
  @override
  _i105.AdmitIntoTeacherEducationProgramUsecase
      get admitIntoTeacherEducationProgramUsecase => (super.noSuchMethod(
            Invocation.getter(#admitIntoTeacherEducationProgramUsecase),
            returnValue: _FakeAdmitIntoTeacherEducationProgramUsecase_118(
              this,
              Invocation.getter(#admitIntoTeacherEducationProgramUsecase),
            ),
          ) as _i105.AdmitIntoTeacherEducationProgramUsecase);
  @override
  _i106.GraduateUsecase get graduateUsecase => (super.noSuchMethod(
        Invocation.getter(#graduateUsecase),
        returnValue: _FakeGraduateUsecase_119(
          this,
          Invocation.getter(#graduateUsecase),
        ),
      ) as _i106.GraduateUsecase);
}

/// A class which mocks [Journal].
///
/// See the documentation for Mockito's code generation for more information.
class MockJournal extends _i1.Mock implements _i2.Journal {
  MockJournal() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get gameId => (super.noSuchMethod(
        Invocation.getter(#gameId),
        returnValue: 0,
      ) as int);
  @override
  int get day => (super.noSuchMethod(
        Invocation.getter(#day),
        returnValue: 0,
      ) as int);
  @override
  int get mainPlayerId => (super.noSuchMethod(
        Invocation.getter(#mainPlayerId),
        returnValue: 0,
      ) as int);
  @override
  String get entry => (super.noSuchMethod(
        Invocation.getter(#entry),
        returnValue: '',
      ) as String);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.JournalTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeJournalTableCompanion_120(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.JournalTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.Journal copyWith({
    int? gameId,
    int? day,
    int? mainPlayerId,
    String? entry,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #gameId: gameId,
            #day: day,
            #mainPlayerId: mainPlayerId,
            #entry: entry,
          },
        ),
        returnValue: _FakeJournal_121(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #gameId: gameId,
              #day: day,
              #mainPlayerId: mainPlayerId,
              #entry: entry,
            },
          ),
        ),
      ) as _i2.Journal);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [JournalUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockJournalUsecases extends _i1.Mock implements _i241.JournalUsecases {
  MockJournalUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i107.AddToJournalUsecase get addToJournalUsecase => (super.noSuchMethod(
        Invocation.getter(#addToJournalUsecase),
        returnValue: _FakeAddToJournalUsecase_122(
          this,
          Invocation.getter(#addToJournalUsecase),
        ),
      ) as _i107.AddToJournalUsecase);
  @override
  _i108.PrepareJournalEntryUsecase get prepareJournalEntryUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#prepareJournalEntryUsecase),
        returnValue: _FakePrepareJournalEntryUsecase_123(
          this,
          Invocation.getter(#prepareJournalEntryUsecase),
        ),
      ) as _i108.PrepareJournalEntryUsecase);
  @override
  _i109.GetPlayersJournalsUsecase get getPlayersJournalsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getPlayersJournalsUsecase),
        returnValue: _FakeGetPlayersJournalsUsecase_124(
          this,
          Invocation.getter(#getPlayersJournalsUsecase),
        ),
      ) as _i109.GetPlayersJournalsUsecase);
  @override
  _i110.GetTodaysJournalUsecase get getTodaysJournalUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getTodaysJournalUsecase),
        returnValue: _FakeGetTodaysJournalUsecase_125(
          this,
          Invocation.getter(#getTodaysJournalUsecase),
        ),
      ) as _i110.GetTodaysJournalUsecase);
  @override
  _i111.WatchJournalUsecase get watchJournalUsecase => (super.noSuchMethod(
        Invocation.getter(#watchJournalUsecase),
        returnValue: _FakeWatchJournalUsecase_126(
          this,
          Invocation.getter(#watchJournalUsecase),
        ),
      ) as _i111.WatchJournalUsecase);
}

/// A class which mocks [Event].
///
/// See the documentation for Mockito's code generation for more information.
class MockEvent extends _i1.Mock implements _i2.Event {
  MockEvent() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get gameId => (super.noSuchMethod(
        Invocation.getter(#gameId),
        returnValue: 0,
      ) as int);
  @override
  String get eventType => (super.noSuchMethod(
        Invocation.getter(#eventType),
        returnValue: '',
      ) as String);
  @override
  int get eventDay => (super.noSuchMethod(
        Invocation.getter(#eventDay),
        returnValue: 0,
      ) as int);
  @override
  int get mainPersonId => (super.noSuchMethod(
        Invocation.getter(#mainPersonId),
        returnValue: 0,
      ) as int);
  @override
  String get relationshipToMainPlayer => (super.noSuchMethod(
        Invocation.getter(#relationshipToMainPlayer),
        returnValue: '',
      ) as String);
  @override
  bool get journalEntryOnly => (super.noSuchMethod(
        Invocation.getter(#journalEntryOnly),
        returnValue: false,
      ) as bool);
  @override
  bool get performed => (super.noSuchMethod(
        Invocation.getter(#performed),
        returnValue: false,
      ) as bool);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.EventTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeEventTableCompanion_127(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.EventTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.Event copyWith({
    int? id,
    int? gameId,
    String? eventType,
    int? eventDay,
    int? mainPersonId,
    _i236.Value<int?>? otherPersonId = const _i236.Value.absent(),
    String? relationshipToMainPlayer,
    _i236.Value<int?>? startTime = const _i236.Value.absent(),
    _i236.Value<int?>? endTime = const _i236.Value.absent(),
    bool? journalEntryOnly,
    bool? performed,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #gameId: gameId,
            #eventType: eventType,
            #eventDay: eventDay,
            #mainPersonId: mainPersonId,
            #otherPersonId: otherPersonId,
            #relationshipToMainPlayer: relationshipToMainPlayer,
            #startTime: startTime,
            #endTime: endTime,
            #journalEntryOnly: journalEntryOnly,
            #performed: performed,
          },
        ),
        returnValue: _FakeEvent_128(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #gameId: gameId,
              #eventType: eventType,
              #eventDay: eventDay,
              #mainPersonId: mainPersonId,
              #otherPersonId: otherPersonId,
              #relationshipToMainPlayer: relationshipToMainPlayer,
              #startTime: startTime,
              #endTime: endTime,
              #journalEntryOnly: journalEntryOnly,
              #performed: performed,
            },
          ),
        ),
      ) as _i2.Event);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [EventManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventManager extends _i1.Mock implements _i242.EventManager {
  MockEventManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i112.ManageEvents get manageEvents => (super.noSuchMethod(
        Invocation.getter(#manageEvents),
        returnValue: _FakeManageEvents_129(
          this,
          Invocation.getter(#manageEvents),
        ),
      ) as _i112.ManageEvents);
  @override
  _i243.Future<void> runTestEvent(
    int? mainPlayerID,
    _i2.Event? event,
    _i244.BuildContext? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTestEvent,
          [
            mainPlayerID,
            event,
            context,
          ],
        ),
        returnValue: _i243.Future<void>.value(),
        returnValueForMissingStub: _i243.Future<void>.value(),
      ) as _i243.Future<void>);
  @override
  _i243.Future<void> runEvent(
    int? mainPlayerID,
    _i2.Event? event,
    _i244.BuildContext? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #runEvent,
          [
            mainPlayerID,
            event,
            context,
          ],
        ),
        returnValue: _i243.Future<void>.value(),
        returnValueForMissingStub: _i243.Future<void>.value(),
      ) as _i243.Future<void>);
  @override
  _i243.Future<List<_i245.EventPersonPair>> getTodaysAttendableEvents({
    required int? currentDay,
    required int? gameID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodaysAttendableEvents,
          [],
          {
            #currentDay: currentDay,
            #gameID: gameID,
          },
        ),
        returnValue: _i243.Future<List<_i245.EventPersonPair>>.value(
            <_i245.EventPersonPair>[]),
      ) as _i243.Future<List<_i245.EventPersonPair>>);
  @override
  _i243.Stream<List<_i245.EventPersonPair>> watchTodaysAttendableEvents({
    required int? currentDay,
    required int? gameID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTodaysAttendableEvents,
          [],
          {
            #currentDay: currentDay,
            #gameID: gameID,
          },
        ),
        returnValue: _i243.Stream<List<_i245.EventPersonPair>>.empty(),
      ) as _i243.Stream<List<_i245.EventPersonPair>>);
}

/// A class which mocks [RecurringBill].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecurringBill extends _i1.Mock implements _i2.RecurringBill {
  MockRecurringBill() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  int get personId => (super.noSuchMethod(
        Invocation.getter(#personId),
        returnValue: 0,
      ) as int);
  @override
  String get billType => (super.noSuchMethod(
        Invocation.getter(#billType),
        returnValue: '',
      ) as String);
  @override
  String get billDescription => (super.noSuchMethod(
        Invocation.getter(#billDescription),
        returnValue: '',
      ) as String);
  @override
  int get billAmount => (super.noSuchMethod(
        Invocation.getter(#billAmount),
        returnValue: 0,
      ) as int);
  @override
  int get paymentsLeft => (super.noSuchMethod(
        Invocation.getter(#paymentsLeft),
        returnValue: 0,
      ) as int);
  @override
  int get dueDay => (super.noSuchMethod(
        Invocation.getter(#dueDay),
        returnValue: 0,
      ) as int);
  @override
  int get purchaseId => (super.noSuchMethod(
        Invocation.getter(#purchaseId),
        returnValue: 0,
      ) as int);
  @override
  int get missedPayments => (super.noSuchMethod(
        Invocation.getter(#missedPayments),
        returnValue: 0,
      ) as int);
  @override
  bool get isUrgent => (super.noSuchMethod(
        Invocation.getter(#isUrgent),
        returnValue: false,
      ) as bool);
  @override
  Map<String, _i236.Expression<Object>> toColumns(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toColumns,
          [nullToAbsent],
        ),
        returnValue: <String, _i236.Expression<Object>>{},
      ) as Map<String, _i236.Expression<Object>>);
  @override
  _i2.RecurringBillTableCompanion toCompanion(bool? nullToAbsent) =>
      (super.noSuchMethod(
        Invocation.method(
          #toCompanion,
          [nullToAbsent],
        ),
        returnValue: _FakeRecurringBillTableCompanion_130(
          this,
          Invocation.method(
            #toCompanion,
            [nullToAbsent],
          ),
        ),
      ) as _i2.RecurringBillTableCompanion);
  @override
  Map<String, dynamic> toJson({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
          {#serializer: serializer},
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i2.RecurringBill copyWith({
    int? id,
    int? personId,
    String? billType,
    String? billDescription,
    int? billAmount,
    int? paymentsLeft,
    int? dueDay,
    int? purchaseId,
    int? missedPayments,
    bool? isUrgent,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #personId: personId,
            #billType: billType,
            #billDescription: billDescription,
            #billAmount: billAmount,
            #paymentsLeft: paymentsLeft,
            #dueDay: dueDay,
            #purchaseId: purchaseId,
            #missedPayments: missedPayments,
            #isUrgent: isUrgent,
          },
        ),
        returnValue: _FakeRecurringBill_131(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #personId: personId,
              #billType: billType,
              #billDescription: billDescription,
              #billAmount: billAmount,
              #paymentsLeft: paymentsLeft,
              #dueDay: dueDay,
              #purchaseId: purchaseId,
              #missedPayments: missedPayments,
              #isUrgent: isUrgent,
            },
          ),
        ),
      ) as _i2.RecurringBill);
  @override
  String toJsonString({_i236.ValueSerializer? serializer}) =>
      (super.noSuchMethod(
        Invocation.method(
          #toJsonString,
          [],
          {#serializer: serializer},
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [RecurringBillsUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecurringBillsUsecases extends _i1.Mock
    implements _i246.RecurringBillsUsecases {
  MockRecurringBillsUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i113.AddRentToBillsUsecase get addRentToBillsUsecase => (super.noSuchMethod(
        Invocation.getter(#addRentToBillsUsecase),
        returnValue: _FakeAddRentToBillsUsecase_132(
          this,
          Invocation.getter(#addRentToBillsUsecase),
        ),
      ) as _i113.AddRentToBillsUsecase);
  @override
  _i114.RemoveRentFromBillsUsecase get removeRentFromBillsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#removeRentFromBillsUsecase),
        returnValue: _FakeRemoveRentFromBillsUsecase_133(
          this,
          Invocation.getter(#removeRentFromBillsUsecase),
        ),
      ) as _i114.RemoveRentFromBillsUsecase);
  @override
  _i115.AddCarLoanToBillsUsecase get addCarLoanToBillsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addCarLoanToBillsUsecase),
        returnValue: _FakeAddCarLoanToBillsUsecase_134(
          this,
          Invocation.getter(#addCarLoanToBillsUsecase),
        ),
      ) as _i115.AddCarLoanToBillsUsecase);
  @override
  _i116.RemoveCarLoanFromBillsUsecase get removeCarLoanFromBillsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#removeCarLoanFromBillsUsecase),
        returnValue: _FakeRemoveCarLoanFromBillsUsecase_135(
          this,
          Invocation.getter(#removeCarLoanFromBillsUsecase),
        ),
      ) as _i116.RemoveCarLoanFromBillsUsecase);
  @override
  _i117.AddMortgageLoanToBillsUsecase get addMortgageLoanToBillsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addMortgageLoanToBillsUsecase),
        returnValue: _FakeAddMortgageLoanToBillsUsecase_136(
          this,
          Invocation.getter(#addMortgageLoanToBillsUsecase),
        ),
      ) as _i117.AddMortgageLoanToBillsUsecase);
  @override
  _i118.RemoveMortgageLoanFromBillsUsecase
      get removeMortgageLoanFromBillsUsecase => (super.noSuchMethod(
            Invocation.getter(#removeMortgageLoanFromBillsUsecase),
            returnValue: _FakeRemoveMortgageLoanFromBillsUsecase_137(
              this,
              Invocation.getter(#removeMortgageLoanFromBillsUsecase),
            ),
          ) as _i118.RemoveMortgageLoanFromBillsUsecase);
  @override
  _i119.AddPropertyTaxToBillsUsecase get addPropertyTaxToBillsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addPropertyTaxToBillsUsecase),
        returnValue: _FakeAddPropertyTaxToBillsUsecase_138(
          this,
          Invocation.getter(#addPropertyTaxToBillsUsecase),
        ),
      ) as _i119.AddPropertyTaxToBillsUsecase);
  @override
  _i120.RemovePropertyTaxFromBillsUsecase
      get removePropertyTaxFromBillsUsecase => (super.noSuchMethod(
            Invocation.getter(#removePropertyTaxFromBillsUsecase),
            returnValue: _FakeRemovePropertyTaxFromBillsUsecase_139(
              this,
              Invocation.getter(#removePropertyTaxFromBillsUsecase),
            ),
          ) as _i120.RemovePropertyTaxFromBillsUsecase);
  @override
  _i121.AddStudentLoanToBillsUsecase get addStudentLoanToBillsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addStudentLoanToBillsUsecase),
        returnValue: _FakeAddStudentLoanToBillsUsecase_140(
          this,
          Invocation.getter(#addStudentLoanToBillsUsecase),
        ),
      ) as _i121.AddStudentLoanToBillsUsecase);
  @override
  _i122.RemoveStudentLoanFromBillsUsecase
      get removeStudentLoanFromBillsUsecase => (super.noSuchMethod(
            Invocation.getter(#removeStudentLoanFromBillsUsecase),
            returnValue: _FakeRemoveStudentLoanFromBillsUsecase_141(
              this,
              Invocation.getter(#removeStudentLoanFromBillsUsecase),
            ),
          ) as _i122.RemoveStudentLoanFromBillsUsecase);
  @override
  _i123.CarLoanCalculatorUsecase get carLoanCalculatorUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#carLoanCalculatorUsecase),
        returnValue: _FakeCarLoanCalculatorUsecase_142(
          this,
          Invocation.getter(#carLoanCalculatorUsecase),
        ),
      ) as _i123.CarLoanCalculatorUsecase);
  @override
  _i124.MortgageLoanCalculatorUsecase get mortgageLoanCalculatorUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#mortgageLoanCalculatorUsecase),
        returnValue: _FakeMortgageLoanCalculatorUsecase_143(
          this,
          Invocation.getter(#mortgageLoanCalculatorUsecase),
        ),
      ) as _i124.MortgageLoanCalculatorUsecase);
  @override
  _i125.StudentLoanCalculatorUsecase get studentLoanCalculatorUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#studentLoanCalculatorUsecase),
        returnValue: _FakeStudentLoanCalculatorUsecase_144(
          this,
          Invocation.getter(#studentLoanCalculatorUsecase),
        ),
      ) as _i125.StudentLoanCalculatorUsecase);
  @override
  _i126.CarLoanRecurringPaymentCalculatorUsecase
      get carLoanRecurringPaymentCalculatorUsecase => (super.noSuchMethod(
            Invocation.getter(#carLoanRecurringPaymentCalculatorUsecase),
            returnValue: _FakeCarLoanRecurringPaymentCalculatorUsecase_145(
              this,
              Invocation.getter(#carLoanRecurringPaymentCalculatorUsecase),
            ),
          ) as _i126.CarLoanRecurringPaymentCalculatorUsecase);
  @override
  _i127.MortgageLoanRecurringPaymentCalculatorUsecase
      get mortgageLoanRecurringPaymentCalculatorUsecase => (super.noSuchMethod(
            Invocation.getter(#mortgageLoanRecurringPaymentCalculatorUsecase),
            returnValue: _FakeMortgageLoanRecurringPaymentCalculatorUsecase_146(
              this,
              Invocation.getter(#mortgageLoanRecurringPaymentCalculatorUsecase),
            ),
          ) as _i127.MortgageLoanRecurringPaymentCalculatorUsecase);
  @override
  _i128.StudentLoanRecurringPaymentCalculatorUsecase
      get studentLoanRecurringPaymentCalculatorUsecase => (super.noSuchMethod(
            Invocation.getter(#studentLoanRecurringPaymentCalculatorUsecase),
            returnValue: _FakeStudentLoanRecurringPaymentCalculatorUsecase_147(
              this,
              Invocation.getter(#studentLoanRecurringPaymentCalculatorUsecase),
            ),
          ) as _i128.StudentLoanRecurringPaymentCalculatorUsecase);
  @override
  _i129.CheckIfThereIsAnExistingCarLoanUsecase
      get checkIfThereIsAnExistingCarLoanUsecase => (super.noSuchMethod(
            Invocation.getter(#checkIfThereIsAnExistingCarLoanUsecase),
            returnValue: _FakeCheckIfThereIsAnExistingCarLoanUsecase_148(
              this,
              Invocation.getter(#checkIfThereIsAnExistingCarLoanUsecase),
            ),
          ) as _i129.CheckIfThereIsAnExistingCarLoanUsecase);
  @override
  _i130.CheckIfThereIsAnExistingMortgageLoanUsecase
      get checkIfThereIsAnExistingMortgageLoanUsecase => (super.noSuchMethod(
            Invocation.getter(#checkIfThereIsAnExistingMortgageLoanUsecase),
            returnValue: _FakeCheckIfThereIsAnExistingMortgageLoanUsecase_149(
              this,
              Invocation.getter(#checkIfThereIsAnExistingMortgageLoanUsecase),
            ),
          ) as _i130.CheckIfThereIsAnExistingMortgageLoanUsecase);
  @override
  _i131.BaseDownPaymentCalculatorUsecase get baseDownPaymentCalculatorUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#baseDownPaymentCalculatorUsecase),
        returnValue: _FakeBaseDownPaymentCalculatorUsecase_150(
          this,
          Invocation.getter(#baseDownPaymentCalculatorUsecase),
        ),
      ) as _i131.BaseDownPaymentCalculatorUsecase);
  @override
  _i132.BaseLoanAmountCalculatorUsecase get baseLoanAmountCalculatorUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#baseLoanAmountCalculatorUsecase),
        returnValue: _FakeBaseLoanAmountCalculatorUsecase_151(
          this,
          Invocation.getter(#baseLoanAmountCalculatorUsecase),
        ),
      ) as _i132.BaseLoanAmountCalculatorUsecase);
}

/// A class which mocks [RelationshipUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockRelationshipUsecases extends _i1.Mock
    implements _i247.RelationshipUsecases {
  MockRelationshipUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i133.CreateNewPlayerFamilyUsecase get createNewPlayerFamilyUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#createNewPlayerFamilyUsecase),
        returnValue: _FakeCreateNewPlayerFamilyUsecase_152(
          this,
          Invocation.getter(#createNewPlayerFamilyUsecase),
        ),
      ) as _i133.CreateNewPlayerFamilyUsecase);
  @override
  _i134.CreateChildParentRelationshipUsecase
      get createChildParentRelationshipUsecase => (super.noSuchMethod(
            Invocation.getter(#createChildParentRelationshipUsecase),
            returnValue: _FakeCreateChildParentRelationshipUsecase_153(
              this,
              Invocation.getter(#createChildParentRelationshipUsecase),
            ),
          ) as _i134.CreateChildParentRelationshipUsecase);
  @override
  _i135.CreateSiblingRelationshipUsecase get createSiblingRelationshipUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#createSiblingRelationshipUsecase),
        returnValue: _FakeCreateSiblingRelationshipUsecase_154(
          this,
          Invocation.getter(#createSiblingRelationshipUsecase),
        ),
      ) as _i135.CreateSiblingRelationshipUsecase);
  @override
  _i136.CreateExclusiveRomanticRelationshipUsecase
      get createExclusiveRomanticRelationshipUsecase => (super.noSuchMethod(
            Invocation.getter(#createExclusiveRomanticRelationshipUsecase),
            returnValue: _FakeCreateExclusiveRomanticRelationshipUsecase_155(
              this,
              Invocation.getter(#createExclusiveRomanticRelationshipUsecase),
            ),
          ) as _i136.CreateExclusiveRomanticRelationshipUsecase);
  @override
  _i137.EndAllPartnerRelationshipsNotInvolvingACertainPersonUsecase
      get endAllPartnerRelationshipsNotInvolvingACertainPersonUsecase =>
          (super.noSuchMethod(
            Invocation.getter(
                #endAllPartnerRelationshipsNotInvolvingACertainPersonUsecase),
            returnValue:
                _FakeEndAllPartnerRelationshipsNotInvolvingACertainPersonUsecase_156(
              this,
              Invocation.getter(
                  #endAllPartnerRelationshipsNotInvolvingACertainPersonUsecase),
            ),
          ) as _i137
              .EndAllPartnerRelationshipsNotInvolvingACertainPersonUsecase);
  @override
  _i138.EndPartnerRelationshipUsecase get endPartnerRelationshipUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#endPartnerRelationshipUsecase),
        returnValue: _FakeEndPartnerRelationshipUsecase_157(
          this,
          Invocation.getter(#endPartnerRelationshipUsecase),
        ),
      ) as _i138.EndPartnerRelationshipUsecase);
  @override
  _i139.GetMarriedUsecase get getMarriedUsecase => (super.noSuchMethod(
        Invocation.getter(#getMarriedUsecase),
        returnValue: _FakeGetMarriedUsecase_158(
          this,
          Invocation.getter(#getMarriedUsecase),
        ),
      ) as _i139.GetMarriedUsecase);
  @override
  _i140.GetCurrentPartnerUsecase get getCurrentPartnerUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getCurrentPartnerUsecase),
        returnValue: _FakeGetCurrentPartnerUsecase_159(
          this,
          Invocation.getter(#getCurrentPartnerUsecase),
        ),
      ) as _i140.GetCurrentPartnerUsecase);
  @override
  _i141.GetFriendsUsecase get getFriendsUsecase => (super.noSuchMethod(
        Invocation.getter(#getFriendsUsecase),
        returnValue: _FakeGetFriendsUsecase_160(
          this,
          Invocation.getter(#getFriendsUsecase),
        ),
      ) as _i141.GetFriendsUsecase);
  @override
  _i142.GetRelationshipPairBasedOnTypeUsecase
      get getRelationshipPairBasedOnTypeUsecase => (super.noSuchMethod(
            Invocation.getter(#getRelationshipPairBasedOnTypeUsecase),
            returnValue: _FakeGetRelationshipPairBasedOnTypeUsecase_161(
              this,
              Invocation.getter(#getRelationshipPairBasedOnTypeUsecase),
            ),
          ) as _i142.GetRelationshipPairBasedOnTypeUsecase);
  @override
  _i143.UpdatePartnerRelationshipUsecase get updatePartnerRelationshipUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updatePartnerRelationshipUsecase),
        returnValue: _FakeUpdatePartnerRelationshipUsecase_162(
          this,
          Invocation.getter(#updatePartnerRelationshipUsecase),
        ),
      ) as _i143.UpdatePartnerRelationshipUsecase);
  @override
  _i144.GetSiblingsUsecase get getSiblingsUsecase => (super.noSuchMethod(
        Invocation.getter(#getSiblingsUsecase),
        returnValue: _FakeGetSiblingsUsecase_163(
          this,
          Invocation.getter(#getSiblingsUsecase),
        ),
      ) as _i144.GetSiblingsUsecase);
  @override
  _i145.UpdateSiblingRelationshipUsecase get updateSiblingRelationshipUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateSiblingRelationshipUsecase),
        returnValue: _FakeUpdateSiblingRelationshipUsecase_164(
          this,
          Invocation.getter(#updateSiblingRelationshipUsecase),
        ),
      ) as _i145.UpdateSiblingRelationshipUsecase);
  @override
  _i146.GetPiblingsUsecase get getPiblingsUsecase => (super.noSuchMethod(
        Invocation.getter(#getPiblingsUsecase),
        returnValue: _FakeGetPiblingsUsecase_165(
          this,
          Invocation.getter(#getPiblingsUsecase),
        ),
      ) as _i146.GetPiblingsUsecase);
  @override
  _i147.UpdateRelativeRelationshipUsecase
      get updateRelativeRelationshipUsecase => (super.noSuchMethod(
            Invocation.getter(#updateRelativeRelationshipUsecase),
            returnValue: _FakeUpdateRelativeRelationshipUsecase_166(
              this,
              Invocation.getter(#updateRelativeRelationshipUsecase),
            ),
          ) as _i147.UpdateRelativeRelationshipUsecase);
  @override
  _i148.GetChildrenUsecase get getChildrenUsecase => (super.noSuchMethod(
        Invocation.getter(#getChildrenUsecase),
        returnValue: _FakeGetChildrenUsecase_167(
          this,
          Invocation.getter(#getChildrenUsecase),
        ),
      ) as _i148.GetChildrenUsecase);
  @override
  _i149.UpdateChildRelationshipUsecase get updateChildRelationshipUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateChildRelationshipUsecase),
        returnValue: _FakeUpdateChildRelationshipUsecase_168(
          this,
          Invocation.getter(#updateChildRelationshipUsecase),
        ),
      ) as _i149.UpdateChildRelationshipUsecase);
  @override
  _i150.UpdateParentRelationshipUsecase get updateParentRelationshipUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateParentRelationshipUsecase),
        returnValue: _FakeUpdateParentRelationshipUsecase_169(
          this,
          Invocation.getter(#updateParentRelationshipUsecase),
        ),
      ) as _i150.UpdateParentRelationshipUsecase);
  @override
  _i151.UpdateInLawRelationshipUsecase get updateInLawRelationshipUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateInLawRelationshipUsecase),
        returnValue: _FakeUpdateInLawRelationshipUsecase_170(
          this,
          Invocation.getter(#updateInLawRelationshipUsecase),
        ),
      ) as _i151.UpdateInLawRelationshipUsecase);
  @override
  _i152.UpdateFriendRelationshipUsecase get updateFriendRelationshipUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#updateFriendRelationshipUsecase),
        returnValue: _FakeUpdateFriendRelationshipUsecase_171(
          this,
          Invocation.getter(#updateFriendRelationshipUsecase),
        ),
      ) as _i152.UpdateFriendRelationshipUsecase);
  @override
  _i153.UpdateAcquaintanceRelationshipUsecase
      get updateAcquaintanceRelationshipUsecase => (super.noSuchMethod(
            Invocation.getter(#updateAcquaintanceRelationshipUsecase),
            returnValue: _FakeUpdateAcquaintanceRelationshipUsecase_172(
              this,
              Invocation.getter(#updateAcquaintanceRelationshipUsecase),
            ),
          ) as _i153.UpdateAcquaintanceRelationshipUsecase);
  @override
  _i154.UpdateAnyRelationshipAmountUsecase
      get updateAnyRelationshipAmountUsecase => (super.noSuchMethod(
            Invocation.getter(#updateAnyRelationshipAmountUsecase),
            returnValue: _FakeUpdateAnyRelationshipAmountUsecase_173(
              this,
              Invocation.getter(#updateAnyRelationshipAmountUsecase),
            ),
          ) as _i154.UpdateAnyRelationshipAmountUsecase);
  @override
  _i155.WatchAllActiveParentsUsecase get watchAllActiveParentsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAllActiveParentsUsecase),
        returnValue: _FakeWatchAllActiveParentsUsecase_174(
          this,
          Invocation.getter(#watchAllActiveParentsUsecase),
        ),
      ) as _i155.WatchAllActiveParentsUsecase);
  @override
  _i156.WatchAllActivePartnersUsecase get watchAllActivePartnersUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAllActivePartnersUsecase),
        returnValue: _FakeWatchAllActivePartnersUsecase_175(
          this,
          Invocation.getter(#watchAllActivePartnersUsecase),
        ),
      ) as _i156.WatchAllActivePartnersUsecase);
  @override
  _i157.WatchAllChildrenUsecase get watchAllChildrenUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAllChildrenUsecase),
        returnValue: _FakeWatchAllChildrenUsecase_176(
          this,
          Invocation.getter(#watchAllChildrenUsecase),
        ),
      ) as _i157.WatchAllChildrenUsecase);
  @override
  _i158.WatchAllCoparentsUsecase get watchAllCoparentsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAllCoparentsUsecase),
        returnValue: _FakeWatchAllCoparentsUsecase_177(
          this,
          Invocation.getter(#watchAllCoparentsUsecase),
        ),
      ) as _i158.WatchAllCoparentsUsecase);
  @override
  _i159.WatchAllExesUsecase get watchAllExesUsecase => (super.noSuchMethod(
        Invocation.getter(#watchAllExesUsecase),
        returnValue: _FakeWatchAllExesUsecase_178(
          this,
          Invocation.getter(#watchAllExesUsecase),
        ),
      ) as _i159.WatchAllExesUsecase);
  @override
  _i160.WatchAllFriendsUsecase get watchAllFriendsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAllFriendsUsecase),
        returnValue: _FakeWatchAllFriendsUsecase_179(
          this,
          Invocation.getter(#watchAllFriendsUsecase),
        ),
      ) as _i160.WatchAllFriendsUsecase);
  @override
  _i161.WatchAllGravesUsecase get watchAllGravesUsecase => (super.noSuchMethod(
        Invocation.getter(#watchAllGravesUsecase),
        returnValue: _FakeWatchAllGravesUsecase_180(
          this,
          Invocation.getter(#watchAllGravesUsecase),
        ),
      ) as _i161.WatchAllGravesUsecase);
  @override
  _i162.WatchAllInLawsUsecase get watchAllInLawsUsecase => (super.noSuchMethod(
        Invocation.getter(#watchAllInLawsUsecase),
        returnValue: _FakeWatchAllInLawsUsecase_181(
          this,
          Invocation.getter(#watchAllInLawsUsecase),
        ),
      ) as _i162.WatchAllInLawsUsecase);
  @override
  _i163.WatchAllRelativesUsecase get watchAllRelativesUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAllRelativesUsecase),
        returnValue: _FakeWatchAllRelativesUsecase_182(
          this,
          Invocation.getter(#watchAllRelativesUsecase),
        ),
      ) as _i163.WatchAllRelativesUsecase);
  @override
  _i164.WatchAllSiblingsUsecase get watchAllSiblingsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAllSiblingsUsecase),
        returnValue: _FakeWatchAllSiblingsUsecase_183(
          this,
          Invocation.getter(#watchAllSiblingsUsecase),
        ),
      ) as _i164.WatchAllSiblingsUsecase);
  @override
  _i165.GetFriendRelationshipPairsFromFriendsUsecase
      get getFriendRelationshipPairsFromFriendsUsecase => (super.noSuchMethod(
            Invocation.getter(#getFriendRelationshipPairsFromFriendsUsecase),
            returnValue: _FakeGetFriendRelationshipPairsFromFriendsUsecase_184(
              this,
              Invocation.getter(#getFriendRelationshipPairsFromFriendsUsecase),
            ),
          ) as _i165.GetFriendRelationshipPairsFromFriendsUsecase);
  @override
  _i166.GetSiblingRelationshipPairsFromSiblingsUsecase
      get getSiblingRelationshipPairsFromSiblingsUsecase => (super.noSuchMethod(
            Invocation.getter(#getSiblingRelationshipPairsFromSiblingsUsecase),
            returnValue:
                _FakeGetSiblingRelationshipPairsFromSiblingsUsecase_185(
              this,
              Invocation.getter(
                  #getSiblingRelationshipPairsFromSiblingsUsecase),
            ),
          ) as _i166.GetSiblingRelationshipPairsFromSiblingsUsecase);
  @override
  _i167.GetRelativeRelationshipPairsFromRelativesUsecase
      get getRelativeRelationshipPairsFromRelativesUsecase =>
          (super.noSuchMethod(
            Invocation.getter(
                #getRelativeRelationshipPairsFromRelativesUsecase),
            returnValue:
                _FakeGetRelativeRelationshipPairsFromRelativesUsecase_186(
              this,
              Invocation.getter(
                  #getRelativeRelationshipPairsFromRelativesUsecase),
            ),
          ) as _i167.GetRelativeRelationshipPairsFromRelativesUsecase);
  @override
  _i168.GetParentRelationshipPairsFromParentsUsecase
      get getParentRelationshipPairsFromParentsUsecase => (super.noSuchMethod(
            Invocation.getter(#getParentRelationshipPairsFromParentsUsecase),
            returnValue: _FakeGetParentRelationshipPairsFromParentsUsecase_187(
              this,
              Invocation.getter(#getParentRelationshipPairsFromParentsUsecase),
            ),
          ) as _i168.GetParentRelationshipPairsFromParentsUsecase);
  @override
  _i169.GetPartnerRelationshipPairsFromPartnersUsecase
      get getPartnerRelationshipPairsFromPartnersUsecase => (super.noSuchMethod(
            Invocation.getter(#getPartnerRelationshipPairsFromPartnersUsecase),
            returnValue:
                _FakeGetPartnerRelationshipPairsFromPartnersUsecase_188(
              this,
              Invocation.getter(
                  #getPartnerRelationshipPairsFromPartnersUsecase),
            ),
          ) as _i169.GetPartnerRelationshipPairsFromPartnersUsecase);
  @override
  _i170.GetGraveRelationshipPairsFromGravesUsecase
      get getGraveRelationshipPairsFromGravesUsecase => (super.noSuchMethod(
            Invocation.getter(#getGraveRelationshipPairsFromGravesUsecase),
            returnValue: _FakeGetGraveRelationshipPairsFromGravesUsecase_189(
              this,
              Invocation.getter(#getGraveRelationshipPairsFromGravesUsecase),
            ),
          ) as _i170.GetGraveRelationshipPairsFromGravesUsecase);
  @override
  _i171.GetInLawRelationshipPairsFromInLawsUsecase
      get getInLawRelationshipPairsFromInLawsUsecase => (super.noSuchMethod(
            Invocation.getter(#getInLawRelationshipPairsFromInLawsUsecase),
            returnValue: _FakeGetInLawRelationshipPairsFromInLawsUsecase_190(
              this,
              Invocation.getter(#getInLawRelationshipPairsFromInLawsUsecase),
            ),
          ) as _i171.GetInLawRelationshipPairsFromInLawsUsecase);
  @override
  _i172.GetChildRelationshipPairsFromChildrenUsecase
      get getChildRelationshipPairsFromChildrenUsecase => (super.noSuchMethod(
            Invocation.getter(#getChildRelationshipPairsFromChildrenUsecase),
            returnValue: _FakeGetChildRelationshipPairsFromChildrenUsecase_191(
              this,
              Invocation.getter(#getChildRelationshipPairsFromChildrenUsecase),
            ),
          ) as _i172.GetChildRelationshipPairsFromChildrenUsecase);
  @override
  _i173.CheckIfPersonIsInterestedInRelationshipUsecase
      get checkIfPersonIsInterestedInRelationshipUsecase => (super.noSuchMethod(
            Invocation.getter(#checkIfPersonIsInterestedInRelationshipUsecase),
            returnValue:
                _FakeCheckIfPersonIsInterestedInRelationshipUsecase_192(
              this,
              Invocation.getter(
                  #checkIfPersonIsInterestedInRelationshipUsecase),
            ),
          ) as _i173.CheckIfPersonIsInterestedInRelationshipUsecase);
  @override
  _i174.WatchAcquaintanceUsecase get watchAcquaintanceUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAcquaintanceUsecase),
        returnValue: _FakeWatchAcquaintanceUsecase_193(
          this,
          Invocation.getter(#watchAcquaintanceUsecase),
        ),
      ) as _i174.WatchAcquaintanceUsecase);
  @override
  _i175.WatchChildUsecase get watchChildUsecase => (super.noSuchMethod(
        Invocation.getter(#watchChildUsecase),
        returnValue: _FakeWatchChildUsecase_194(
          this,
          Invocation.getter(#watchChildUsecase),
        ),
      ) as _i175.WatchChildUsecase);
  @override
  _i176.WatchFriendUsecase get watchFriendUsecase => (super.noSuchMethod(
        Invocation.getter(#watchFriendUsecase),
        returnValue: _FakeWatchFriendUsecase_195(
          this,
          Invocation.getter(#watchFriendUsecase),
        ),
      ) as _i176.WatchFriendUsecase);
  @override
  _i177.WatchGraveUsecase get watchGraveUsecase => (super.noSuchMethod(
        Invocation.getter(#watchGraveUsecase),
        returnValue: _FakeWatchGraveUsecase_196(
          this,
          Invocation.getter(#watchGraveUsecase),
        ),
      ) as _i177.WatchGraveUsecase);
  @override
  _i178.WatchInLawUsecase get watchInLawUsecase => (super.noSuchMethod(
        Invocation.getter(#watchInLawUsecase),
        returnValue: _FakeWatchInLawUsecase_197(
          this,
          Invocation.getter(#watchInLawUsecase),
        ),
      ) as _i178.WatchInLawUsecase);
  @override
  _i179.WatchParentUsecase get watchParentUsecase => (super.noSuchMethod(
        Invocation.getter(#watchParentUsecase),
        returnValue: _FakeWatchParentUsecase_198(
          this,
          Invocation.getter(#watchParentUsecase),
        ),
      ) as _i179.WatchParentUsecase);
  @override
  _i180.WatchPartnerUsecase get watchPartnerUsecase => (super.noSuchMethod(
        Invocation.getter(#watchPartnerUsecase),
        returnValue: _FakeWatchPartnerUsecase_199(
          this,
          Invocation.getter(#watchPartnerUsecase),
        ),
      ) as _i180.WatchPartnerUsecase);
  @override
  _i181.WatchSiblingUsecase get watchSiblingUsecase => (super.noSuchMethod(
        Invocation.getter(#watchSiblingUsecase),
        returnValue: _FakeWatchSiblingUsecase_200(
          this,
          Invocation.getter(#watchSiblingUsecase),
        ),
      ) as _i181.WatchSiblingUsecase);
  @override
  _i182.WatchRelativeUsecase get watchRelativeUsecase => (super.noSuchMethod(
        Invocation.getter(#watchRelativeUsecase),
        returnValue: _FakeWatchRelativeUsecase_201(
          this,
          Invocation.getter(#watchRelativeUsecase),
        ),
      ) as _i182.WatchRelativeUsecase);
  @override
  _i183.GetAcquaintanceRelationshipPairUsecase
      get getAcquaintanceRelationshipPairUsecase => (super.noSuchMethod(
            Invocation.getter(#getAcquaintanceRelationshipPairUsecase),
            returnValue: _FakeGetAcquaintanceRelationshipPairUsecase_202(
              this,
              Invocation.getter(#getAcquaintanceRelationshipPairUsecase),
            ),
          ) as _i183.GetAcquaintanceRelationshipPairUsecase);
  @override
  _i184.GetChildRelationshipPairUsecase get getChildRelationshipPairUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getChildRelationshipPairUsecase),
        returnValue: _FakeGetChildRelationshipPairUsecase_203(
          this,
          Invocation.getter(#getChildRelationshipPairUsecase),
        ),
      ) as _i184.GetChildRelationshipPairUsecase);
  @override
  _i185.GetFriendRelationshipPairUsecase get getFriendRelationshipPairUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getFriendRelationshipPairUsecase),
        returnValue: _FakeGetFriendRelationshipPairUsecase_204(
          this,
          Invocation.getter(#getFriendRelationshipPairUsecase),
        ),
      ) as _i185.GetFriendRelationshipPairUsecase);
  @override
  _i186.GetGraveRelationshipPairUsecase get getGraveRelationshipPairUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getGraveRelationshipPairUsecase),
        returnValue: _FakeGetGraveRelationshipPairUsecase_205(
          this,
          Invocation.getter(#getGraveRelationshipPairUsecase),
        ),
      ) as _i186.GetGraveRelationshipPairUsecase);
  @override
  _i187.GetInLawRelationshipPairUsecase get getInLawRelationshipPairUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getInLawRelationshipPairUsecase),
        returnValue: _FakeGetInLawRelationshipPairUsecase_206(
          this,
          Invocation.getter(#getInLawRelationshipPairUsecase),
        ),
      ) as _i187.GetInLawRelationshipPairUsecase);
  @override
  _i188.GetParentRelationshipPairUsecase get getParentRelationshipPairUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getParentRelationshipPairUsecase),
        returnValue: _FakeGetParentRelationshipPairUsecase_207(
          this,
          Invocation.getter(#getParentRelationshipPairUsecase),
        ),
      ) as _i188.GetParentRelationshipPairUsecase);
  @override
  _i189.GetPartnerRelationshipPairUsecase
      get getPartnerRelationshipPairUsecase => (super.noSuchMethod(
            Invocation.getter(#getPartnerRelationshipPairUsecase),
            returnValue: _FakeGetPartnerRelationshipPairUsecase_208(
              this,
              Invocation.getter(#getPartnerRelationshipPairUsecase),
            ),
          ) as _i189.GetPartnerRelationshipPairUsecase);
  @override
  _i190.GetSiblingRelationshipPairUsecase
      get getSiblingRelationshipPairUsecase => (super.noSuchMethod(
            Invocation.getter(#getSiblingRelationshipPairUsecase),
            returnValue: _FakeGetSiblingRelationshipPairUsecase_209(
              this,
              Invocation.getter(#getSiblingRelationshipPairUsecase),
            ),
          ) as _i190.GetSiblingRelationshipPairUsecase);
  @override
  _i191.GetRelativeRelationshipPairUsecase
      get getRelativeRelationshipPairUsecase => (super.noSuchMethod(
            Invocation.getter(#getRelativeRelationshipPairUsecase),
            returnValue: _FakeGetRelativeRelationshipPairUsecase_210(
              this,
              Invocation.getter(#getRelativeRelationshipPairUsecase),
            ),
          ) as _i191.GetRelativeRelationshipPairUsecase);
  @override
  _i192.GetAnyRelationshipPairUsecase get getAnyRelationshipPairUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getAnyRelationshipPairUsecase),
        returnValue: _FakeGetAnyRelationshipPairUsecase_211(
          this,
          Invocation.getter(#getAnyRelationshipPairUsecase),
        ),
      ) as _i192.GetAnyRelationshipPairUsecase);
  @override
  _i193.GetRelationshipLevelFromAnyGivenRelationshipPairUsecase
      get getRelationshipLevelFromAnyGivenRelationshipPairUsecase =>
          (super.noSuchMethod(
            Invocation.getter(
                #getRelationshipLevelFromAnyGivenRelationshipPairUsecase),
            returnValue:
                _FakeGetRelationshipLevelFromAnyGivenRelationshipPairUsecase_212(
              this,
              Invocation.getter(
                  #getRelationshipLevelFromAnyGivenRelationshipPairUsecase),
            ),
          ) as _i193.GetRelationshipLevelFromAnyGivenRelationshipPairUsecase);
}

/// A class which mocks [ShopAndStorageUsecases].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopAndStorageUsecases extends _i1.Mock
    implements _i248.ShopAndStorageUsecases {
  MockShopAndStorageUsecases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i194.GetStoreroomItemPairsUsecase get getStoreroomItemPairsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getStoreroomItemPairsUsecase),
        returnValue: _FakeGetStoreroomItemPairsUsecase_213(
          this,
          Invocation.getter(#getStoreroomItemPairsUsecase),
        ),
      ) as _i194.GetStoreroomItemPairsUsecase);
  @override
  _i195.GetAvailbleStoreroomItemUsecase get getAvailbleStoreroomItemUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getAvailbleStoreroomItemUsecase),
        returnValue: _FakeGetAvailbleStoreroomItemUsecase_214(
          this,
          Invocation.getter(#getAvailbleStoreroomItemUsecase),
        ),
      ) as _i195.GetAvailbleStoreroomItemUsecase);
  @override
  _i196.UseStoreroomItemUsecase get useStoreroomItemUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#useStoreroomItemUsecase),
        returnValue: _FakeUseStoreroomItemUsecase_215(
          this,
          Invocation.getter(#useStoreroomItemUsecase),
        ),
      ) as _i196.UseStoreroomItemUsecase);
  @override
  _i197.GetCurrentCarUsecase get getCurrentCarUsecase => (super.noSuchMethod(
        Invocation.getter(#getCurrentCarUsecase),
        returnValue: _FakeGetCurrentCarUsecase_216(
          this,
          Invocation.getter(#getCurrentCarUsecase),
        ),
      ) as _i197.GetCurrentCarUsecase);
  @override
  _i198.GetCurrentHouseUsecase get getCurrentHouseUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getCurrentHouseUsecase),
        returnValue: _FakeGetCurrentHouseUsecase_217(
          this,
          Invocation.getter(#getCurrentHouseUsecase),
        ),
      ) as _i198.GetCurrentHouseUsecase);
  @override
  _i199.GetCarMaxConditionUsecase get getCarMaxConditionUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getCarMaxConditionUsecase),
        returnValue: _FakeGetCarMaxConditionUsecase_218(
          this,
          Invocation.getter(#getCarMaxConditionUsecase),
        ),
      ) as _i199.GetCarMaxConditionUsecase);
  @override
  _i200.DriveCarUsecase get driveCarUsecase => (super.noSuchMethod(
        Invocation.getter(#driveCarUsecase),
        returnValue: _FakeDriveCarUsecase_219(
          this,
          Invocation.getter(#driveCarUsecase),
        ),
      ) as _i200.DriveCarUsecase);
  @override
  _i201.CarIsNotDeadUsecase get carIsNotDeadUsecase => (super.noSuchMethod(
        Invocation.getter(#carIsNotDeadUsecase),
        returnValue: _FakeCarIsNotDeadUsecase_220(
          this,
          Invocation.getter(#carIsNotDeadUsecase),
        ),
      ) as _i201.CarIsNotDeadUsecase);
  @override
  _i202.SetAllPersonCarsToNotCurrentlyDrivingUsecase
      get setAllPersonCarsToNotCurrentlyDrivingUsecase => (super.noSuchMethod(
            Invocation.getter(#setAllPersonCarsToNotCurrentlyDrivingUsecase),
            returnValue: _FakeSetAllPersonCarsToNotCurrentlyDrivingUsecase_221(
              this,
              Invocation.getter(#setAllPersonCarsToNotCurrentlyDrivingUsecase),
            ),
          ) as _i202.SetAllPersonCarsToNotCurrentlyDrivingUsecase);
  @override
  _i203.UpdateCarUsecase get updateCarUsecase => (super.noSuchMethod(
        Invocation.getter(#updateCarUsecase),
        returnValue: _FakeUpdateCarUsecase_222(
          this,
          Invocation.getter(#updateCarUsecase),
        ),
      ) as _i203.UpdateCarUsecase);
  @override
  _i204.PurchaseCarFullyPaidUsecase get purchaseCarFullyPaidUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#purchaseCarFullyPaidUsecase),
        returnValue: _FakePurchaseCarFullyPaidUsecase_223(
          this,
          Invocation.getter(#purchaseCarFullyPaidUsecase),
        ),
      ) as _i204.PurchaseCarFullyPaidUsecase);
  @override
  _i205.AddFoodToFridgeUsecase get addFoodToFridgeUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addFoodToFridgeUsecase),
        returnValue: _FakeAddFoodToFridgeUsecase_224(
          this,
          Invocation.getter(#addFoodToFridgeUsecase),
        ),
      ) as _i205.AddFoodToFridgeUsecase);
  @override
  _i206.GetFoodRecordUsecase get getFoodRecordUsecase => (super.noSuchMethod(
        Invocation.getter(#getFoodRecordUsecase),
        returnValue: _FakeGetFoodRecordUsecase_225(
          this,
          Invocation.getter(#getFoodRecordUsecase),
        ),
      ) as _i206.GetFoodRecordUsecase);
  @override
  _i207.GetFridgeFoodCountUsecase get getFridgeFoodCountUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getFridgeFoodCountUsecase),
        returnValue: _FakeGetFridgeFoodCountUsecase_226(
          this,
          Invocation.getter(#getFridgeFoodCountUsecase),
        ),
      ) as _i207.GetFridgeFoodCountUsecase);
  @override
  _i208.PurchaseFoodUsecase get purchaseFoodUsecase => (super.noSuchMethod(
        Invocation.getter(#purchaseFoodUsecase),
        returnValue: _FakePurchaseFoodUsecase_227(
          this,
          Invocation.getter(#purchaseFoodUsecase),
        ),
      ) as _i208.PurchaseFoodUsecase);
  @override
  _i209.GetCurrentHouseStorageSpaceUsecase
      get getCurrentHouseStorageSpaceUsecase => (super.noSuchMethod(
            Invocation.getter(#getCurrentHouseStorageSpaceUsecase),
            returnValue: _FakeGetCurrentHouseStorageSpaceUsecase_228(
              this,
              Invocation.getter(#getCurrentHouseStorageSpaceUsecase),
            ),
          ) as _i209.GetCurrentHouseStorageSpaceUsecase);
  @override
  _i210.PurchaseHouseFullyPaidUsecase get purchaseHouseFullyPaidUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#purchaseHouseFullyPaidUsecase),
        returnValue: _FakePurchaseHouseFullyPaidUsecase_229(
          this,
          Invocation.getter(#purchaseHouseFullyPaidUsecase),
        ),
      ) as _i210.PurchaseHouseFullyPaidUsecase);
  @override
  _i211.AddItemToStoreroomUsecase get addItemToStoreroomUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addItemToStoreroomUsecase),
        returnValue: _FakeAddItemToStoreroomUsecase_230(
          this,
          Invocation.getter(#addItemToStoreroomUsecase),
        ),
      ) as _i211.AddItemToStoreroomUsecase);
  @override
  _i212.GetItemRecordUsecase get getItemRecordUsecase => (super.noSuchMethod(
        Invocation.getter(#getItemRecordUsecase),
        returnValue: _FakeGetItemRecordUsecase_231(
          this,
          Invocation.getter(#getItemRecordUsecase),
        ),
      ) as _i212.GetItemRecordUsecase);
  @override
  _i213.GetStoreroomItemCountUsecase get getStoreroomItemCountUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getStoreroomItemCountUsecase),
        returnValue: _FakeGetStoreroomItemCountUsecase_232(
          this,
          Invocation.getter(#getStoreroomItemCountUsecase),
        ),
      ) as _i213.GetStoreroomItemCountUsecase);
  @override
  _i214.PurchaseItemUsecase get purchaseItemUsecase => (super.noSuchMethod(
        Invocation.getter(#purchaseItemUsecase),
        returnValue: _FakePurchaseItemUsecase_233(
          this,
          Invocation.getter(#purchaseItemUsecase),
        ),
      ) as _i214.PurchaseItemUsecase);
  @override
  _i215.PurchaseJewelryUsecase get purchaseJewelryUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#purchaseJewelryUsecase),
        returnValue: _FakePurchaseJewelryUsecase_234(
          this,
          Invocation.getter(#purchaseJewelryUsecase),
        ),
      ) as _i215.PurchaseJewelryUsecase);
  @override
  _i216.RentHouseUsecase get rentHouseUsecase => (super.noSuchMethod(
        Invocation.getter(#rentHouseUsecase),
        returnValue: _FakeRentHouseUsecase_235(
          this,
          Invocation.getter(#rentHouseUsecase),
        ),
      ) as _i216.RentHouseUsecase);
  @override
  _i217.BreakOldLeaseSignNewLease get breakOldLeaseSignNewLease =>
      (super.noSuchMethod(
        Invocation.getter(#breakOldLeaseSignNewLease),
        returnValue: _FakeBreakOldLeaseSignNewLease_236(
          this,
          Invocation.getter(#breakOldLeaseSignNewLease),
        ),
      ) as _i217.BreakOldLeaseSignNewLease);
  @override
  _i218.EndLeaseUsecase get endLeaseUsecase => (super.noSuchMethod(
        Invocation.getter(#endLeaseUsecase),
        returnValue: _FakeEndLeaseUsecase_237(
          this,
          Invocation.getter(#endLeaseUsecase),
        ),
      ) as _i218.EndLeaseUsecase);
  @override
  _i219.SignLeaseForRentalUsecase get signLeaseForRentalUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#signLeaseForRentalUsecase),
        returnValue: _FakeSignLeaseForRentalUsecase_238(
          this,
          Invocation.getter(#signLeaseForRentalUsecase),
        ),
      ) as _i219.SignLeaseForRentalUsecase);
  @override
  _i220.MoveStorageToNewHouseUsecase get moveStorageToNewHouseUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#moveStorageToNewHouseUsecase),
        returnValue: _FakeMoveStorageToNewHouseUsecase_239(
          this,
          Invocation.getter(#moveStorageToNewHouseUsecase),
        ),
      ) as _i220.MoveStorageToNewHouseUsecase);
  @override
  _i221.UseFoodUsecase get useFoodUsecase => (super.noSuchMethod(
        Invocation.getter(#useFoodUsecase),
        returnValue: _FakeUseFoodUsecase_240(
          this,
          Invocation.getter(#useFoodUsecase),
        ),
      ) as _i221.UseFoodUsecase);
  @override
  _i222.GetAllPersonFridgeFoodPairsUsecase
      get getAllPersonFridgeFoodPairsUsecase => (super.noSuchMethod(
            Invocation.getter(#getAllPersonFridgeFoodPairsUsecase),
            returnValue: _FakeGetAllPersonFridgeFoodPairsUsecase_241(
              this,
              Invocation.getter(#getAllPersonFridgeFoodPairsUsecase),
            ),
          ) as _i222.GetAllPersonFridgeFoodPairsUsecase);
  @override
  _i223.PurchaseCarWithLoanUsecase get purchaseCarWithLoanUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#purchaseCarWithLoanUsecase),
        returnValue: _FakePurchaseCarWithLoanUsecase_242(
          this,
          Invocation.getter(#purchaseCarWithLoanUsecase),
        ),
      ) as _i223.PurchaseCarWithLoanUsecase);
  @override
  _i224.PurchaseHouseWithLoanUsecase get purchaseHouseWithLoanUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#purchaseHouseWithLoanUsecase),
        returnValue: _FakePurchaseHouseWithLoanUsecase_243(
          this,
          Invocation.getter(#purchaseHouseWithLoanUsecase),
        ),
      ) as _i224.PurchaseHouseWithLoanUsecase);
  @override
  _i225.SignMortgageLoanContract get signMortgageLoanContract =>
      (super.noSuchMethod(
        Invocation.getter(#signMortgageLoanContract),
        returnValue: _FakeSignMortgageLoanContract_244(
          this,
          Invocation.getter(#signMortgageLoanContract),
        ),
      ) as _i225.SignMortgageLoanContract);
  @override
  _i226.AddLocationToBuildingsUsecase get addLocationToBuildingsUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#addLocationToBuildingsUsecase),
        returnValue: _FakeAddLocationToBuildingsUsecase_245(
          this,
          Invocation.getter(#addLocationToBuildingsUsecase),
        ),
      ) as _i226.AddLocationToBuildingsUsecase);
  @override
  _i227.GetPurchaseHousesUsecase get getPurchaseHousesUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getPurchaseHousesUsecase),
        returnValue: _FakeGetPurchaseHousesUsecase_246(
          this,
          Invocation.getter(#getPurchaseHousesUsecase),
        ),
      ) as _i227.GetPurchaseHousesUsecase);
  @override
  _i228.GetRentalHousesUsecase get getRentalHousesUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getRentalHousesUsecase),
        returnValue: _FakeGetRentalHousesUsecase_247(
          this,
          Invocation.getter(#getRentalHousesUsecase),
        ),
      ) as _i228.GetRentalHousesUsecase);
  @override
  _i229.MoveIntoNewHouseUsecase get moveIntoNewHouseUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#moveIntoNewHouseUsecase),
        returnValue: _FakeMoveIntoNewHouseUsecase_248(
          this,
          Invocation.getter(#moveIntoNewHouseUsecase),
        ),
      ) as _i229.MoveIntoNewHouseUsecase);
  @override
  _i230.DeleteCurrentHomeUsecase get deleteCurrentHomeUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#deleteCurrentHomeUsecase),
        returnValue: _FakeDeleteCurrentHomeUsecase_249(
          this,
          Invocation.getter(#deleteCurrentHomeUsecase),
        ),
      ) as _i230.DeleteCurrentHomeUsecase);
  @override
  _i231.GetAllPeopleInAHouseUsecase get getAllPeopleInAHouseUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#getAllPeopleInAHouseUsecase),
        returnValue: _FakeGetAllPeopleInAHouseUsecase_250(
          this,
          Invocation.getter(#getAllPeopleInAHouseUsecase),
        ),
      ) as _i231.GetAllPeopleInAHouseUsecase);
  @override
  _i232.GetCurrentHomeUsecase get getCurrentHomeUsecase => (super.noSuchMethod(
        Invocation.getter(#getCurrentHomeUsecase),
        returnValue: _FakeGetCurrentHomeUsecase_251(
          this,
          Invocation.getter(#getCurrentHomeUsecase),
        ),
      ) as _i232.GetCurrentHomeUsecase);
  @override
  _i233.SetCurrentHomeUsecase get setCurrentHomeUsecase => (super.noSuchMethod(
        Invocation.getter(#setCurrentHomeUsecase),
        returnValue: _FakeSetCurrentHomeUsecase_252(
          this,
          Invocation.getter(#setCurrentHomeUsecase),
        ),
      ) as _i233.SetCurrentHomeUsecase);
  @override
  _i234.WatchAllPeopleInAHouseUsecase get watchAllPeopleInAHouseUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchAllPeopleInAHouseUsecase),
        returnValue: _FakeWatchAllPeopleInAHouseUsecase_253(
          this,
          Invocation.getter(#watchAllPeopleInAHouseUsecase),
        ),
      ) as _i234.WatchAllPeopleInAHouseUsecase);
  @override
  _i235.WatchCurrentHomeUsecase get watchCurrentHomeUsecase =>
      (super.noSuchMethod(
        Invocation.getter(#watchCurrentHomeUsecase),
        returnValue: _FakeWatchCurrentHomeUsecase_254(
          this,
          Invocation.getter(#watchCurrentHomeUsecase),
        ),
      ) as _i235.WatchCurrentHomeUsecase);
}
