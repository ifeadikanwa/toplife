import 'package:flutter_test/flutter_test.dart';
import 'package:toplife/core/data_source/drift_database/database_provider.dart';
import 'package:toplife/main_systems/system_journal/constants/journal_characters.dart';
import 'package:toplife/main_systems/system_relationship/constants/informal_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/constants/parent_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/info_models/relationship_pair.dart';
import 'package:toplife/main_systems/system_relationship/util/rearrange_parents_list.dart';

void main() {
  group("rearrangeParentsList:", () {
    test(
        "given a parents list in the order grand -> main -> step rearrange list in the order main -> step -> grand",
        () {
      List<RelationshipPair<Parent>> givenParentList = [
        RelationshipPair(
          relationship: Parent(
            hidden: false,
            paternityFraud: false,
            assumedRelationshipType: JournalCharacters.emptyString,
            mainPersonId: 1,
            parentId: 2,
            parentRelationshipType: ParentRelationshipType.grand.name,
            relationship: 34,
            isActive: true,
            interestedInRelationship: true,
          ),
          person: const Person(
            id: 1,
            gameId: 2,
            hasDriversLicense: false,
            firstName: "Sam",
            lastName: "Johnson",
            dayOfBirth: 34,
            gender: "gender",
            subjectPronoun: "subjectPronoun",
            objectPronoun: "objectPronoun",
            possessivePronoun: "possessivePronoun",
            sexuality: "sexuality",
            birthState: "Ontario",
            birthCountry: "Canada",
            currentState: "Ontario",
            currentCountry: "Canada",
            money: 20,
            emotionalState: "normal",
            zodiacSign: "zodiacSign",
            transportMode: "bus",
            hasFertilityIssues: true,
            onBirthControl: false,
            isSterile: false,
            sickly: true,
            dead: false,
          ),
          informalRelationshipType: InformalRelationshipType.parent,
        ),
        RelationshipPair(
          relationship: Parent(
            hidden: false,
            paternityFraud: false,
            assumedRelationshipType: JournalCharacters.emptyString,
            mainPersonId: 1,
            parentId: 2,
            parentRelationshipType: ParentRelationshipType.main.name,
            relationship: 34,
            isActive: true,
            interestedInRelationship: true,
          ),
          person: const Person(
            id: 1,
            gameId: 2,
            hasDriversLicense: false,
            firstName: "Sam",
            lastName: "Johnson",
            dayOfBirth: 34,
            gender: "gender",
            subjectPronoun: "subjectPronoun",
            objectPronoun: "objectPronoun",
            possessivePronoun: "possessivePronoun",
            sexuality: "sexuality",
            birthState: "Ontario",
            birthCountry: "Canada",
            currentState: "Ontario",
            currentCountry: "Canada",
            money: 20,
            emotionalState: "normal",
            zodiacSign: "zodiacSign",
            transportMode: "bus",
            hasFertilityIssues: true,
            onBirthControl: false,
            isSterile: false,
            sickly: true,
            dead: false,
          ),
          informalRelationshipType: InformalRelationshipType.parent,
        ),
        RelationshipPair(
          relationship: Parent(
            hidden: false,
            paternityFraud: false,
            assumedRelationshipType: JournalCharacters.emptyString,
            mainPersonId: 1,
            parentId: 2,
            parentRelationshipType: ParentRelationshipType.step.name,
            relationship: 34,
            isActive: true,
            interestedInRelationship: true,
          ),
          person: const Person(
            id: 1,
            gameId: 2,
            hasDriversLicense: false,
            firstName: "Sam",
            lastName: "Johnson",
            dayOfBirth: 34,
            gender: "gender",
            subjectPronoun: "subjectPronoun",
            objectPronoun: "objectPronoun",
            possessivePronoun: "possessivePronoun",
            sexuality: "sexuality",
            birthState: "Ontario",
            birthCountry: "Canada",
            currentState: "Ontario",
            currentCountry: "Canada",
            money: 20,
            emotionalState: "normal",
            zodiacSign: "zodiacSign",
            transportMode: "bus",
            hasFertilityIssues: true,
            onBirthControl: false,
            isSterile: false,
            sickly: true,
            dead: false,
          ),
          informalRelationshipType: InformalRelationshipType.parent,
        ),
      ];

      List<RelationshipPair<Parent>> correctParentList = [
        RelationshipPair(
          relationship: Parent(
            hidden: false,
            paternityFraud: false,
            assumedRelationshipType: JournalCharacters.emptyString,
            mainPersonId: 1,
            parentId: 2,
            parentRelationshipType: ParentRelationshipType.main.name,
            relationship: 34,
            isActive: true,
            interestedInRelationship: true,
          ),
          person: const Person(
            id: 1,
            gameId: 2,
            hasDriversLicense: false,
            firstName: "Sam",
            lastName: "Johnson",
            dayOfBirth: 34,
            gender: "gender",
            subjectPronoun: "subjectPronoun",
            objectPronoun: "objectPronoun",
            possessivePronoun: "possessivePronoun",
            sexuality: "sexuality",
            birthState: "Ontario",
            birthCountry: "Canada",
            currentState: "Ontario",
            currentCountry: "Canada",
            money: 20,
            emotionalState: "normal",
            zodiacSign: "zodiacSign",
            transportMode: "bus",
            hasFertilityIssues: true,
            onBirthControl: false,
            isSterile: false,
            sickly: true,
            dead: false,
          ),
          informalRelationshipType: InformalRelationshipType.parent,
        ),
        RelationshipPair(
          relationship: Parent(
            hidden: false,
            paternityFraud: false,
            assumedRelationshipType: JournalCharacters.emptyString,
            mainPersonId: 1,
            parentId: 2,
            parentRelationshipType: ParentRelationshipType.step.name,
            relationship: 34,
            isActive: true,
            interestedInRelationship: true,
          ),
          person: const Person(
            id: 1,
            gameId: 2,
            hasDriversLicense: false,
            firstName: "Sam",
            lastName: "Johnson",
            dayOfBirth: 34,
            gender: "gender",
            subjectPronoun: "subjectPronoun",
            objectPronoun: "objectPronoun",
            possessivePronoun: "possessivePronoun",
            sexuality: "sexuality",
            birthState: "Ontario",
            birthCountry: "Canada",
            currentState: "Ontario",
            currentCountry: "Canada",
            money: 20,
            emotionalState: "normal",
            zodiacSign: "zodiacSign",
            transportMode: "bus",
            hasFertilityIssues: true,
            onBirthControl: false,
            isSterile: false,
            sickly: true,
            dead: false,
          ),
          informalRelationshipType: InformalRelationshipType.parent,
        ),
        RelationshipPair(
          relationship: Parent(
            hidden: false,
            paternityFraud: false,
            assumedRelationshipType: JournalCharacters.emptyString,
            mainPersonId: 1,
            parentId: 2,
            parentRelationshipType: ParentRelationshipType.grand.name,
            relationship: 34,
            isActive: true,
            interestedInRelationship: true,
          ),
          person: const Person(
            id: 1,
            gameId: 2,
            hasDriversLicense: false,
            firstName: "Sam",
            lastName: "Johnson",
            dayOfBirth: 34,
            gender: "gender",
            subjectPronoun: "subjectPronoun",
            objectPronoun: "objectPronoun",
            possessivePronoun: "possessivePronoun",
            sexuality: "sexuality",
            birthState: "Ontario",
            birthCountry: "Canada",
            currentState: "Ontario",
            currentCountry: "Canada",
            money: 20,
            emotionalState: "normal",
            zodiacSign: "zodiacSign",
            transportMode: "bus",
            hasFertilityIssues: true,
            onBirthControl: false,
            isSterile: false,
            sickly: true,
            dead: false,
          ),
          informalRelationshipType: InformalRelationshipType.parent,
        ),
      ];

      final resultParentList = rearrangeParentsList(givenParentList);

      expect(resultParentList[0], correctParentList[0],
          reason: "Cause: index 0");
      expect(resultParentList[1], correctParentList[1],
          reason: "Cause: index 1");
      expect(resultParentList[2], correctParentList[2],
          reason: "Cause: index 2");
    });
  });
}
