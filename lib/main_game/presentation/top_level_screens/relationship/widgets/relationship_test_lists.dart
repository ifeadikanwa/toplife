import 'package:toplife/main_systems/system_person/constants/gender.dart';
import 'package:toplife/main_systems/system_person/domain/model/person.dart';
import 'package:toplife/main_systems/system_relationship/constants/child_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/constants/inlaw_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/constants/parent_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/constants/partner_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/constants/relative_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/constants/sibling_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/child.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/friend.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/graveyard.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/info_models/relationship_pair.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/inlaw.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/parent.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/partner.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/relative.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/sibling.dart';

class RelationshipTestLists {
  static final testChildrenList = [
    RelationshipPair(
      relationship: Child(
          mainPersonID: 1,
          childID: 2,
          inYourCustody: true,
          childRelationshipType: ChildRelationshipType.adopted.name,
          relationship: 45),
      person: Person(
        firstName: "Janet",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Child(
          mainPersonID: 1,
          childID: 2,
          inYourCustody: false,
          childRelationshipType: ChildRelationshipType.step.name,
          relationship: 45),
      person: Person(
        firstName: "Sam",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Child(
          mainPersonID: 1,
          childID: 2,
          inYourCustody: true,
          childRelationshipType: ChildRelationshipType.birth.name,
          relationship: 45),
      person: Person(
        firstName: "Cynthia",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
  ];

  static final testExesList = [
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.casual.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Janet",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.casual.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Sam",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.married.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Cynthia",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.married.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Jim",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.dating.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Mary",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.dating.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Xavier",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.engaged.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Natalie",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.engaged.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Ted",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
  ];

  static final testFriendsList = [
    RelationshipPair(
      relationship: const Friend(
          mainPersonID: 1, friendID: 2, metAt: "metAt", relationship: 66),
      person: Person(
        firstName: "Janet",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: const Friend(
          mainPersonID: 1, friendID: 2, metAt: "metAt", relationship: 66),
      person: Person(
        firstName: "Sam",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: const Friend(
          mainPersonID: 1, friendID: 2, metAt: "metAt", relationship: 66),
      person: Person(
        firstName: "Cynthia",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
  ];

  static const testGraveyards = [
    Graveyard(
      mainPersonID: 1,
      deadPersonID: 2,
      relationshipType: "Mother",
      dayOfDeath: 45,
      fullName: "Fiona Merril",
      ageAtDeath: "Element",
    ),
    Graveyard(
      mainPersonID: 1,
      deadPersonID: 2,
      relationshipType: "Father",
      dayOfDeath: 45,
      fullName: "Hewie Merril",
      ageAtDeath: "Element",
    ),
    Graveyard(
      mainPersonID: 1,
      deadPersonID: 2,
      relationshipType: "Son",
      dayOfDeath: 45,
      fullName: "Jack Merril",
      ageAtDeath: "Element",
    ),
  ];

  static final testInLawsList = [
    RelationshipPair(
      relationship: InLaw(
          mainPersonID: 1,
          inLawID: 2,
          likesMainPerson: true,
          inLawRelationshipType: InLawRelationshipType.sibling.name,
          relationship: 89),
      person: Person(
        firstName: "Janet",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: InLaw(
          mainPersonID: 1,
          inLawID: 2,
          likesMainPerson: true,
          inLawRelationshipType: InLawRelationshipType.child.name,
          relationship: 89),
      person: Person(
        firstName: "Sam",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: InLaw(
          mainPersonID: 1,
          inLawID: 2,
          likesMainPerson: true,
          inLawRelationshipType: InLawRelationshipType.child.name,
          relationship: 89),
      person: Person(
        firstName: "Cynthia",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: InLaw(
          mainPersonID: 1,
          inLawID: 2,
          likesMainPerson: true,
          inLawRelationshipType: InLawRelationshipType.child.name,
          relationship: 89),
      person: Person(
        firstName: "Jim",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: InLaw(
          mainPersonID: 1,
          inLawID: 2,
          likesMainPerson: true,
          inLawRelationshipType: InLawRelationshipType.parent.name,
          relationship: 89),
      person: Person(
        firstName: "Mary",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: InLaw(
          mainPersonID: 1,
          inLawID: 2,
          likesMainPerson: true,
          inLawRelationshipType: InLawRelationshipType.sibling.name,
          relationship: 89),
      person: Person(
        firstName: "Xavier",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: InLaw(
          mainPersonID: 1,
          inLawID: 2,
          likesMainPerson: true,
          inLawRelationshipType: InLawRelationshipType.sibling.name,
          relationship: 89),
      person: Person(
        firstName: "Natalie",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: InLaw(
          mainPersonID: 1,
          inLawID: 2,
          likesMainPerson: true,
          inLawRelationshipType: InLawRelationshipType.parent.name,
          relationship: 89),
      person: Person(
        firstName: "Ted",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
  ];

  static final testParentsList = [
    RelationshipPair(
      relationship: Parent(
          mainPersonID: 1,
          parentID: 2,
          parentRelationshipType: ParentRelationshipType.grand.name,
          relationship: 34,
          isActive: true),
      person: Person(
        firstName: "Janet",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Parent(
          mainPersonID: 1,
          parentID: 2,
          parentRelationshipType: ParentRelationshipType.main.name,
          relationship: 34,
          isActive: true),
      person: Person(
        firstName: "Sam",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Parent(
          mainPersonID: 1,
          parentID: 2,
          parentRelationshipType: ParentRelationshipType.step.name,
          relationship: 34,
          isActive: true),
      person: Person(
        firstName: "Cynthia",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Parent(
          mainPersonID: 1,
          parentID: 2,
          parentRelationshipType: ParentRelationshipType.grand.name,
          relationship: 34,
          isActive: true),
      person: Person(
        firstName: "Jim",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Parent(
          mainPersonID: 1,
          parentID: 2,
          parentRelationshipType: ParentRelationshipType.main.name,
          relationship: 34,
          isActive: true),
      person: Person(
        firstName: "Mary",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Parent(
          mainPersonID: 1,
          parentID: 2,
          parentRelationshipType: ParentRelationshipType.step.name,
          relationship: 34,
          isActive: true),
      person: Person(
        firstName: "Xavier",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Parent(
          mainPersonID: 1,
          parentID: 2,
          parentRelationshipType: ParentRelationshipType.grand.name,
          relationship: 34,
          isActive: true),
      person: Person(
        firstName: "Natalie",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Parent(
          mainPersonID: 1,
          parentID: 2,
          parentRelationshipType: ParentRelationshipType.step.name,
          relationship: 34,
          isActive: true),
      person: Person(
        firstName: "Ted",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
  ];

  static final testPartnersList = [
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.casual.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Janet",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.casual.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Sam",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.married.name,
        isActive: true,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Cynthia",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.married.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Jim",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.dating.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Mary",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.dating.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Xavier",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.engaged.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Natalie",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Partner(
        mainPersonID: 1,
        partnerID: 2,
        partnerRelationshipType: PartnerRelationshipType.engaged.name,
        isActive: false,
        startDay: 34,
        isCoParent: true,
        metAt: "metAt",
        relationship: 68,
      ),
      person: Person(
        firstName: "Ted",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
  ];

  static final testRelativesList = [
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.grandchild.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Janet",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.nibling.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Sam",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.pibling.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Stella",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.grandchild.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Cynthia",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.cousin.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Jarvis",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.grandchild.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Jim",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.pibling.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Mark",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.nibling.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Mary",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.grandchild.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Xavier",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.nibling.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Natalie",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Relative(
        mainPersonID: 1,
        relativeID: 2,
        inYourCustody: true,
        relativeRelationshipType: RelativeRelationshipType.grandchild.name,
        relationship: 56,
      ),
      person: Person(
        firstName: "Ted",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
  ];

  static final testSiblingList = [
    RelationshipPair(
      relationship: Sibling(
        mainPersonID: 1,
        siblingID: 2,
        siblingRelationshipType: SiblingRelationshipType.step.name,
        relationship: 80,
      ),
      person: Person(
        firstName: "Janet",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Sibling(
        mainPersonID: 1,
        siblingID: 2,
        siblingRelationshipType: SiblingRelationshipType.full.name,
        relationship: 57,
      ),
      person: Person(
        firstName: "Sam",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Male.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
    RelationshipPair(
      relationship: Sibling(
        mainPersonID: 1,
        siblingID: 2,
        siblingRelationshipType: SiblingRelationshipType.half.name,
        relationship: 14,
      ),
      person: Person(
        firstName: "Cynthia",
        lastName: "Johnson",
        dayOfBirth: 34,
        gender: Gender.Female.name,
        subjectPronoun: "subjectPronoun",
        objectPronoun: "objectPronoun",
        sexuality: "sexuality",
        state: "state",
        country: "country",
        zodiacSign: "zodiacSign",
        transportMode: "bus",
        hasFertilityIssues: true,
        onBirthControl: false,
        isSterile: false,
        sickly: true,
        rebellious: false,
        dead: false,
        possessivePronoun: "possessivePronoun",
        money: 750,
      ),
    ),
  ];
}
