import 'package:flutter/material.dart';
import 'package:toplife/config/theme/app_theme.dart';
import 'package:toplife/core/common_widgets/scaffold_with_bottom_nav_bar/bottom_navigation_bar.dart';
import 'package:toplife/main_game/presentation/top_level_screens/relationship/widgets/sub_screens/partners_screen.dart';
import 'package:toplife/main_systems/system_person/constants/gender.dart';
import 'package:toplife/main_systems/system_person/domain/model/person.dart';
import 'package:toplife/main_systems/system_relationship/constants/partner_relationship_type.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/helper_models/relationship_pair.dart';
import 'package:toplife/main_systems/system_relationship/domain/model/partner.dart';

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      theme: AppTheme.lightTheme,
      home: Scaffold(
        bottomNavigationBar: const BottomNavBar(),
        body: SafeArea(
          child: PartnersScreen(
            partners: [
              RelationshipPair(
                relationship: Partner(
                  mainPersonID: 1,
                  partnerID: 2,
                  partnerRelationshipType: PartnerRelationshipType.casual.name,
                  isActive: false,
                  startDay: 34,
                  isCoParent: true,
                  metAt: "metAt",
                  relationship: 68,
                ),
                person: Person(
                  firstName: "Janet",
                  lastName: "Johnson",
                  dayOfBirth: 34,
                  gender: Gender.Female.name,
                  subjectPronoun: "subjectPronoun",
                  objectPronoun: "objectPronoun",
                  sexuality: "sexuality",
                  state: "state",
                  country: "country",
                  zodiacSign: "zodiacSign",
                  hasFertilityIssues: true,
                  onBirthControl: false,
                  isSterile: false,
                  sickly: true,
                  rebellious: false,
                  dead: false,
                ),
              ),
              RelationshipPair(
                relationship: Partner(
                  mainPersonID: 1,
                  partnerID: 2,
                  partnerRelationshipType: PartnerRelationshipType.casual.name,
                  isActive: false,
                  startDay: 34,
                  isCoParent: true,
                  metAt: "metAt",
                  relationship: 68,
                ),
                person: Person(
                  firstName: "Sam",
                  lastName: "Johnson",
                  dayOfBirth: 34,
                  gender: Gender.Male.name,
                  subjectPronoun: "subjectPronoun",
                  objectPronoun: "objectPronoun",
                  sexuality: "sexuality",
                  state: "state",
                  country: "country",
                  zodiacSign: "zodiacSign",
                  hasFertilityIssues: true,
                  onBirthControl: false,
                  isSterile: false,
                  sickly: true,
                  rebellious: false,
                  dead: false,
                ),
              ),
              RelationshipPair(
                relationship: Partner(
                  mainPersonID: 1,
                  partnerID: 2,
                  partnerRelationshipType:
                      PartnerRelationshipType.marriage.name,
                  isActive: true,
                  startDay: 34,
                  isCoParent: true,
                  metAt: "metAt",
                  relationship: 68,
                ),
                person: Person(
                  firstName: "Cynthia",
                  lastName: "Johnson",
                  dayOfBirth: 34,
                  gender: Gender.Female.name,
                  subjectPronoun: "subjectPronoun",
                  objectPronoun: "objectPronoun",
                  sexuality: "sexuality",
                  state: "state",
                  country: "country",
                  zodiacSign: "zodiacSign",
                  hasFertilityIssues: true,
                  onBirthControl: false,
                  isSterile: false,
                  sickly: true,
                  rebellious: false,
                  dead: false,
                ),
              ),
              RelationshipPair(
                relationship: Partner(
                  mainPersonID: 1,
                  partnerID: 2,
                  partnerRelationshipType:
                      PartnerRelationshipType.marriage.name,
                  isActive: false,
                  startDay: 34,
                  isCoParent: true,
                  metAt: "metAt",
                  relationship: 68,
                ),
                person: Person(
                  firstName: "Jim",
                  lastName: "Johnson",
                  dayOfBirth: 34,
                  gender: Gender.Male.name,
                  subjectPronoun: "subjectPronoun",
                  objectPronoun: "objectPronoun",
                  sexuality: "sexuality",
                  state: "state",
                  country: "country",
                  zodiacSign: "zodiacSign",
                  hasFertilityIssues: true,
                  onBirthControl: false,
                  isSterile: false,
                  sickly: true,
                  rebellious: false,
                  dead: false,
                ),
              ),
              RelationshipPair(
                relationship: Partner(
                  mainPersonID: 1,
                  partnerID: 2,
                  partnerRelationshipType: PartnerRelationshipType.dating.name,
                  isActive: false,
                  startDay: 34,
                  isCoParent: true,
                  metAt: "metAt",
                  relationship: 68,
                ),
                person: Person(
                  firstName: "Mary",
                  lastName: "Johnson",
                  dayOfBirth: 34,
                  gender: Gender.Female.name,
                  subjectPronoun: "subjectPronoun",
                  objectPronoun: "objectPronoun",
                  sexuality: "sexuality",
                  state: "state",
                  country: "country",
                  zodiacSign: "zodiacSign",
                  hasFertilityIssues: true,
                  onBirthControl: false,
                  isSterile: false,
                  sickly: true,
                  rebellious: false,
                  dead: false,
                ),
              ),
              RelationshipPair(
                relationship: Partner(
                  mainPersonID: 1,
                  partnerID: 2,
                  partnerRelationshipType: PartnerRelationshipType.dating.name,
                  isActive: false,
                  startDay: 34,
                  isCoParent: true,
                  metAt: "metAt",
                  relationship: 68,
                ),
                person: Person(
                  firstName: "Xavier",
                  lastName: "Johnson",
                  dayOfBirth: 34,
                  gender: Gender.Male.name,
                  subjectPronoun: "subjectPronoun",
                  objectPronoun: "objectPronoun",
                  sexuality: "sexuality",
                  state: "state",
                  country: "country",
                  zodiacSign: "zodiacSign",
                  hasFertilityIssues: true,
                  onBirthControl: false,
                  isSterile: false,
                  sickly: true,
                  rebellious: false,
                  dead: false,
                ),
              ),
              RelationshipPair(
                relationship: Partner(
                  mainPersonID: 1,
                  partnerID: 2,
                  partnerRelationshipType: PartnerRelationshipType.engaged.name,
                  isActive: false,
                  startDay: 34,
                  isCoParent: true,
                  metAt: "metAt",
                  relationship: 68,
                ),
                person: Person(
                  firstName: "Natalie",
                  lastName: "Johnson",
                  dayOfBirth: 34,
                  gender: Gender.Female.name,
                  subjectPronoun: "subjectPronoun",
                  objectPronoun: "objectPronoun",
                  sexuality: "sexuality",
                  state: "state",
                  country: "country",
                  zodiacSign: "zodiacSign",
                  hasFertilityIssues: true,
                  onBirthControl: false,
                  isSterile: false,
                  sickly: true,
                  rebellious: false,
                  dead: false,
                ),
              ),
              RelationshipPair(
                relationship: Partner(
                  mainPersonID: 1,
                  partnerID: 2,
                  partnerRelationshipType: PartnerRelationshipType.engaged.name,
                  isActive: false,
                  startDay: 34,
                  isCoParent: true,
                  metAt: "metAt",
                  relationship: 68,
                ),
                person: Person(
                  firstName: "Ted",
                  lastName: "Johnson",
                  dayOfBirth: 34,
                  gender: Gender.Male.name,
                  subjectPronoun: "subjectPronoun",
                  objectPronoun: "objectPronoun",
                  sexuality: "sexuality",
                  state: "state",
                  country: "country",
                  zodiacSign: "zodiacSign",
                  hasFertilityIssues: true,
                  onBirthControl: false,
                  isSterile: false,
                  sickly: true,
                  rebellious: false,
                  dead: false,
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
